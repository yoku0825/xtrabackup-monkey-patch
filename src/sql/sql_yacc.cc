/* A Bison parser, made by GNU Bison 3.5.1.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2020 Free Software Foundation,
   Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Undocumented macros, especially those whose name start with YY_,
   are private implementation details.  Do not rely on them.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.5.1"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1

/* Substitute the type names.  */
#define YYSTYPE         MY_SQL_PARSER_STYPE
#define YYLTYPE         MY_SQL_PARSER_LTYPE
/* Substitute the variable and function names.  */
#define yyparse         my_sql_parser_parse
#define yylex           my_sql_parser_lex
#define yyerror         my_sql_parser_error
#define yydebug         my_sql_parser_debug
#define yynerrs         my_sql_parser_nerrs

/* First part of user prologue.  */
#line 32 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)
#define YYCLIENT_NO_SCHEMA (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_query_block()

#include <sys/types.h>  // TODO: replace with cstdint

#include <algorithm>
#include <cerrno>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <limits>
#include <memory>
#include <string>
#include <type_traits>
#include <utility>

#include "field_types.h"
#include "ft_global.h"
#include "lex_string.h"
#include "mysql/binlog/event/binlog_event.h"
#include "m_string.h"
#include "my_alloc.h"
#include "my_base.h"
#include "my_check_opt.h"
#include "my_dbug.h"
#include "my_inttypes.h"  // TODO: replace with cstdint
#include "my_sqlcommand.h"
#include "my_sys.h"
#include "my_thread_local.h"
#include "my_time.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/mysql_lex_string.h"
#include "mysql/plugin.h"
#include "mysql/strings/m_ctype.h"
#include "mysql/udf_registration_types.h"
#include "mysql_com.h"
#include "mysql_time.h"
#include "mysqld_error.h"
#include "prealloced_array.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/create_field.h"
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/dd/types/column.h"
#include "sql/derror.h"
#include "sql/event_parse_data.h"
#include "sql/field.h"
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/handler.h"
#include "sql/item.h"
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_func.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/item_row.h"
#include "sql/item_strfunc.h"
#include "sql/item_subselect.h"
#include "sql/item_sum.h"
#include "sql/item_timefunc.h"
#include "sql-common/json_dom.h"
#include "sql-common/json_syntax_check.h"           // is_valid_json_syntax
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/lexer_yystype.h"
#include "sql/mdl.h"
#include "sql/mem_root_array.h"
#include "sql/mysqld.h"
#include "sql/options_mysqld.h"
#include "sql/parse_location.h"
#include "sql/parse_tree_helpers.h"
#include "sql/parse_tree_node_base.h"
#include "sql/parser_yystype.h"
#include "sql/partition_element.h"
#include "sql/partition_info.h"
#include "sql/protocol.h"
#include "sql/query_options.h"
#include "sql/resourcegroups/platform/thread_attrs_api.h"
#include "sql/resourcegroups/resource_group_basic_types.h"
#include "sql/rpl_filter.h"
#include "sql/rpl_replica.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/spatial.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_component.h"
#include "sql/sql_connect.h"
#include "sql/sql_error.h"
#include "sql/sql_exchange.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_lex.h"
#include "sql/sql_list.h"
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                      // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_udf.h"
#include "sql/system_variables.h"
#include "sql/table.h"
#include "sql/table_function.h"
#include "sql/thr_malloc.h"
#include "sql/trigger_def.h"
#include "sql/window_lex.h"
#include "sql/xa/sql_cmd_xa.h"                   // Sql_cmd_xa...
#include "sql_string.h"
#include "strcont.h"
#include "strings/sql_chars.h"
#include "strxnmov.h"
#include "thr_lock.h"
#include "violite.h"
#include "sql/tablesample.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int my_sql_parser_lex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(nullptr, YYTHD, nullptr, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)

#define CONTEXTUALIZE_VIEW(x)                           \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
    if (pc.finalize_query_expression())                                 \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be nullptr because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)

/**
  Many commands have a dedicated sub-class of Sql_cmd that
  has an execute() method that contains their code.
  Other commands' code is in sql_parse.cc's mysql_execute_command().
  For this last type of command, we can still create a
  dummy Sql_cmd object that won't have its execute(),
  well, executed, but may provide other valuable information
  such as their sql_cmd_type().
*/
#define MAKE_CMD_DCL_DUMMY()                           \
  do                                                   \
  {                                                    \
    assert(Lex->m_sql_cmd == nullptr);                 \
    Lex->m_sql_cmd= NEW_PTN Sql_cmd_dcl_dummy();       \
    if (!Lex->m_sql_cmd)                               \
      MYSQL_YYABORT;                                   \
    ((Sql_cmd_dcl_dummy *) Lex->m_sql_cmd)             \
      ->set_sql_command_code(Lex->sql_command);        \
  } while(0)

#define MAKE_CMD_DDL_DUMMY()                           \
  do                                                   \
  {                                                    \
    assert(Lex->m_sql_cmd == nullptr);                 \
    Lex->m_sql_cmd= NEW_PTN Sql_cmd_ddl_dummy();       \
    if (!Lex->m_sql_cmd)                               \
      MYSQL_YYABORT;                                   \
    ((Sql_cmd_ddl_dummy *) Lex->m_sql_cmd)             \
      ->set_sql_command_code(Lex->sql_command);        \
  } while(0)


#ifndef NDEBUG
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void my_sql_parser_error(YYLTYPE *location,
                         THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    assert(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef NDEBUG
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0 ||
      native_strcasecmp(national_charset_info->csname, "utf8mb3") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}

void warn_on_deprecated_user_defined_collation(
    THD *thd, const LEX_STRING collation_name) {
  if (collation_name.length == 0)
    return;
  CHARSET_INFO *collation = mysqld_collation_get_by_name(collation_name.str);
  if (collation && !(collation->state & MY_CS_COMPILED)) {
    push_warning_printf(thd, Sql_condition::SL_WARNING,
                        ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS,
                        ER_THD(thd, ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS),
                        collation->m_coll_name);
  }
}

// ODR violation here as well, so rename yysymbol_kind_t
#define yysymbol_kind_t my_sql_parser_symbol_kind_t


#line 598 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"

# ifndef YY_CAST
#  ifdef __cplusplus
#   define YY_CAST(Type, Val) static_cast<Type> (Val)
#   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
#  else
#   define YY_CAST(Type, Val) ((Type) (Val))
#   define YY_REINTERPRET_CAST(Type, Val) ((Type) (Val))
#  endif
# endif
# ifndef YY_NULLPTR
#  if defined __cplusplus
#   if 201103L <= __cplusplus
#    define YY_NULLPTR nullptr
#   else
#    define YY_NULLPTR 0
#   endif
#  else
#   define YY_NULLPTR ((void*)0)
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Use api.header.include to #include this header
   instead of duplicating it here.  */
#ifndef YY_MY_SQL_PARSER_MNT_JENKINS_WORKSPACE_PERCONA_XTRABACKUP_8_0_RELEASE_TEST_PERCONA_XTRABACKUP_SQL_SQL_YACC_H_INCLUDED
# define YY_MY_SQL_PARSER_MNT_JENKINS_WORKSPACE_PERCONA_XTRABACKUP_8_0_RELEASE_TEST_PERCONA_XTRABACKUP_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef MY_SQL_PARSER_DEBUG
# if defined YYDEBUG
#if YYDEBUG
#   define MY_SQL_PARSER_DEBUG 1
#  else
#   define MY_SQL_PARSER_DEBUG 0
#  endif
# else /* ! defined YYDEBUG */
#  define MY_SQL_PARSER_DEBUG 0
# endif /* ! defined YYDEBUG */
#endif  /* ! defined MY_SQL_PARSER_DEBUG */
#if MY_SQL_PARSER_DEBUG
extern int my_sql_parser_debug;
#endif

/* Token type.  */
#ifndef MY_SQL_PARSER_TOKENTYPE
# define MY_SQL_PARSER_TOKENTYPE
  enum my_sql_parser_tokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE_SYM = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    OBSOLETE_TOKEN_550 = 550,
    OBSOLETE_TOKEN_551 = 551,
    OBSOLETE_TOKEN_552 = 552,
    OBSOLETE_TOKEN_553 = 553,
    OBSOLETE_TOKEN_554 = 554,
    OBSOLETE_TOKEN_555 = 555,
    OBSOLETE_TOKEN_556 = 556,
    OBSOLETE_TOKEN_557 = 557,
    OBSOLETE_TOKEN_558 = 558,
    OBSOLETE_TOKEN_559 = 559,
    OBSOLETE_TOKEN_561 = 561,
    OBSOLETE_TOKEN_562 = 562,
    OBSOLETE_TOKEN_563 = 563,
    OBSOLETE_TOKEN_564 = 564,
    OBSOLETE_TOKEN_565 = 565,
    OBSOLETE_TOKEN_566 = 566,
    OBSOLETE_TOKEN_567 = 567,
    OBSOLETE_TOKEN_568 = 568,
    OBSOLETE_TOKEN_569 = 569,
    OBSOLETE_TOKEN_570 = 570,
    MASTER_SYM = 571,
    OBSOLETE_TOKEN_572 = 572,
    OBSOLETE_TOKEN_573 = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    OBSOLETE_TOKEN_966 = 966,
    OBSOLETE_TOKEN_967 = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    OBSOLETE_TOKEN_989 = 989,
    OBSOLETE_TOKEN_990 = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    OBSOLETE_TOKEN_992 = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
    STREAM_SYM = 997,
    OFF_SYM = 998,
    RETURNING_SYM = 999,
    YYUNDEF = 1150,
    JSON_VALUE_SYM = 1151,
    TLS_SYM = 1152,
    ATTRIBUTE_SYM = 1153,
    ENGINE_ATTRIBUTE_SYM = 1154,
    SECONDARY_ENGINE_ATTRIBUTE_SYM = 1155,
    SOURCE_CONNECTION_AUTO_FAILOVER_SYM = 1156,
    ZONE_SYM = 1157,
    GRAMMAR_SELECTOR_DERIVED_EXPR = 1158,
    REPLICA_SYM = 1159,
    REPLICAS_SYM = 1160,
    ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM = 1161,
    GET_SOURCE_PUBLIC_KEY_SYM = 1162,
    SOURCE_AUTO_POSITION_SYM = 1163,
    SOURCE_BIND_SYM = 1164,
    SOURCE_COMPRESSION_ALGORITHM_SYM = 1165,
    SOURCE_CONNECT_RETRY_SYM = 1166,
    SOURCE_DELAY_SYM = 1167,
    SOURCE_HEARTBEAT_PERIOD_SYM = 1168,
    SOURCE_HOST_SYM = 1169,
    SOURCE_LOG_FILE_SYM = 1170,
    SOURCE_LOG_POS_SYM = 1171,
    SOURCE_PASSWORD_SYM = 1172,
    SOURCE_PORT_SYM = 1173,
    SOURCE_PUBLIC_KEY_PATH_SYM = 1174,
    SOURCE_RETRY_COUNT_SYM = 1175,
    SOURCE_SSL_SYM = 1176,
    SOURCE_SSL_CA_SYM = 1177,
    SOURCE_SSL_CAPATH_SYM = 1178,
    SOURCE_SSL_CERT_SYM = 1179,
    SOURCE_SSL_CIPHER_SYM = 1180,
    SOURCE_SSL_CRL_SYM = 1181,
    SOURCE_SSL_CRLPATH_SYM = 1182,
    SOURCE_SSL_KEY_SYM = 1183,
    SOURCE_SSL_VERIFY_SERVER_CERT_SYM = 1184,
    SOURCE_TLS_CIPHERSUITES_SYM = 1185,
    SOURCE_TLS_VERSION_SYM = 1186,
    SOURCE_USER_SYM = 1187,
    SOURCE_ZSTD_COMPRESSION_LEVEL_SYM = 1188,
    ST_COLLECT_SYM = 1189,
    KEYRING_SYM = 1190,
    AUTHENTICATION_SYM = 1191,
    FACTOR_SYM = 1192,
    FINISH_SYM = 1193,
    INITIATE_SYM = 1194,
    REGISTRATION_SYM = 1195,
    UNREGISTER_SYM = 1196,
    INITIAL_SYM = 1197,
    CHALLENGE_RESPONSE_SYM = 1198,
    GTID_ONLY_SYM = 1199,
    INTERSECT_SYM = 1200,
    BULK_SYM = 1201,
    URL_SYM = 1202,
    GENERATE_SYM = 1203,
    DOLLAR_QUOTED_STRING_SYM = 1204,
    PARSE_TREE_SYM = 1205,
    LOG_SYM = 1206,
    GTIDS_SYM = 1207,
    PARALLEL_SYM = 1208,
    S3_SYM = 1209,
    QUALIFY_SYM = 1210,
    AUTO_SYM = 1211,
    MANUAL_SYM = 1212,
    BERNOULLI_SYM = 1213,
    TABLESAMPLE_SYM = 1214,
    KEYWORD_USED_AS_IDENT = 1216,
    KEYWORD_USED_AS_KEYWORD = 1217,
    CONDITIONLESS_JOIN = 1218,
    PREFER_PARENTHESES = 1219,
    EMPTY_FROM_CLAUSE = 1220
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE_SYM 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define OBSOLETE_TOKEN_550 550
#define OBSOLETE_TOKEN_551 551
#define OBSOLETE_TOKEN_552 552
#define OBSOLETE_TOKEN_553 553
#define OBSOLETE_TOKEN_554 554
#define OBSOLETE_TOKEN_555 555
#define OBSOLETE_TOKEN_556 556
#define OBSOLETE_TOKEN_557 557
#define OBSOLETE_TOKEN_558 558
#define OBSOLETE_TOKEN_559 559
#define OBSOLETE_TOKEN_561 561
#define OBSOLETE_TOKEN_562 562
#define OBSOLETE_TOKEN_563 563
#define OBSOLETE_TOKEN_564 564
#define OBSOLETE_TOKEN_565 565
#define OBSOLETE_TOKEN_566 566
#define OBSOLETE_TOKEN_567 567
#define OBSOLETE_TOKEN_568 568
#define OBSOLETE_TOKEN_569 569
#define OBSOLETE_TOKEN_570 570
#define MASTER_SYM 571
#define OBSOLETE_TOKEN_572 572
#define OBSOLETE_TOKEN_573 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define OBSOLETE_TOKEN_966 966
#define OBSOLETE_TOKEN_967 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define OBSOLETE_TOKEN_989 989
#define OBSOLETE_TOKEN_990 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define OBSOLETE_TOKEN_992 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define RETURNING_SYM 999
#define YYUNDEF 1150
#define JSON_VALUE_SYM 1151
#define TLS_SYM 1152
#define ATTRIBUTE_SYM 1153
#define ENGINE_ATTRIBUTE_SYM 1154
#define SECONDARY_ENGINE_ATTRIBUTE_SYM 1155
#define SOURCE_CONNECTION_AUTO_FAILOVER_SYM 1156
#define ZONE_SYM 1157
#define GRAMMAR_SELECTOR_DERIVED_EXPR 1158
#define REPLICA_SYM 1159
#define REPLICAS_SYM 1160
#define ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM 1161
#define GET_SOURCE_PUBLIC_KEY_SYM 1162
#define SOURCE_AUTO_POSITION_SYM 1163
#define SOURCE_BIND_SYM 1164
#define SOURCE_COMPRESSION_ALGORITHM_SYM 1165
#define SOURCE_CONNECT_RETRY_SYM 1166
#define SOURCE_DELAY_SYM 1167
#define SOURCE_HEARTBEAT_PERIOD_SYM 1168
#define SOURCE_HOST_SYM 1169
#define SOURCE_LOG_FILE_SYM 1170
#define SOURCE_LOG_POS_SYM 1171
#define SOURCE_PASSWORD_SYM 1172
#define SOURCE_PORT_SYM 1173
#define SOURCE_PUBLIC_KEY_PATH_SYM 1174
#define SOURCE_RETRY_COUNT_SYM 1175
#define SOURCE_SSL_SYM 1176
#define SOURCE_SSL_CA_SYM 1177
#define SOURCE_SSL_CAPATH_SYM 1178
#define SOURCE_SSL_CERT_SYM 1179
#define SOURCE_SSL_CIPHER_SYM 1180
#define SOURCE_SSL_CRL_SYM 1181
#define SOURCE_SSL_CRLPATH_SYM 1182
#define SOURCE_SSL_KEY_SYM 1183
#define SOURCE_SSL_VERIFY_SERVER_CERT_SYM 1184
#define SOURCE_TLS_CIPHERSUITES_SYM 1185
#define SOURCE_TLS_VERSION_SYM 1186
#define SOURCE_USER_SYM 1187
#define SOURCE_ZSTD_COMPRESSION_LEVEL_SYM 1188
#define ST_COLLECT_SYM 1189
#define KEYRING_SYM 1190
#define AUTHENTICATION_SYM 1191
#define FACTOR_SYM 1192
#define FINISH_SYM 1193
#define INITIATE_SYM 1194
#define REGISTRATION_SYM 1195
#define UNREGISTER_SYM 1196
#define INITIAL_SYM 1197
#define CHALLENGE_RESPONSE_SYM 1198
#define GTID_ONLY_SYM 1199
#define INTERSECT_SYM 1200
#define BULK_SYM 1201
#define URL_SYM 1202
#define GENERATE_SYM 1203
#define DOLLAR_QUOTED_STRING_SYM 1204
#define PARSE_TREE_SYM 1205
#define LOG_SYM 1206
#define GTIDS_SYM 1207
#define PARALLEL_SYM 1208
#define S3_SYM 1209
#define QUALIFY_SYM 1210
#define AUTO_SYM 1211
#define MANUAL_SYM 1212
#define BERNOULLI_SYM 1213
#define TABLESAMPLE_SYM 1214
#define KEYWORD_USED_AS_IDENT 1216
#define KEYWORD_USED_AS_KEYWORD 1217
#define CONDITIONLESS_JOIN 1218
#define PREFER_PARENTHESES 1219
#define EMPTY_FROM_CLAUSE 1220

/* Value type.  */

/* Location type.  */
#if ! defined MY_SQL_PARSER_LTYPE && ! defined MY_SQL_PARSER_LTYPE_IS_DECLARED
typedef struct MY_SQL_PARSER_LTYPE MY_SQL_PARSER_LTYPE;
struct MY_SQL_PARSER_LTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define MY_SQL_PARSER_LTYPE_IS_DECLARED 1
# define MY_SQL_PARSER_LTYPE_IS_TRIVIAL 1
#endif



int my_sql_parser_parse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MY_SQL_PARSER_MNT_JENKINS_WORKSPACE_PERCONA_XTRABACKUP_8_0_RELEASE_TEST_PERCONA_XTRABACKUP_SQL_SQL_YACC_H_INCLUDED  */



#ifdef short
# undef short
#endif

/* On compilers that do not define __PTRDIFF_MAX__ etc., make sure
   <limits.h> and (if available) <stdint.h> are included
   so that the code can choose integer types of a good width.  */

#ifndef __PTRDIFF_MAX__
# include <limits.h> /* INFRINGES ON USER NAME SPACE */
# if defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stdint.h> /* INFRINGES ON USER NAME SPACE */
#  define YY_STDINT_H
# endif
#endif

/* Narrow types that promote to a signed type and that can represent a
   signed or unsigned integer of at least N bits.  In tables they can
   save space and decrease cache pressure.  Promoting to a signed type
   helps avoid bugs in integer arithmetic.  */

#ifdef __INT_LEAST8_MAX__
typedef __INT_LEAST8_TYPE__ yytype_int8;
#elif defined YY_STDINT_H
typedef int_least8_t yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef __INT_LEAST16_MAX__
typedef __INT_LEAST16_TYPE__ yytype_int16;
#elif defined YY_STDINT_H
typedef int_least16_t yytype_int16;
#else
typedef short yytype_int16;
#endif

#if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
typedef __UINT_LEAST8_TYPE__ yytype_uint8;
#elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST8_MAX <= INT_MAX)
typedef uint_least8_t yytype_uint8;
#elif !defined __UINT_LEAST8_MAX__ && UCHAR_MAX <= INT_MAX
typedef unsigned char yytype_uint8;
#else
typedef short yytype_uint8;
#endif

#if defined __UINT_LEAST16_MAX__ && __UINT_LEAST16_MAX__ <= __INT_MAX__
typedef __UINT_LEAST16_TYPE__ yytype_uint16;
#elif (!defined __UINT_LEAST16_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST16_MAX <= INT_MAX)
typedef uint_least16_t yytype_uint16;
#elif !defined __UINT_LEAST16_MAX__ && USHRT_MAX <= INT_MAX
typedef unsigned short yytype_uint16;
#else
typedef int yytype_uint16;
#endif

#ifndef YYPTRDIFF_T
# if defined __PTRDIFF_TYPE__ && defined __PTRDIFF_MAX__
#  define YYPTRDIFF_T __PTRDIFF_TYPE__
#  define YYPTRDIFF_MAXIMUM __PTRDIFF_MAX__
# elif defined PTRDIFF_MAX
#  ifndef ptrdiff_t
#   include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  endif
#  define YYPTRDIFF_T ptrdiff_t
#  define YYPTRDIFF_MAXIMUM PTRDIFF_MAX
# else
#  define YYPTRDIFF_T long
#  define YYPTRDIFF_MAXIMUM LONG_MAX
# endif
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned
# endif
#endif

#define YYSIZE_MAXIMUM                                  \
  YY_CAST (YYPTRDIFF_T,                                 \
           (YYPTRDIFF_MAXIMUM < YY_CAST (YYSIZE_T, -1)  \
            ? YYPTRDIFF_MAXIMUM                         \
            : YY_CAST (YYSIZE_T, -1)))

#define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))

/* Stored state numbers (used for stacks). */
typedef yytype_int16 yy_state_t;

/* State numbers in computations.  */
typedef int yy_state_fast_t;

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define YY_ATTRIBUTE_PURE
# endif
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# if defined __GNUC__ && 2 < __GNUC__ + (7 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define YY_ATTRIBUTE_UNUSED
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && ! defined __ICC && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                            \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

#if defined __cplusplus && defined __GNUC__ && ! defined __ICC && 6 <= __GNUC__
# define YY_IGNORE_USELESS_CAST_BEGIN                          \
    _Pragma ("GCC diagnostic push")                            \
    _Pragma ("GCC diagnostic ignored \"-Wuseless-cast\"")
# define YY_IGNORE_USELESS_CAST_END            \
    _Pragma ("GCC diagnostic pop")
#endif
#ifndef YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_END
#endif


#define YY_ASSERT(E) ((void) (0 && (E)))

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined MY_SQL_PARSER_LTYPE_IS_TRIVIAL && MY_SQL_PARSER_LTYPE_IS_TRIVIAL \
             && defined MY_SQL_PARSER_STYPE_IS_TRIVIAL && MY_SQL_PARSER_STYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yy_state_t yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (YYSIZEOF (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (YYSIZEOF (yy_state_t) + YYSIZEOF (YYSTYPE) \
             + YYSIZEOF (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYPTRDIFF_T yynewbytes;                                         \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * YYSIZEOF (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / YYSIZEOF (*yyptr);                        \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, YY_CAST (YYSIZE_T, (Count)) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYPTRDIFF_T yyi;                      \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1118
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   94995

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  833
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1013
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3193
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5584

#define YYUNDEFTOK  2
#define YYMAXUTOK   1220


/* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, with out-of-bounds checking.  */
#define YYTRANSLATE(YYX)                                                \
  (0 <= (YYX) && (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex.  */
static const yytype_int16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   830,     2,     2,     2,   818,   813,     2,
     822,   823,   816,   815,   827,   814,   828,   817,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   829,   825,
       2,     2,     2,     2,   826,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   819,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   831,   812,   832,   820,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
       2,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
     794,   795,   796,   797,   798,   799,   800,   801,   802,   803,
     804,   805,   806,   807,   808,     2,   809,   810,   811,   821,
     824
};

#if MY_SQL_PARSER_DEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_int16 yyrline[] =
{
       0,  2302,  2302,  2303,  2308,  2318,  2336,  2340,  2348,  2361,
    2360,  2385,  2393,  2394,  2398,  2399,  2404,  2405,  2406,  2407,
    2408,  2409,  2410,  2411,  2412,  2413,  2414,  2415,  2416,  2417,
    2418,  2419,  2420,  2421,  2422,  2423,  2424,  2425,  2426,  2427,
    2428,  2429,  2430,  2431,  2432,  2433,  2434,  2435,  2436,  2437,
    2438,  2439,  2440,  2441,  2442,  2443,  2444,  2445,  2446,  2447,
    2448,  2449,  2450,  2451,  2452,  2453,  2454,  2455,  2456,  2457,
    2458,  2459,  2460,  2461,  2462,  2463,  2464,  2465,  2466,  2467,
    2468,  2469,  2470,  2471,  2472,  2473,  2474,  2475,  2476,  2477,
    2478,  2479,  2480,  2481,  2482,  2483,  2484,  2485,  2486,  2487,
    2488,  2489,  2490,  2491,  2492,  2493,  2494,  2495,  2496,  2497,
    2498,  2499,  2500,  2501,  2502,  2503,  2504,  2505,  2506,  2507,
    2508,  2509,  2510,  2511,  2512,  2513,  2514,  2515,  2516,  2517,
    2518,  2519,  2520,  2521,  2522,  2523,  2524,  2525,  2526,  2527,
    2528,  2529,  2530,  2531,  2532,  2533,  2534,  2535,  2536,  2537,
    2538,  2539,  2543,  2553,  2554,  2558,  2578,  2585,  2596,  2595,
    2607,  2608,  2612,  2613,  2617,  2630,  2629,  2649,  2648,  2665,
    2664,  2682,  2683,  2686,  2693,  2700,  2707,  2714,  2721,  2729,
    2738,  2744,  2751,  2758,  2766,  2775,  2781,  2787,  2795,  2803,
    2809,  2816,  2823,  2831,  2843,  2849,  2856,  2863,  2871,  2881,
    2882,  2886,  2890,  2894,  2898,  2902,  2912,  2916,  2920,  2925,
    2936,  2941,  2945,  2949,  2953,  2954,  2958,  2962,  2966,  2971,
    2975,  2979,  2983,  2989,  3023,  3027,  3031,  3035,  3041,  3042,
    3058,  3059,  3075,  3076,  3093,  3097,  3098,  3099,  3103,  3109,
    3115,  3124,  3128,  3132,  3136,  3143,  3147,  3151,  3165,  3170,
    3178,  3182,  3198,  3202,  3212,  3213,  3218,  3228,  3238,  3243,
    3251,  3258,  3271,  3270,  3285,  3287,  3301,  3321,  3340,  3360,
    3377,  3382,  3390,  3396,  3408,  3420,  3434,  3449,  3454,  3461,
    3470,  3478,  3489,  3490,  3494,  3498,  3502,  3506,  3510,  3515,
    3519,  3527,  3526,  3561,  3560,  3569,  3578,  3579,  3585,  3593,
    3599,  3608,  3615,  3624,  3625,  3634,  3635,  3639,  3645,  3654,
    3655,  3663,  3663,  3724,  3725,  3726,  3727,  3728,  3729,  3730,
    3731,  3732,  3733,  3734,  3735,  3736,  3740,  3754,  3773,  3774,
    3778,  3779,  3784,  3786,  3788,  3790,  3792,  3794,  3796,  3798,
    3804,  3805,  3806,  3810,  3814,  3821,  3828,  3829,  3837,  3838,
    3842,  3843,  3847,  3899,  3900,  3904,  3905,  3909,  3959,  3960,
    3961,  3962,  3966,  3967,  3971,  3972,  3976,  3980,  4004,  4103,
    4121,  4120,  4199,  4195,  4272,  4273,  4278,  4280,  4285,  4308,
    4319,  4323,  4345,  4346,  4350,  4354,  4367,  4373,  4379,  4388,
    4401,  4427,  4432,  4433,  4438,  4439,  4444,  4450,  4463,  4465,
    4467,  4473,  4475,  4477,  4479,  4481,  4483,  4485,  4487,  4489,
    4491,  4493,  4495,  4500,  4514,  4531,  4532,  4534,  4539,  4545,
    4554,  4560,  4569,  4577,  4605,  4613,  4615,  4624,  4629,  4635,
    4644,  4652,  4654,  4656,  4658,  4660,  4662,  4664,  4666,  4668,
    4670,  4672,  4674,  4676,  4681,  4701,  4724,  4729,  4737,  4738,
    4739,  4740,  4741,  4742,  4743,  4744,  4745,  4746,  4747,  4748,
    4749,  4754,  4753,  4764,  4764,  4824,  4823,  4880,  4880,  4902,
    4959,  5006,  5030,  5029,  5054,  5077,  5078,  5079,  5083,  5101,
    5122,  5130,  5168,  5122,  5197,  5198,  5199,  5203,  5204,  5209,
    5219,  5208,  5271,  5270,  5284,  5285,  5289,  5290,  5295,  5303,
    5294,  5353,  5361,  5352,  5406,  5420,  5425,  5424,  5462,  5463,
    5468,  5467,  5501,  5501,  5520,  5519,  5567,  5582,  5590,  5581,
    5648,  5656,  5645,  5698,  5700,  5705,  5707,  5709,  5724,  5725,
    5732,  5733,  5740,  5741,  5745,  5751,  5760,  5761,  5762,  5763,
    5764,  5765,  5766,  5767,  5768,  5769,  5770,  5774,  5775,  5779,
    5785,  5794,  5795,  5796,  5797,  5798,  5799,  5800,  5804,  5805,
    5809,  5815,  5824,  5828,  5829,  5833,  5839,  5848,  5849,  5850,
    5851,  5852,  5853,  5854,  5858,  5859,  5863,  5869,  5878,  5879,
    5880,  5884,  5888,  5889,  5893,  5897,  5904,  5911,  5915,  5922,
    5929,  5936,  5943,  5950,  5957,  5964,  5971,  5975,  5982,  5989,
    5996,  5997,  6072,  6078,  6082,  6087,  6091,  6098,  6106,  6116,
    6117,  6131,  6139,  6143,  6147,  6151,  6155,  6159,  6166,  6167,
    6171,  6172,  6189,  6190,  6202,  6203,  6208,  6217,  6218,  6223,
    6229,  6238,  6239,  6251,  6252,  6256,  6262,  6271,  6279,  6283,
    6288,  6296,  6297,  6301,  6305,  6312,  6319,  6329,  6328,  6346,
    6352,  6361,  6362,  6367,  6368,  6372,  6378,  6387,  6394,  6395,
    6399,  6405,  6414,  6416,  6418,  6420,  6422,  6424,  6426,  6428,
    6437,  6438,  6442,  6443,  6464,  6465,  6469,  6470,  6474,  6479,
    6484,  6499,  6500,  6504,  6510,  6519,  6525,  6534,  6535,  6539,
    6543,  6547,  6551,  6555,  6559,  6572,  6576,  6580,  6584,  6588,
    6592,  6596,  6600,  6604,  6622,  6626,  6630,  6634,  6638,  6642,
    6646,  6650,  6654,  6658,  6662,  6666,  6670,  6674,  6678,  6682,
    6696,  6700,  6704,  6708,  6715,  6729,  6733,  6737,  6741,  6745,
    6746,  6747,  6748,  6749,  6750,  6754,  6755,  6756,  6760,  6761,
    6762,  6763,  6767,  6773,  6782,  6783,  6787,  6794,  6795,  6803,
    6809,  6815,  6820,  6830,  6838,  6846,  6850,  6851,  6855,  6856,
    6860,  6861,  6865,  6869,  6873,  6895,  6896,  6900,  6901,  6902,
    6906,  6910,  6914,  6918,  6922,  6926,  6930,  6934,  6939,  6944,
    6953,  6962,  6966,  6970,  6975,  6984,  6988,  7011,  7015,  7019,
    7023,  7027,  7031,  7035,  7036,  7040,  7044,  7048,  7053,  7058,
    7063,  7068,  7073,  7077,  7081,  7086,  7090,  7097,  7099,  7101,
    7103,  7105,  7107,  7109,  7111,  7116,  7117,  7121,  7122,  7126,
    7127,  7128,  7129,  7130,  7134,  7135,  7136,  7137,  7138,  7142,
    7147,  7152,  7153,  7157,  7158,  7159,  7160,  7164,  7169,  7177,
    7182,  7187,  7191,  7200,  7201,  7205,  7206,  7207,  7215,  7216,
    7220,  7224,  7228,  7229,  7230,  7239,  7240,  7241,  7242,  7245,
    7246,  7250,  7255,  7259,  7260,  7264,  7283,  7302,  7306,  7310,
    7314,  7318,  7322,  7326,  7330,  7334,  7338,  7342,  7346,  7350,
    7354,  7358,  7362,  7371,  7376,  7389,  7393,  7397,  7404,  7405,
    7406,  7410,  7411,  7412,  7416,  7422,  7426,  7430,  7431,  7435,
    7444,  7448,  7449,  7453,  7462,  7466,  7467,  7471,  7477,  7481,
    7482,  7486,  7487,  7492,  7496,  7501,  7509,  7518,  7525,  7535,
    7540,  7545,  7550,  7555,  7562,  7568,  7579,  7580,  7588,  7587,
    7600,  7601,  7605,  7620,  7621,  7625,  7632,  7642,  7643,  7644,
    7645,  7649,  7654,  7659,  7664,  7670,  7679,  7680,  7681,  7682,
    7683,  7687,  7688,  7692,  7693,  7697,  7698,  7702,  7703,  7704,
    7708,  7709,  7713,  7714,  7718,  7724,  7733,  7734,  7748,  7749,
    7753,  7759,  7768,  7772,  7773,  7777,  7783,  7792,  7793,  7798,
    7799,  7803,  7807,  7811,  7835,  7836,  7837,  7841,  7842,  7846,
    7847,  7851,  7852,  7856,  7857,  7858,  7862,  7868,  7878,  7884,
    7899,  7905,  7915,  7916,  7925,  7926,  7930,  7936,  7948,  7959,
    7974,  7973,  7994,  7993,  8016,  8015,  8038,  8037,  8058,  8052,
    8077,  8076,  8120,  8142,  8161,  8181,  8189,  8211,  8235,  8246,
    8249,  8261,  8273,  8278,  8290,  8302,  8313,  8320,  8328,  8329,
    8333,  8343,  8353,  8359,  8366,  8375,  8376,  8380,  8381,  8385,
    8391,  8397,  8405,  8420,  8428,  8436,  8443,  8450,  8457,  8464,
    8470,  8476,  8482,  8494,  8506,  8515,  8516,  8520,  8521,  8525,
    8531,  8537,  8543,  8552,  8565,  8566,  8567,  8568,  8572,  8573,
    8585,  8586,  8590,  8591,  8595,  8596,  8611,  8616,  8624,  8628,
    8635,  8640,  8645,  8646,  8655,  8659,  8670,  8674,  8678,  8682,
    8686,  8691,  8696,  8701,  8706,  8713,  8717,  8721,  8725,  8730,
    8735,  8740,  8745,  8749,  8756,  8757,  8761,  8765,  8772,  8773,
    8781,  8788,  8793,  8797,  8802,  8813,  8814,  8822,  8826,  8830,
    8834,  8838,  8842,  8847,  8851,  8855,  8859,  8863,  8867,  8871,
    8875,  8879,  8883,  8888,  8892,  8896,  8900,  8904,  8908,  8912,
    8916,  8920,  8927,  8931,  8938,  8943,  8948,  8956,  8957,  8962,
    8967,  8973,  8982,  8986,  8990,  9007,  9011,  9015,  9032,  9033,
    9037,  9038,  9042,  9043,  9044,  9048,  9049,  9050,  9054,  9055,
    9056,  9057,  9061,  9062,  9070,  9079,  9080,  9084,  9085,  9089,
    9090,  9091,  9095,  9107,  9120,  9126,  9139,  9152,  9138,  9176,
    9192,  9196,  9203,  9207,  9214,  9218,  9222,  9229,  9230,  9237,
    9238,  9245,  9246,  9253,  9254,  9261,  9265,  9272,  9276,  9283,
    9287,  9294,  9299,  9324,  9325,  9326,  9331,  9336,  9343,  9357,
    9358,  9359,  9363,  9372,  9373,  9377,  9378,  9386,  9387,  9388,
    9392,  9409,  9410,  9411,  9415,  9419,  9436,  9442,  9451,  9457,
    9466,  9476,  9484,  9492,  9493,  9497,  9498,  9506,  9508,  9510,
    9512,  9514,  9516,  9521,  9528,  9529,  9530,  9535,  9534,  9540,
    9547,  9552,  9560,  9561,  9565,  9578,  9582,  9591,  9597,  9606,
    9613,  9614,  9618,  9623,  9630,  9636,  9645,  9652,  9659,  9660,
    9668,  9669,  9673,  9677,  9682,  9718,  9723,  9727,  9731,  9770,
    9776,  9786,  9790,  9794,  9799,  9804,  9812,  9816,  9823,  9828,
    9832,  9845,  9870,  9897,  9898,  9902,  9906,  9907,  9911,  9917,
    9926,  9933,  9944,  9948,  9952,  9957,  9961,  9965,  9974,  9980,
    9989,  9993,  9997, 10004, 10005, 10009, 10013, 10014, 10018, 10019,
   10023, 10030, 10036, 10046, 10047, 10055, 10056, 10057, 10058, 10059,
   10063, 10064, 10069, 10076, 10081, 10088, 10092, 10096, 10100, 10104,
   10108, 10112, 10116, 10120, 10124, 10128, 10132, 10145, 10149, 10153,
   10158, 10162, 10169, 10173, 10182, 10186, 10190, 10194, 10202, 10206,
   10210, 10215, 10220, 10228, 10236, 10240, 10241, 10245, 10249, 10253,
   10257, 10261, 10265, 10269, 10273, 10277, 10281, 10285, 10289, 10293,
   10297, 10301, 10305, 10306, 10310, 10311, 10318, 10319, 10323, 10324,
   10328, 10329, 10330, 10331, 10332, 10333, 10334, 10338, 10339, 10343,
   10344, 10345, 10346, 10347, 10348, 10353, 10354, 10355, 10356, 10357,
   10358, 10359, 10363, 10368, 10372, 10376, 10380, 10384, 10389, 10393,
   10397, 10401, 10405, 10409, 10416, 10422, 10426, 10436, 10440, 10446,
   10450, 10454, 10458, 10463, 10470, 10481, 10482, 10492, 10496, 10500,
   10504, 10508, 10512, 10516, 10520, 10524, 10528, 10535, 10539, 10543,
   10547, 10551, 10555, 10559, 10563, 10567, 10572, 10577, 10582, 10586,
   10590, 10594, 10598, 10603, 10607, 10626, 10630, 10634, 10638, 10642,
   10647, 10652, 10656, 10660, 10664, 10668, 10673, 10677, 10681, 10685,
   10689, 10693, 10697, 10701, 10706, 10710, 10714, 10718, 10722, 10733,
   10737, 10748, 10752, 10756, 10760, 10764, 10768, 10772, 10776, 10780,
   10784, 10788, 10792, 10796, 10800, 10804, 10808, 10812, 10816, 10820,
   10824, 10828, 10832, 10836, 10840, 10846, 10852, 10858, 10864, 10870,
   10874, 10892, 10896, 10903, 10905, 10918, 10919, 10923, 10924, 10928,
   10929, 10933, 10939, 10951, 10958, 10959, 10963, 10967, 10971, 10975,
   10979, 10989, 10999, 11003, 11007, 11011, 11015, 11019, 11023, 11032,
   11036, 11040, 11044, 11048, 11052, 11056, 11060, 11064, 11068, 11078,
   11079, 11083, 11084, 11085, 11089, 11093, 11100, 11104, 11108, 11112,
   11116, 11120, 11124, 11135, 11146, 11150, 11154, 11166, 11171, 11183,
   11184, 11188, 11189, 11190, 11194, 11198, 11205, 11209, 11213, 11221,
   11225, 11229, 11236, 11240, 11247, 11254, 11258, 11265, 11272, 11280,
   11300, 11304, 11311, 11315, 11323, 11327, 11335, 11339, 11348, 11353,
   11360, 11364, 11368, 11372, 11376, 11383, 11390, 11394, 11398, 11402,
   11406, 11413, 11417, 11421, 11425, 11429, 11435, 11436, 11437, 11441,
   11448, 11458, 11462, 11470, 11471, 11475, 11481, 11485, 11486, 11490,
   11498, 11508, 11515, 11522, 11541, 11549, 11556, 11563, 11570, 11577,
   11584, 11591, 11598, 11605, 11612, 11619, 11627, 11634, 11641, 11648,
   11655, 11662, 11669, 11676, 11686, 11687, 11691, 11697, 11709, 11710,
   11714, 11720, 11730, 11731, 11735, 11736, 11740, 11748, 11757, 11758,
   11759, 11772, 11773, 11854, 11858, 11863, 11867, 11871, 11881, 11888,
   11889, 11890, 11894, 11895, 11896, 11897, 11900, 11901, 11905, 11906,
   11910, 11911, 11919, 11920, 11924, 11953, 11954, 11955, 11956, 11958,
   11960, 11964, 11965, 11974, 11975, 11979, 11986, 11987, 11991, 12004,
   12015, 12031, 12038, 12044, 12053, 12057, 12067, 12074, 12078, 12088,
   12093, 12098, 12103, 12112, 12113, 12124, 12127, 12130, 12134, 12138,
   12145, 12149, 12150, 12151, 12155, 12156, 12160, 12166, 12175, 12176,
   12184, 12185, 12189, 12193, 12200, 12204, 12210, 12219, 12225, 12233,
   12237, 12246, 12258, 12259, 12260, 12261, 12262, 12263, 12264, 12265,
   12266, 12267, 12268, 12269, 12273, 12274, 12275, 12276, 12277, 12278,
   12279, 12280, 12281, 12285, 12286, 12287, 12288, 12292, 12293, 12297,
   12298, 12302, 12303, 12307, 12308, 12312, 12316, 12317, 12324, 12325,
   12332, 12336, 12343, 12349, 12358, 12374, 12383, 12390, 12396, 12405,
   12409, 12416, 12422, 12432, 12447, 12448, 12452, 12456, 12463, 12469,
   12480, 12481, 12496, 12502, 12512, 12519, 12520, 12524, 12531, 12537,
   12547, 12548, 12552, 12553, 12557, 12558, 12562, 12569, 12575, 12581,
   12590, 12594, 12598, 12602, 12606, 12613, 12614, 12618, 12619, 12620,
   12621, 12622, 12623, 12627, 12628, 12629, 12630, 12631, 12635, 12636,
   12637, 12638, 12639, 12643, 12644, 12645, 12646, 12647, 12651, 12656,
   12657, 12661, 12667, 12676, 12680, 12687, 12694, 12700, 12704, 12712,
   12725, 12745, 12754, 12765, 12789, 12825, 12832, 12848, 12859, 12875,
   12885, 12896, 12916, 12938, 12961, 12969, 12976, 12983, 12989, 12998,
   13004, 13013, 13014, 13018, 13019, 13023, 13024, 13028, 13029, 13033,
   13039, 13048, 13049, 13056, 13076, 13096, 13114, 13127, 13144, 13160,
   13161, 13162, 13171, 13175, 13176, 13188, 13189, 13193, 13199, 13204,
   13212, 13217, 13222, 13230, 13237, 13246, 13253, 13254, 13261, 13262,
   13266, 13272, 13282, 13288, 13297, 13298, 13302, 13303, 13307, 13311,
   13315, 13321, 13325, 13332, 13341, 13342, 13349, 13354, 13367, 13372,
   13381, 13398, 13399, 13403, 13410, 13422, 13430, 13431, 13437, 13450,
   13460, 13474, 13475, 13479, 13480, 13484, 13485, 13486, 13490, 13497,
   13498, 13502, 13503, 13507, 13508, 13512, 13513, 13514, 13515, 13516,
   13517, 13518, 13519, 13520, 13524, 13525, 13537, 13543, 13550, 13557,
   13564, 13571, 13578, 13585, 13592, 13599, 13606, 13623, 13630, 13637,
   13644, 13652, 13669, 13676, 13683, 13690, 13697, 13704, 13715, 13722,
   13729, 13736, 13743, 13750, 13757, 13764, 13768, 13772, 13779, 13786,
   13793, 13800, 13807, 13814, 13821, 13828, 13835, 13842, 13849, 13856,
   13863, 13870, 13877, 13888, 13889, 13893, 13894, 13898, 13899, 13903,
   13904, 13908, 13909, 13913, 13914, 13915, 13916, 13920, 13921, 13925,
   13926, 13930, 13931, 13935, 13936, 13937, 13942, 13949, 13962, 13967,
   13972, 13977, 13982, 13987, 13995, 13996, 14000, 14005, 14026, 14032,
   14057, 14061, 14068, 14072, 14079, 14080, 14085, 14093, 14092, 14105,
   14104, 14118, 14122, 14123, 14136, 14135, 14158, 14159, 14164, 14166,
   14168, 14170, 14172, 14174, 14180, 14182, 14184, 14186, 14188, 14193,
   14194, 14199, 14198, 14205, 14215, 14216, 14220, 14226, 14235, 14236,
   14245, 14258, 14257, 14265, 14264, 14284, 14285, 14289, 14290, 14305,
   14304, 14315, 14319, 14323, 14337, 14349, 14350, 14351, 14357, 14372,
   14425, 14426, 14430, 14431, 14435, 14436, 14440, 14441, 14442, 14446,
   14447, 14448, 14452, 14453, 14470, 14471, 14475, 14476, 14480, 14481,
   14485, 14486, 14490, 14495, 14499, 14504, 14510, 14515, 14523, 14524,
   14528, 14533, 14537, 14542, 14550, 14551, 14555, 14556, 14560, 14561,
   14565, 14566, 14567, 14571, 14578, 14587, 14588, 14595, 14596, 14600,
   14608, 14628, 14647, 14648, 14652, 14653, 14658, 14659, 14663, 14664,
   14670, 14675, 14681, 14686, 14694, 14701, 14708, 14718, 14737, 14738,
   14739, 14749, 14750, 14754, 14769, 14770, 14771, 14772, 14776, 14780,
   14784, 14788, 14792, 14799, 14800, 14804, 14805, 14809, 14820, 14821,
   14822, 14827, 14831, 14835, 14842, 14843, 14852, 14856, 14860, 14870,
   14877, 14884, 14888, 14892, 14896, 14900, 14904, 14913, 14919, 14930,
   14936, 14947, 14948, 14978, 14991, 15004, 15020, 15036, 15053, 15057,
   15058, 15065, 15081, 15082, 15093, 15094, 15104, 15105, 15116, 15117,
   15127, 15128, 15129, 15133, 15134, 15135, 15139, 15144, 15152, 15156,
   15169, 15174, 15182, 15206, 15207, 15208, 15209, 15210, 15217, 15218,
   15219, 15226, 15227, 15228, 15229, 15230, 15231, 15232, 15233, 15234,
   15235, 15236, 15237, 15238, 15239, 15240, 15241, 15242, 15243, 15244,
   15245, 15246, 15247, 15248, 15249, 15250, 15251, 15252, 15253, 15254,
   15255, 15256, 15257, 15258, 15259, 15260, 15275, 15276, 15277, 15284,
   15285, 15286, 15287, 15288, 15289, 15290, 15291, 15292, 15300, 15301,
   15302, 15303, 15304, 15305, 15306, 15307, 15308, 15309, 15310, 15311,
   15312, 15313, 15314, 15315, 15316, 15317, 15318, 15319, 15320, 15321,
   15322, 15323, 15324, 15325, 15326, 15327, 15328, 15329, 15330, 15331,
   15332, 15333, 15334, 15335, 15336, 15337, 15338, 15339, 15340, 15341,
   15342, 15343, 15344, 15345, 15346, 15347, 15348, 15349, 15350, 15351,
   15352, 15353, 15354, 15355, 15356, 15357, 15358, 15359, 15360, 15361,
   15362, 15363, 15364, 15365, 15366, 15367, 15368, 15369, 15370, 15371,
   15372, 15373, 15374, 15375, 15376, 15377, 15378, 15379, 15380, 15381,
   15382, 15383, 15384, 15385, 15386, 15387, 15388, 15389, 15390, 15391,
   15392, 15393, 15394, 15395, 15396, 15397, 15398, 15399, 15400, 15401,
   15402, 15403, 15404, 15405, 15406, 15407, 15408, 15409, 15410, 15411,
   15412, 15419, 15420, 15421, 15422, 15423, 15424, 15425, 15426, 15427,
   15428, 15429, 15430, 15431, 15432, 15433, 15434, 15435, 15436, 15437,
   15438, 15439, 15440, 15441, 15442, 15443, 15444, 15445, 15446, 15447,
   15448, 15449, 15450, 15451, 15452, 15453, 15454, 15455, 15456, 15457,
   15458, 15459, 15460, 15461, 15462, 15463, 15464, 15465, 15466, 15467,
   15468, 15469, 15470, 15471, 15472, 15473, 15474, 15475, 15476, 15477,
   15478, 15479, 15480, 15481, 15482, 15483, 15484, 15485, 15486, 15487,
   15488, 15489, 15490, 15491, 15492, 15493, 15494, 15495, 15496, 15497,
   15498, 15499, 15500, 15501, 15502, 15503, 15504, 15505, 15506, 15507,
   15508, 15509, 15510, 15511, 15512, 15513, 15514, 15515, 15516, 15517,
   15518, 15519, 15520, 15521, 15522, 15523, 15524, 15525, 15526, 15527,
   15528, 15529, 15530, 15531, 15532, 15533, 15534, 15535, 15536, 15537,
   15538, 15539, 15540, 15541, 15542, 15543, 15544, 15545, 15546, 15547,
   15548, 15549, 15550, 15551, 15552, 15553, 15554, 15555, 15556, 15557,
   15558, 15559, 15560, 15561, 15562, 15563, 15564, 15565, 15566, 15567,
   15568, 15569, 15570, 15571, 15572, 15573, 15574, 15575, 15576, 15577,
   15578, 15579, 15580, 15581, 15582, 15583, 15584, 15585, 15586, 15587,
   15588, 15589, 15590, 15591, 15592, 15593, 15594, 15595, 15596, 15597,
   15598, 15599, 15600, 15601, 15602, 15603, 15604, 15605, 15606, 15607,
   15608, 15609, 15610, 15611, 15612, 15613, 15614, 15615, 15616, 15617,
   15618, 15619, 15620, 15621, 15622, 15623, 15624, 15625, 15626, 15627,
   15628, 15629, 15630, 15631, 15632, 15633, 15634, 15635, 15636, 15637,
   15638, 15639, 15640, 15641, 15642, 15643, 15644, 15645, 15646, 15647,
   15648, 15649, 15650, 15651, 15652, 15653, 15654, 15655, 15656, 15657,
   15658, 15659, 15660, 15661, 15662, 15663, 15664, 15665, 15666, 15667,
   15668, 15669, 15670, 15671, 15672, 15673, 15674, 15675, 15676, 15677,
   15678, 15679, 15680, 15681, 15682, 15683, 15684, 15685, 15686, 15687,
   15688, 15689, 15690, 15691, 15692, 15693, 15694, 15695, 15696, 15697,
   15698, 15699, 15700, 15701, 15702, 15703, 15704, 15705, 15706, 15707,
   15708, 15709, 15710, 15711, 15712, 15713, 15725, 15726, 15727, 15739,
   15740, 15741, 15742, 15751, 15752, 15753, 15754, 15755, 15766, 15775,
   15779, 15783, 15787, 15794, 15802, 15810, 15822, 15826, 15831, 15836,
   15841, 15846, 15851, 15859, 15860, 15864, 15868, 15875, 15881, 15890,
   15895, 15902, 15912, 15913, 15918, 15922, 15930, 15934, 15938, 15939,
   15940, 15941, 15942, 15946, 15947, 15948, 15949, 15953, 15954, 15955,
   15956, 15960, 15961, 15962, 15963, 15964, 15965, 15970, 15979, 15983,
   15987, 15993, 15997, 16004, 16008, 16015, 16019, 16032, 16039, 16043,
   16055, 16059, 16066, 16073, 16074, 16078, 16085, 16086, 16090, 16091,
   16095, 16096, 16097, 16098, 16102, 16103, 16104, 16108, 16112, 16116,
   16120, 16130, 16129, 16142, 16152, 16153, 16157, 16158, 16162, 16190,
   16191, 16192, 16197, 16196, 16209, 16220, 16228, 16235, 16242, 16258,
   16262, 16266, 16269, 16272, 16287, 16302, 16312, 16316, 16320, 16329,
   16340, 16356, 16357, 16361, 16362, 16363, 16364, 16368, 16369, 16370,
   16371, 16372, 16378, 16385, 16404, 16403, 16425, 16433, 16447, 16452,
   16470, 16469, 16487, 16501, 16502, 16503, 16504, 16508, 16509, 16513,
   16519, 16528, 16535, 16537, 16539, 16541, 16543, 16545, 16547, 16549,
   16551, 16553, 16555, 16557, 16559, 16561, 16563, 16565, 16567, 16572,
   16574, 16588, 16590, 16592, 16594, 16596, 16598, 16600, 16602, 16604,
   16606, 16608, 16610, 16612, 16614, 16619, 16620, 16624, 16625, 16629,
   16630, 16634, 16644, 16654, 16667, 16681, 16693, 16705, 16717, 16734,
   16740, 16749, 16755, 16764, 16765, 16769, 16770, 16774, 16784, 16793,
   16807, 16814, 16828, 16837, 16838, 16843, 16852, 16853, 16854, 16855,
   16856, 16857, 16861, 16874, 16888, 16902, 16916, 16931, 16946, 16952,
   16958, 16967, 16978, 16989, 16996, 17003, 17014, 17021, 17028, 17035,
   17043, 17049, 17057, 17074, 17082, 17096, 17107, 17130, 17144, 17149,
   17157, 17162, 17170, 17171, 17175, 17181, 17190, 17191, 17195, 17199,
   17203, 17210, 17211, 17216, 17217, 17220, 17221, 17225, 17230, 17232,
   17236, 17237, 17245, 17244, 17254, 17255, 17259, 17260, 17261, 17265,
   17266, 17267, 17271, 17272, 17276, 17288, 17297, 17307, 17316, 17330,
   17331, 17332, 17336, 17340, 17344, 17351, 17352, 17353, 17354, 17355,
   17356, 17357, 17363, 17373, 17383, 17385, 17387, 17392, 17393, 17394,
   17395, 17396, 17400, 17401, 17402, 17403, 17404, 17405, 17415, 17416,
   17420, 17434, 17447, 17449, 17451, 17456, 17461, 17463, 17465, 17470,
   17471, 17473, 17479, 17478, 17518, 17569, 17570, 17571, 17572, 17582,
   17584, 17589, 17595, 17614, 17603, 17686, 17720, 17760, 17786, 17792,
   17836, 17756, 17898, 17899, 17902, 17914, 17930, 17951, 17956, 17967,
   17927, 17984, 17989, 17994, 17999, 18004, 18009, 18017, 18018, 18021,
   18030, 18040, 18058, 18059, 18063, 18064, 18065, 18069, 18070, 18074,
   18075, 18077, 18082, 18083, 18084, 18088, 18089, 18096, 18103, 18111,
   18120, 18124, 18128, 18135, 18142, 18148, 18157, 18163, 18172, 18189,
   18198, 18220, 18224, 18231, 18235, 18239, 18246, 18247, 18251, 18258,
   18262, 18269, 18279, 18286, 18299, 18300, 18304, 18305, 18313, 18314,
   18319, 18327, 18328, 18333
};
#endif

#if MY_SQL_PARSER_DEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE_SYM",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "OBSOLETE_TOKEN_550",
  "OBSOLETE_TOKEN_551", "OBSOLETE_TOKEN_552", "OBSOLETE_TOKEN_553",
  "OBSOLETE_TOKEN_554", "OBSOLETE_TOKEN_555", "OBSOLETE_TOKEN_556",
  "OBSOLETE_TOKEN_557", "OBSOLETE_TOKEN_558", "OBSOLETE_TOKEN_559",
  "OBSOLETE_TOKEN_561", "OBSOLETE_TOKEN_562", "OBSOLETE_TOKEN_563",
  "OBSOLETE_TOKEN_564", "OBSOLETE_TOKEN_565", "OBSOLETE_TOKEN_566",
  "OBSOLETE_TOKEN_567", "OBSOLETE_TOKEN_568", "OBSOLETE_TOKEN_569",
  "OBSOLETE_TOKEN_570", "MASTER_SYM", "OBSOLETE_TOKEN_572",
  "OBSOLETE_TOKEN_573", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "OBSOLETE_TOKEN_966", "OBSOLETE_TOKEN_967", "RESTART_SYM",
  "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM", "REFERENCE_SYM",
  "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM", "ARRAY_SYM", "MEMBER_SYM",
  "OPTIONAL_SYM", "SECONDARY_SYM", "SECONDARY_ENGINE_SYM",
  "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM", "RETAIN_SYM", "OLD_SYM",
  "ENFORCED_SYM", "OJ_SYM", "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "OBSOLETE_TOKEN_989", "OBSOLETE_TOKEN_990", "PRIVILEGE_CHECKS_USER_SYM",
  "OBSOLETE_TOKEN_992", "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "RETURNING_SYM", "YYUNDEF", "JSON_VALUE_SYM",
  "TLS_SYM", "ATTRIBUTE_SYM", "ENGINE_ATTRIBUTE_SYM",
  "SECONDARY_ENGINE_ATTRIBUTE_SYM", "SOURCE_CONNECTION_AUTO_FAILOVER_SYM",
  "ZONE_SYM", "GRAMMAR_SELECTOR_DERIVED_EXPR", "REPLICA_SYM",
  "REPLICAS_SYM", "ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM",
  "GET_SOURCE_PUBLIC_KEY_SYM", "SOURCE_AUTO_POSITION_SYM",
  "SOURCE_BIND_SYM", "SOURCE_COMPRESSION_ALGORITHM_SYM",
  "SOURCE_CONNECT_RETRY_SYM", "SOURCE_DELAY_SYM",
  "SOURCE_HEARTBEAT_PERIOD_SYM", "SOURCE_HOST_SYM", "SOURCE_LOG_FILE_SYM",
  "SOURCE_LOG_POS_SYM", "SOURCE_PASSWORD_SYM", "SOURCE_PORT_SYM",
  "SOURCE_PUBLIC_KEY_PATH_SYM", "SOURCE_RETRY_COUNT_SYM", "SOURCE_SSL_SYM",
  "SOURCE_SSL_CA_SYM", "SOURCE_SSL_CAPATH_SYM", "SOURCE_SSL_CERT_SYM",
  "SOURCE_SSL_CIPHER_SYM", "SOURCE_SSL_CRL_SYM", "SOURCE_SSL_CRLPATH_SYM",
  "SOURCE_SSL_KEY_SYM", "SOURCE_SSL_VERIFY_SERVER_CERT_SYM",
  "SOURCE_TLS_CIPHERSUITES_SYM", "SOURCE_TLS_VERSION_SYM",
  "SOURCE_USER_SYM", "SOURCE_ZSTD_COMPRESSION_LEVEL_SYM", "ST_COLLECT_SYM",
  "KEYRING_SYM", "AUTHENTICATION_SYM", "FACTOR_SYM", "FINISH_SYM",
  "INITIATE_SYM", "REGISTRATION_SYM", "UNREGISTER_SYM", "INITIAL_SYM",
  "CHALLENGE_RESPONSE_SYM", "GTID_ONLY_SYM", "INTERSECT_SYM", "BULK_SYM",
  "URL_SYM", "GENERATE_SYM", "DOLLAR_QUOTED_STRING_SYM", "PARSE_TREE_SYM",
  "LOG_SYM", "GTIDS_SYM", "PARALLEL_SYM", "S3_SYM", "QUALIFY_SYM",
  "AUTO_SYM", "MANUAL_SYM", "BERNOULLI_SYM", "TABLESAMPLE_SYM",
  "KEYWORD_USED_AS_IDENT", "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN",
  "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'", "'~'",
  "PREFER_PARENTHESES", "'('", "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'",
  "','", "'.'", "':'", "'!'", "'{'", "'}'", "$accept", "start_entry",
  "sql_statement", "$@1", "opt_end_of_input", "simple_statement_or_begin",
  "simple_statement", "deallocate", "deallocate_or_drop", "prepare",
  "prepare_src", "execute", "$@2", "execute_using", "execute_var_list",
  "execute_var_ident", "help", "$@3", "change_replication_stmt", "$@4",
  "$@5", "filter_defs", "filter_def", "opt_filter_db_list",
  "filter_db_list", "filter_db_ident", "opt_filter_db_pair_list",
  "filter_db_pair_list", "opt_filter_table_list", "filter_table_list",
  "filter_table_ident", "opt_filter_string_list", "filter_string_list",
  "filter_string", "source_defs", "source_def", "ignore_server_id_list",
  "ignore_server_id", "privilege_check_def", "table_primary_key_check_def",
  "assign_gtids_to_anonymous_transactions_def",
  "source_tls_ciphersuites_def", "source_file_def", "opt_channel",
  "create_table_stmt", "create_role_stmt", "create_resource_group_stmt",
  "create", "$@6", "create_srs_stmt", "srs_attributes",
  "default_role_clause", "create_index_stmt", "server_options_list",
  "server_option", "event_tail", "$@7", "ev_schedule_time", "$@8",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@9",
  "ev_sql_stmt_inner", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call_stmt",
  "opt_paren_expr_list", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "$@10", "$@11",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "$@12", "sp_proc_stmt_statement", "$@13", "sp_proc_stmt_return", "$@14",
  "sp_proc_stmt_unlabeled", "$@15", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@17", "$@18", "$@19", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@20", "$@21", "searched_case_stmt", "$@22",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@23", "$@24", "searched_when_clause", "$@25",
  "$@26", "else_clause_opt", "sp_labeled_control", "$@27", "sp_opt_label",
  "sp_labeled_block", "$@28", "sp_unlabeled_block", "$@29",
  "sp_block_content", "$@30", "sp_unlabeled_control", "$@31", "$@32",
  "$@33", "$@34", "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "option_autoextend_size", "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_engine_attribute", "size_number",
  "opt_create_table_options_etc", "opt_create_partitioning_etc",
  "opt_duplicate_as_qe", "as_create_query_expression", "partition_clause",
  "part_type_def", "opt_linear", "opt_key_algo", "opt_num_parts",
  "opt_sub_part", "opt_name_list", "name_list", "opt_num_subparts",
  "opt_part_defs", "part_def_list", "part_definition", "opt_part_values",
  "part_func_max", "part_values_in", "part_value_list",
  "part_value_item_list_paren", "$@35", "part_value_item_list",
  "part_value_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "opt_part_options", "part_option_list",
  "part_option", "alter_database_options", "alter_database_option",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "column_format", "storage_media", "now",
  "now_or_signed_literal", "character_set", "charset_name",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "string_list", "alter_table_stmt", "alter_database_stmt", "$@37",
  "alter_procedure_stmt", "$@38", "alter_function_stmt", "$@39",
  "alter_view_stmt", "$@40", "$@41", "alter_event_stmt", "$@42",
  "alter_logfile_stmt", "alter_tablespace_stmt",
  "alter_undo_tablespace_stmt", "alter_server_stmt", "alter_user_stmt",
  "opt_replace_password", "alter_resource_group_stmt",
  "alter_user_command", "opt_user_attribute",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "group_replication_start", "opt_group_replication_start_options",
  "group_replication_start_options", "group_replication_start_option",
  "group_replication_user", "group_replication_password",
  "group_replication_plugin_auth", "stop_replica_stmt",
  "start_replica_stmt", "$@43", "$@44", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "opt_user_option", "opt_password_option",
  "opt_default_auth_option", "opt_plugin_dir_option",
  "opt_replica_thread_option_list", "replica_thread_option_list",
  "replica_thread_option", "opt_replica_until", "replica_until",
  "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_histogram_auto_update",
  "opt_histogram_num_buckets", "opt_histogram_update_param",
  "opt_histogram", "binlog_base64_event", "check_table_stmt",
  "opt_mi_check_types", "mi_check_types", "mi_check_type",
  "optimize_table_stmt", "opt_no_write_to_binlog", "rename", "$@45",
  "rename_list", "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "opt_returning_type", "function_call_conflict", "geometry_function",
  "function_call_generic", "fulltext_options", "opt_natural_language_mode",
  "opt_query_expansion", "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "sampling_method",
  "sampling_percentage", "opt_tablesample_clause", "window_func_call",
  "opt_lead_lag_info", "stable_integer", "param_or_var", "opt_ll_default",
  "opt_null_treatment", "opt_from_first_last", "opt_windowing_clause",
  "windowing_clause", "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "in_expression_user_variable_assignment",
  "rvalue_system_or_user_variable", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "in_sum_expr", "cast_type", "opt_expr_list", "expr_list",
  "ident_list_arg", "ident_list", "opt_expr", "opt_else", "when_list",
  "table_reference", "esc_table_reference", "joined_table",
  "natural_join_type", "inner_join_type", "outer_join_type", "opt_inner",
  "opt_outer", "opt_use_partition", "use_partition", "table_factor",
  "table_reference_list_parens", "single_table_parens", "single_table",
  "joined_table_parens", "derived_table", "table_function",
  "columns_clause", "columns_list", "jt_column", "jt_column_type",
  "opt_on_empty_or_error", "opt_on_empty_or_error_json_table", "on_empty",
  "on_error", "json_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "opt_qualify_clause", "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_ignore_unknown_user",
  "opt_temporary", "opt_drop_ts_options", "drop_ts_option_list",
  "drop_ts_option", "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "insert_columns", "insert_values",
  "query_expression_with_opt_locking_clauses", "value_or_values",
  "values_list", "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_for_query", "show_databases_stmt",
  "show_tables_stmt", "show_triggers_stmt", "show_events_stmt",
  "show_table_status_stmt", "show_open_tables_stmt", "show_plugins_stmt",
  "show_engine_logs_stmt", "show_engine_mutex_stmt",
  "show_engine_status_stmt", "show_columns_stmt", "show_binary_logs_stmt",
  "show_replicas_stmt", "show_binlog_events_stmt",
  "show_relaylog_events_stmt", "show_keys_stmt", "show_engines_stmt",
  "show_count_warnings_stmt", "show_count_errors_stmt",
  "show_warnings_stmt", "show_errors_stmt", "show_profiles_stmt",
  "show_profile_stmt", "show_status_stmt", "show_processlist_stmt",
  "show_variables_stmt", "show_character_set_stmt", "show_collation_stmt",
  "show_privileges_stmt", "show_grants_stmt", "show_create_database_stmt",
  "show_create_table_stmt", "show_create_view_stmt",
  "show_binary_log_status_stmt", "show_replica_status_stmt",
  "show_create_procedure_stmt", "show_create_function_stmt",
  "show_create_trigger_stmt", "show_procedure_status_stmt",
  "show_function_status_stmt", "show_procedure_code_stmt",
  "show_function_code_stmt", "show_create_event_stmt",
  "show_create_user_stmt", "show_parse_tree_stmt", "engine_or_all",
  "opt_storage", "opt_db", "opt_full", "opt_extended", "opt_show_cmd_type",
  "from_or_in", "opt_binlog_in", "binlog_from", "opt_wild_or_where",
  "describe_stmt", "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format", "opt_explain_options", "opt_explain_into",
  "opt_explain_for_schema", "opt_describe_column", "flush", "$@46",
  "flush_options", "$@47", "opt_flush_lock", "$@48", "flush_options_list",
  "flush_option", "opt_table_list", "reset", "$@49", "reset_options",
  "opt_if_exists_ident", "persisted_variable_ident", "reset_option",
  "$@50", "$@51", "opt_replica_reset_options", "source_reset_options",
  "purge", "$@52", "purge_options", "purge_option", "kill", "kill_option",
  "use", "load_stmt", "data_or_xml", "opt_local", "opt_from_keyword",
  "load_data_lock", "load_source_type", "opt_source_count",
  "opt_source_order", "opt_duplicate", "duplicate", "opt_field_term",
  "field_term_list", "field_term", "opt_line_term", "line_term_list",
  "line_term", "opt_xml_rows_identified_by", "opt_ignore_lines",
  "lines_or_rows", "opt_field_or_var_spec", "fields_or_vars",
  "field_or_var", "opt_load_data_set_spec", "load_data_set_list",
  "load_data_set_elem", "opt_load_algorithm", "opt_compression_algorithm",
  "opt_load_parallel", "opt_load_memory", "text_literal", "text_string",
  "param_marker", "signed_literal", "signed_literal_or_null",
  "null_as_literal", "literal", "literal_or_null", "NUM_literal",
  "int64_literal", "temporal_literal", "opt_interval", "insert_column",
  "table_wild", "order_expr", "grouping_expr", "simple_ident",
  "simple_ident_nospvar", "simple_ident_q", "table_ident",
  "table_ident_opt_wild", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "TEXT_STRING_password", "TEXT_STRING_hash",
  "TEXT_STRING_validated", "ident", "role_ident", "label_ident",
  "lvalue_ident", "ident_or_text", "role_ident_or_text",
  "user_ident_or_text", "user", "role", "schema", "ident_keyword",
  "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_rvalue_system_variable_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "lvalue_variable",
  "rvalue_system_variable", "transaction_characteristics",
  "transaction_access_mode", "opt_transaction_access_mode",
  "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "$@53", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@54",
  "shutdown_stmt", "restart_server_stmt", "alter_instance_stmt",
  "alter_instance_action", "handler_stmt", "handler_scan_function",
  "handler_rkey_function", "handler_rkey_mode", "revoke", "$@55", "grant",
  "$@56", "opt_acl_type", "opt_privileges", "role_or_privilege_list",
  "role_or_privilege", "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "opt_retain_current_password", "opt_discard_old_password",
  "opt_user_registration", "create_user", "opt_create_user_with_mfa",
  "identification", "identified_by_password",
  "identified_by_random_password", "identified_with_plugin",
  "identified_with_plugin_as_auth", "identified_with_plugin_by_password",
  "identified_with_plugin_by_random_password", "opt_initial_auth",
  "alter_user", "factor", "create_user_list", "alter_user_list",
  "opt_column_list", "column_list", "require_clause", "grant_options",
  "opt_grant_option", "opt_with_roles", "opt_grant_as", "begin_stmt",
  "$@57", "opt_work", "opt_chain", "opt_release", "opt_savepoint",
  "commit", "rollback", "savepoint", "release", "union_option",
  "row_subquery", "table_subquery", "subquery", "query_spec_option",
  "init_lex_create_info", "view_or_trigger_or_sp_or_event", "definer_tail",
  "no_definer_tail", "definer_opt", "no_definer", "definer",
  "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@58", "view_query_block",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@59", "udf_tail",
  "sf_tail", "$@60", "$@61", "$@62", "$@63", "routine_string",
  "stored_routine_body", "sp_tail", "$@64", "$@65", "$@66", "$@67", "xa",
  "opt_convert_xid", "xid", "begin_or_start", "opt_join_or_resume",
  "opt_one_phase", "opt_suspend", "install_option_type",
  "install_set_rvalue", "install_set_value", "install_set_value_list",
  "opt_install_set_value_list", "install_stmt", "uninstall",
  "TEXT_STRING_sys_list", "import_stmt", "clone_stmt", "opt_datadir_ssl",
  "opt_ssl", "resource_group_types", "opt_resource_group_vcpu_list",
  "vcpu_range_spec_list", "vcpu_num_or_range", "signed_num",
  "opt_resource_group_priority", "opt_resource_group_enable_disable",
  "opt_force", "json_attribute", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_int16 yytoknum[] =
{
       0,   256,  1215,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   799,   800,   801,   802,   803,   804,   805,
     806,   807,   808,   809,   810,   811,   812,   813,   814,   815,
     816,   817,   818,   819,   820,   821,   822,   823,   824,   825,
     826,   827,   828,   829,   830,   831,   832,   833,   834,   835,
     836,   837,   838,   839,   840,   841,   842,   843,   844,   845,
     846,   847,   848,   849,   850,   851,   852,   853,   854,   855,
     856,   857,   858,   859,   860,   861,   862,   863,   864,   865,
     866,   867,   868,   869,   870,   871,   872,   873,   874,   875,
     876,   877,   878,   879,   880,   881,   882,   883,   884,   885,
     886,   887,   888,   889,   890,   891,   892,   893,   894,   895,
     896,   897,   898,   899,   900,   901,   902,   903,   904,   905,
     906,   907,   908,   909,   910,   911,   912,   913,   914,   915,
     916,   917,   918,   919,   920,   921,   922,   923,   924,   925,
     926,   927,   928,   929,   930,   931,   932,   933,   934,   935,
     936,   937,   938,   939,   940,   941,   942,   943,   944,   945,
     946,   947,   948,   949,   950,   951,   952,   953,   954,   955,
     956,   957,   958,   959,   960,   961,   962,   963,   964,   965,
     966,   967,   968,   969,   970,   971,   972,   973,   974,   975,
     976,   977,   978,   979,   980,   981,   982,   983,   984,   985,
     986,   987,   988,   989,   990,   991,   992,   993,   994,   995,
     996,   997,   998,   999,  1150,  1151,  1152,  1153,  1154,  1155,
    1156,  1157,  1158,  1159,  1160,  1161,  1162,  1163,  1164,  1165,
    1166,  1167,  1168,  1169,  1170,  1171,  1172,  1173,  1174,  1175,
    1176,  1177,  1178,  1179,  1180,  1181,  1182,  1183,  1184,  1185,
    1186,  1187,  1188,  1189,  1190,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1205,
    1206,  1207,  1208,  1209,  1210,  1211,  1212,  1213,  1214,  1216,
    1217,  1218,   124,    38,    45,    43,    42,    47,    37,    94,
     126,  1219,    40,    41,  1220,    59,    64,    44,    46,    58,
      33,   123,   125
};
# endif

#define YYPACT_NINF (-4792)

#define yypact_value_is_default(Yyn) \
  ((Yyn) == YYPACT_NINF)

#define YYTABLE_NINF (-2958)

#define yytable_value_is_error(Yyn) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    6710,  3234,  1834, -4792,     0,   405, 76586,    46,  1917,  1917,
     528,  3519, -4792, -4792, -4792, 12703,  4862, -4792, 76586,  1834,
     484, 50890, 76586, -4792,   632,  1016,     9,   303,   379,  1137,
    1834, 76586, -4792,   768,  1840,  1834,  1029,   585, 66950,  1544,
     528, 76586,  3438, 32403,  7644, -4792, 66950,   118,   224, 76586,
    1222,    43,  1622, 76586,  1399, 67753,  2962, 24281,  2154,  1688,
    1183,   368, -4792, 18492,  1185,  2118, -4792,  2047, -4792, -4792,
    1821, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, 58920, -4792,   690,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792,  2202,  1790, -4792, -4792, -4792, -4792,
   -4792,   -90, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792,   176, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, 68556, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
    2085, 76586,  2109, 76586,  1700,  2120, 76586, 65344, 76586, 76586,
    1735,  1544,  2223,  2288, -4792, -4792,  2322, -4792, -4792,  1917,
     528, -4792, -4792, 76586, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792,  1655, -4792,  1656, -4792,
   -4792, -4792, -4792, -4792, -4792,  1075, -4792, -4792, 76586, 76586,
   -4792,  2480,  2285,  2299,  2337,  2130, 65344,   154, 76586, -4792,
    1996, -4792,  2285,  2285,  2393,  2400,  2102, -4792, -4792, -4792,
    2322,  2664, -4792,  1863,  1888,  1891, 24281, -4792,  1899,  1901,
    1907, 18492,  1910,  1923,  1941,  1959,  1966,  1969,  1986,  1989,
    1989,  1992,  2021,  2023,  2029,  -123,  2042, -4792,  2044,  1183,
    2058, -4792, -4792,  2061,  2063,  2068,  2094, -4792,  2108,  2121,
    2126, 19319,  2132,  2134, -4792, 43657,  2137,  2152,  2161,  2166,
    2171,  2174,  2198,  2215,  2235, -4792, -4792, 18492,  1992, -4792,
   -4792, -4792,  2237,  2240,  2245,  2254,  2266,  2314,  2316,  2319,
    2339,  2355,  2370,  2376,  2379,  2399,  2407,  2420,  1992, -4792,
    1152,  2435,  2438,  1188,  2445, -4792,  2448, -4792,   264,  2453,
    1989,  1992,  1992,  2459,  2472,  2475,  2497,  2498,  2506,  2508,
    2513,  2515,  2516,  2522,  2537,  2545,  2551,  2553,  2558,  2564,
    2565,  2566,  2572,  2574,  2575,  2593, 24281, 24281, -4792, 24281,
   10222, 33207, -4792, 76586, -4792, -4792,  1912, -4792, 54102,  3320,
   -4792,  3192, 24281,  1218, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792,  2298, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792,   516, -4792,  2605,  2080, -4792, -4792,
    1544,  1544,  1544, 76586,  2710,  1544,  1544,  2057, 76586,  1544,
    2402,  1544,  1544,  1544,  2778,  1917, -4792, -4792, -4792, -4792,
    2934,  2680,  2634,  3267, -4792,  2468, -4792, -4792, -4792,  2738,
   -4792,  2608, -4792,  2606, -4792,  2774,  2608, -4792,   533,  2608,
     361, -4792, -4792, -4792,  2608, -4792, -4792, -4792, -4792,  1815,
   -4792, -4792, -4792, -4792,   761, -4792,  2815,   112, 65344,  3018,
   -4792, -4792, -4792,  3016, 76586,     0, -4792, -4792, 18492, -4792,
    3056, -4792,   376,  3127, -4792,  1917,  3152,  3397, 76586, 59723,
   -4792,  1917, -4792, -4792,  3196, -4792,   122,   165,  2823, -4792,
   -4792,  2950, -4792,  3285, 51693,   267, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, 12703,  3438, -4792, -4792,
     109,  2959,  1109, -4792, -4792, 54905,  1136, -4792,  1524, -4792,
   80601, -4792,  3254, 34011, 56511, -4792,  2640, -4792, -4792, -4792,
   -4792, -4792, -4792, 78995,  2648,   215,   228,  3316, -4792,    90,
    2662,  2668,    90, 60526,  3209,  1027,   480,   386,   498, -4792,
    3294, -4792,  2932, -4792, -4792,   511,  3193, -4792,  3331, -4792,
   -4792,  2956,  3209,  2983, -4792,  7492,    90,  3360,  1479,  2276,
     436,  1587,  2950, -4792,   678,   741, -4792,   741, -4792,  2707,
   -4792, 76586, 76586,     0, -4792,  1917, -4792,  2716,  2713, -4792,
   76586,  2717, -4792,  2726, -4792,   410,   410,   410,  3456,   410,
   -4792,   410,  3184,  2725,  2750,  3525,  3425,  2123,  3428, -4792,
    3380,  3478,  1591,  2767,  2202,  2771,   -90,  2772, -4792, -4792,
    2773, 76586,  1989, -4792,  2777,  1696, -4792, -4792,  2776, -4792,
    2988, -4792,  -104,  3436,  3445,  3447, -4792,  2779, -4792, -4792,
   -4792, -4792,    20, 31599,  3359,  2202, -4792,   341,  3561,  2227,
    2227,  2227,  3209, -4792,  1790,  1510,  3318,  3418,  3459,  3375,
    3432, 61329,    79, -4792, -4792, 59723, -4792, 76586, 76586,   482,
   65344, -4792, 76586, -4792,  3239,  2835,  9090, 76586, -4792, 76586,
   76586,  3097, -4792, 76586, -4792,    -3, -4792,  1987, 18492, -4792,
   76586, -4792,  3049,    73, -4792,   277,  1314,   175,   182, 76586,
   76586, 76586,  3114,  3451, 76586,  2947,  3652, 76586, 59723, 83813,
   76586, 76586,  2285,  1650,  1648, -4792, -4792, 18492, 18492,  2246,
    3590,  3650,  3650,  3650,  2529,  3031, 18492, 18492, 18492, 18492,
   18492, 18492,  2260,  2847, -4792, -4792,   -23, -4792,  2848, 18492,
   18492, -4792, 18492, 18492, 76586, -4792,  5663, 18492, 18492,  1165,
    3528, 18492, 18492, 18492, 10222,  5287, 18492, 18492, 76586,  3663,
    2850, -4792,  2846,  2278, 18492, 18492,  2291, 18492, 18492, 18492,
   18492, 18492, -4792, -4792, 18492, 18492, 24281, 18492, 18492, 18492,
   18492, 18492, 18492,  2852, 18492,  3650,  3650, 18492, 18492,  2301,
   -4792, -4792, 18492,  2665,  2665, -4792, 18492, 11049, 18492, -4792,
   -4792, -4792,  2857, -4792, -4792, -4792, 76586,  3650,  3650, 18492,
   18492, 18492,  3650,  3650, 18492,  2863,  2867, 18492, 18492, 18492,
   18492, 18492, 30795,  2875,  2876,  2881, 24281,  2329, 18492,  3590,
    3590,  3590,  -115,   341,  1963,   286,   192,  3204, 18492, 18492,
   -4792, -4792, 69359, -4792, -4792, -4792, 18492, -4792, 18492, 18492,
   -4792, -4792, -4792, -4792, -4792, -4792,  1663, -4792, -4792, -4792,
   20146, 24281, 24281,  2885, 24281, 24281, -4792, -4792, 24281, 24281,
   24281,  3434,  3046, 24281, 24281, 25108, 25935, 24281, 24281, 24281,
   24281,  1881,  3590, 65344, 24281, -4792, -4792,  2298,  2298, 18492,
   46869, 76586, 76586, 76586,  3339, 76586, 76586, 65344,  3009,  1331,
   76586, 76586, 59723, 76586, 83813, 76586,  1544,  3105,  4359, 36423,
   -4792, -4792, -4792, -4792, -4792,  3160, -4792, -4792, -4792, -4792,
   -4792, 76586, -4792, -4792, 59723, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, 65344, -4792,   179, 59723, 52496,   171, -4792, 77389,
   76586, -4792,     0, -4792,  3196,  3208, -4792,  -116,  2529,  3675,
   -4792, -4792,  3530,  3698, 76586, 76586,   541,  3442, -4792, -4792,
    2909,  3161, 76586, 76586, -4792, 76586, 70162, -4792,  3453, -4792,
    2917, -4792, -4792,  2298,  4456, -4792, -4792,  2680,  3368,    61,
    3260,   175,    84, -4792, -4792, 82207, 76586, -4792, -4792, -4792,
   -4792,  3677, 18492, -4792, 59723,  3017,  3180,  3480,   772, -4792,
    2928,  2929, -4792,  3100, -4792, -4792,  2933, -4792,  2935, 76586,
    1635,   215, -4792, -4792, -4792, -4792, -4792, 76586,  2939,  1524,
   -4792,  2648,   215, 34815, -4792, 11876, -4792,  3219,  3523,  2298,
   18492, -4792, -4792,  2964,  2285, 76586, 76586, 76586, 76586, 76586,
   59723, 76586, -4792, -4792,   129, -4792, 57314, -4792, -4792, -4792,
   -4792,    90, 76586, -4792, 76586,    90, 59723,  1027, 76586,    90,
   -4792,  3526,  3224, -4792, -4792, -4792,  3607, -4792, -4792,  3595,
    2965, -4792,  3523,  1027, -4792,  3606, -4792, -4792, -4792, -4792,
    1027, -4792, -4792, -4792,  1027,  1027,  1027,    90,    90, -4792,
    1093,  3713, -4792,  2977, -4792, -4792, -4792, -4792,  2979, -4792,
    3606, -4792, -4792,  2985, -4792, 20973,  1399,  2717, 76586, 76586,
    3793, -4792, -4792,  2990, -4792,  3444,  3262, -4792,  3178, -4792,
   -4792,   174, -4792, 76586, 18492,  1856, -4792, -4792, 59723,  3688,
   -4792, -4792,  2202, -4792, -4792,  3669, -4792, -4792,  3003,  3099,
    3790,  3054, -4792,  3388,  3388,  2683, 65344,  3476,  3194,  3121,
    3476,   186,  3476, -4792, -4792,   -57,   -51, -4792,  3126,   -10,
    3126,  1654, 59723,  3215,     0,     0,     0,   690, -4792, -4792,
    2826,  3283,  3283, 65344,  3029, -4792, -4792, -4792,  3355, -4792,
   -4792,   341, 18492, -4792, -4792,   -90,   -90,   -90, -4792,  3209,
   -4792, -4792, -4792, 70965,  1510,  3016,  3459, -4792, 65344,  3034,
   -4792,  2293, -4792,  2112, -4792, -4792, -4792, -4792, -4792, -4792,
     274, -4792, -4792, 76586, 76586,  1832, -4792,  3547,  3860, -4792,
    3050,  3761,   215,   215,  3761,   215,   215, -4792,  3302, -4792,
     215,    82, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792,  3718,  2743,   215,  2078,  3477,   215,   215,  3811,   215,
    3486,  3487,   215,   215,   215,   215,  3311,  3759, -4792,   215,
    3635,  1698,  3458,  3636,   215,  3498, -4792,  1783,  3768,   215,
     215,   215,   215,   215,  3811,  3505,  3858,   215,   215,  3507,
     403,  3511,  3512,   215,  3333,   215,   215,   215,  1019,   215,
     215,  3527,   215,  3301,  3305,   215,  3529,  3529,   215,   215,
   -4792,  7226, -4792, -4792, -4792,  2568, -4792, -4792,   783, -4792,
   -4792,  3103,  3104, -4792, -4792, -4792, -4792,  3433,  3226, -4792,
    3449,  3309, -4792,  3097,    83, 71768, 76586, -4792, -4792,  3116,
    3122,  1639, -4792,  2529,  3125,  3118, -4792,  3819, -4792, -4792,
   -4792, 76586, -4792, -4792, -4792, -4792,  3343, -4792, -4792, -4792,
   -4792,  3059, -4792,  3896,  3508, -4792, -4792,  3783, -4792,  3581,
    3952,  3250,  3859,  3594,  2285,  3761,  3361,  3965,   415, -4792,
      78,  2935,  3384,   -86, 76586,  3777,  2285,  2285,  2285,  2285,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792,  2285, -4792, -4792,
   -4792, -4792, -4792, -4792,  3097,   307,  1473, -4792,  3650,  3159,
   18492,  3166,  3167,  3168, 18492,   453,   408,  1597,  1267,  1596,
    1617,   238, 18492,  3170, 13530, -4792,  3171, -4792, -4792,   314,
     352,  1631,  1641,  3172, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792,  3786, -4792,   354,  3189, -4792, -4792,
   -4792, -4792,  3186, -4792, 18492,  1715,   388,   417,   329,  3201,
     470,  1875,  1911,  3198, 76586, 76586,  3650,  3207,  1719,  1751,
    3650,  3210,   477,  1777,  1945,  2048,  2051,   479,  2073,  3475,
    1789,   578,   618,  1795,   668,   691, -4792,  1805,  3211,  3212,
     717,   206,  3650,  3217,   363,  3197,  3205,  1828, 14357, 15184,
   16011,  1615,   859, -4792,  3228, -4792,  2846,  3229,  3232,   369,
     272,  1857,  3235,  3233,  2074,  3334,  3334,  1867,   902,  1869,
     902,  1252, 65344,  3236, -4792, -4792, -4792, -4792,  3334,  3334,
    3334,   111,  3650,  3238,   394,   341, -4792, 18492,  3214,  3230,
    3241, 65344, 18492,   229, -4792, -4792, -4792,  2320,   358, -4792,
   -4792, -4792, -4792, -4792,  1377, -4792,  3242, -4792,  1183,  2690,
    3248, 10222, -4792,   326,  3248,  3439,  1224,  1224, 24281, -4792,
    3251,  3484,  2820, 19319,   937, 19319,   937,  3248,  3248,  3248,
   -4792, 24281,  3252, 24281, 24281, -4792,  3590, -4792, -4792, 54102,
    3247,  3245, -4792, -4792,  1106, -4792, -4792,  3249, 76586,  1331,
   -4792, -4792,  1544, -4792, -4792, -4792,   107, -4792, -4792,   204,
   -4792,  3253,   143,  2935,  3886, 76586,  3255, -4792,  3799,  3802,
    3803,  3804, -4792, -4792, -4792,  3806, -4792,  3807, -4792, -4792,
    3268, -4792, 76586, 29991, 65344, -4792,  3269, -4792,  3937, -4792,
    3722, -4792, -4792,  2104,  3518, -4792, -4792, -4792, -4792, 47672,
    1170, -4792, -4792, 76586, -4792,   119,   189,  3897,  3467, -4792,
    2985, 76586,     0,   421,     0, -4792, 76586, -4792,  3821, -4792,
     364,  3277, -4792,  3278, 65344, -4792, -4792,   276, 59723, 59723,
    3279, -4792,  3533,    40,  3529,  3288, -4792,  3292,  4102,  4110,
     165, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792,  3299,  3967,  3312, 59723, 59723,   179,
   -4792, 76586, -4792, 27571,  3467, -4792,  3931,  3556,  3562,  1076,
   -4792, 62132, -4792,  2529,   626,  3388, -4792,  3388,  2242, -4792,
   -4792,  3881, -4792,  3716, -4792, 83813, -4792, 65344, 83813,  3951,
    3321,  3326,  3328,  3330,  3332, 79798, 18492, -4792, -4792, -4792,
   11876,  3338, -4792, 79798, -4792, -4792, 24281,  2044, -4792,  2339,
   -4792,  2529, -4792, -4792,     0,  3962, -4792,  2529,  3344, 76586,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792,   207, -4792, -4792, -4792, -4792, -4792,
   -4792,  3557,    90, -4792, -4792, -4792, -4792, -4792,  3734,  3209,
    3193,  3962,    90,  4115, -4792,    90, 76586, 76586,    90, -4792,
   -4792, -4792, -4792,  3668,   678,  3569,   741, -4792,  2044,  2529,
    3362,  3366, -4792, -4792, -4792,  2150, -4792,  1183,   410,  3779,
   -4792,  3994, -4792, -4792, -4792, -4792, -4792,  1144,  1903, -4792,
     128,   133,  3788,  2086,  3377,   215, -4792, -4792, -4792,  3805,
     552, -4792,  3180,  3126,  3126,  3406,  3422, -4792, -4792,  3979,
   83010,  3815,  4066, 65344,  3979,  3180,  4111, -4792,  3180, -4792,
   -4792,  3180, -4792, -4792,  3648,  3651, -4792, -4792,  3654, -4792,
   -4792,   441,  2458, -4792,  2533,   185, -4792, -4792, -4792, -4792,
   -4792, 76586,  3553, -4792,  1730, -4792, -4792, -4792, -4792,  2562,
   -4792, 35619,  3882,  2177,  3400, -4792,  3435,  3435, -4792, -4792,
   76586,    71, -4792,  3404, -4792, 28380, -4792, 65344,  2827, 65344,
   -4792, -4792, -4792, -4792, -4792,  3862,   162, -4792, -4792, -4792,
   -4792, -4792,  2685,  2860, -4792, -4792,  4185,  3769,  3984,  3664,
    2860,  2975,     0,  2828, -4792,  3391,     0,  2828,  3391,  3391,
   76586,     0, -4792,  2591,   215, -4792, 76586,  1639,  1834,  1639,
   -4792,  1050, 76586, 44460, 72571, 76586, 76586, 76586, 76586,  1834,
    1455,  1455, 76586,  2845, 73374,  1834,     0,     0,     0,     0,
    2562,   215,  2845, -4792, 73374, -4792, 76586, 76586,  3985, 76586,
    3997, 76586, 76586, -4792, 65344, 76586, 73374, -4792,   215,  1955,
    1455, 74177,  1455,  1455, 76586,  1834, 76586,  2770,     0,  1834,
   -4792, 76586, -4792, -4792, 76586, 76586,  1834,  1834,  3158, -4792,
    2770,  2770,  2862, -4792, -4792, 76586,  2845, 73374,  3461, -4792,
   -4792, 62935,  3462, -4792, -4792, -4792,     0,     0, -4792,   215,
     215,  3867, -4792, -4792, 94246,  9376,  1877,   215,  3567,  3919,
    1683, 76586, -4792,  3632,  3633, -4792, -4792, -4792, -4792, -4792,
    1639, 73374, 74980,  4057, -4792, 18492,  4147,  4149,  4151,  4152,
    4154,  4155,  4156,    77, -4792,  3689, -4792, -4792, -4792, -4792,
   -4792, -4792,   126, 76586,  3664,  3609,  3678, 76586,  3649, -4792,
    4032,  3446,  3761,  3979, -4792,  4301, -4792, -4792,  3531, -4792,
   -4792, -4792,  3670, 59723,  3861,   215,  1209,  1209,  3958, -4792,
    8130,  2285, 76586, 76586, 76586, 76586, 76586, -4792, 21800, -4792,
    3514,  3334,  2529,  3334,  3334,  3334,   339, 18492, 18492,  4186,
    4830,   114, -4792, 63738, -4792, -4792, -4792, 63738,  4830,  2158,
    3334,  3516, -4792,  4096,  4097, -4792, -4792, -4792, 18492, 18492,
   -4792, 18492,   168, -4792, 18492, 18492, 18492, 18492, 18492, -4792,
   -4792, 24281, -4792,  3517,  3520,  3334, -4792, -4792,  3521,  3334,
   18492, -4792, -4792, -4792, -4792, 18492, -4792, 18492, -4792, 18492,
   18492, -4792, 18492, 18492, -4792,  3334,  3334, 22627, 18492, 18492,
    3524,  3334, -4792, 18492, 18492, 18492, -4792, 18492,  1894, 18492,
    2663, 18492,  2682, 18492, -4792, 18492, -4792,  3334,  3334, -4792,
   18492,  2157, -4792,  2845, -4792,  3650,  3334, -4792, 45263, -4792,
   -4792,   378, 30795,  3535,   378,  3536, 24281, -4792,  3334, -4792,
   -4792, -4792,  1506,  3537,  3334, -4792, 18492,  2181, -4792, -4792,
   -4792,  3538, -4792,  2529, -4792, -4792, -4792, -4792, -4792, -4792,
   24281,   399, 24281,  3439, 24281,  5287,  5287,  2752, 10222, -4792,
    1258,  3439, -4792, -4792, 18492, 18492, 48475, 76586,  1609, -4792,
    3649,  1373, -4792,    56, -4792, -4792, 59723, -4792, -4792, -4792,
   -4792, -4792,   143, 65344,  3522, -4792, -4792, -4792, -4792, -4792,
    3606, -4792,  4108,  3278, -4792,  3780,  3781,  3782, 33207, -4792,
   38031, -4792, -4792, -4792, -4792, 38031,  1538,   179, -4792, 76586,
   59723,  3539,  3542,  3543,  3766,  3702, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792,  3467,  3541,  3209,
   -4792,  3529, -4792, -4792, -4792, 79798, -4792,  3534, -4792,  3545,
   -4792,  1987, -4792,    38,    -7, 76586, -4792, 18492,     0, -4792,
    3791, -4792, 76586, 76586, -4792, -4792, -4792, -4792,  1190, -4792,
    3922, 76586, 76586,  3564, -4792,  3606, -4792,  4456, 29991,  4164,
    3998,  4180,    33, 47672, -4792, -4792,  3559,  1183, 26762,  3653,
   -4792,  3555,  2172, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792,  3529,  4545,  4173,  3467, 83813, 83813, 83813, -4792, -4792,
   -4792,  3656,  3180,  3126,  3126,   278,  3960, -4792, -4792, -4792,
   -4792,  2935, -4792, -4792,  2827, -4792, -4792, -4792, -4792, -4792,
     215,  2529, -4792, 34815, -4792, -4792,  1455,  3209,   181, -4792,
   57314, 57314, 59723, -4792,  4021, -4792, -4792,  3209, -4792,     0,
   -4792,  1027,  1027, -4792, -4792, -4792,  2382,  3785, -4792, -4792,
   20973, -4792, 76586, -4792,  3570, -4792,  4063, 76586,  4243,  3578,
   24281,  3579, 24281,  2827,  3848,  3582,  4391,  2845,  3283, -4792,
    4004, -4792, -4792, -4792, -4792,  3909, -4792,  4403, -4792, -4792,
   -4792,  2935, -4792,  3476,  2373,  4068,  3126,  4009,  3126,  3126,
   -4792, -4792, -4792, -4792,   510,  2845,  2845,  2845,  2845,  2533,
   -4792,   903,   135,  1297,  2827,   149,   185, -4792,  3588, -4792,
   -4792, 63738,  4344, -4792, -4792, -4792, -4792, -4792, -4792, 18492,
     478,   389,  1311, 28380, 76586, 49278, -4792,   753, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,   215,
   -4792,   215,     0,  3887, 75783,  3889,  3891,  3893,  3927, -4792,
   -4792, 76586,  4055, -4792,     0,  1453,     0,     0,     0,     0,
    2845,     0,     0,  2204, -4792, -4792, -4792,   116, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, 65344, -4792, -4792, -4792, 76586,   241,
   76586,  3614,  4174,  4177,  1639,   913, 76586,  3619,  3828,  3852,
   55708, 94250, -4792, -4792, -4792,  4106,  4106,  2049,   242, 73374,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, 76586, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792,  3059,  3646, -4792,  2827,
   -4792, -4792, -4792, -4792, 58117,     0, -4792,  3911, -4792, -4792,
   76586,  3646, -4792, -4792,   628, -4792,  3839,  3914,     0, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, 94250,
   73374,  3658, -4792,   460, -4792, -4792, -4792, -4792, 73374,  3899,
    3904, -4792, 76586, 73374, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, 76586, -4792,
   -4792, 76586, -4792, -4792, 62132, 63738, -4792,  4290,  3200,  7226,
   -4792, -4792, -4792,  3103, -4792, -4792, -4792,   204,  4107,   215,
     366,   282, -4792,  4038, -4792, -4792,  2726,  4114,  4117,  3674,
   -4792,  3676, -4792,  3665, -4792, 71768,  2529,  3679,  3679,  3680,
    3680,  3681,  3681,  3683,  3819, -4792,  4338,  4347,  4348,  4349,
    4350,  4351,  4353,  4354,  4355,  4356,  4358,  4360,  4367,  4368,
    4370,  4371,  4374,  4375,  4376,  4377,  4379,  4380,  4383,  4385,
    4389,  4394,  4395,  4396,  4397,  4399,  4400,  4404,  4407,  4408,
    4410,  4411,  4412,    85, -4792, -4792, -4792,   172, -4792,  3729,
    3697,  3649, 65344,  3741, -4792,  4307,   215,   215,   215,   215,
   -4792,   157, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792,   204,  4557, -4792,  3794, -4792, 83813,
   -4792,  3215,  -142, -4792, -4792, -4792, -4792, -4792, 76586,  2123,
   -4792, 76586, -4792, 42051, -4792, -4792, -4792, -4792,   338,  1557,
   -4792, -4792,   580, 76586, -4792,  3755,   751, -4792,  2122, 19319,
    1921,  3334, -4792, -4792, -4792, -4792, -4792, 18492,  2529,  1299,
   -4792,  3756,  3756,  3758, -4792,  3767,  4175,  3756, -4792, -4792,
   -4792, -4792, -4792, -4792,  4529, -4792, -4792, -4792, -4792,  4345,
    3758,  4346, -4792,  3756, -4792,  3880,  4580,  3854,  3795,  3816,
    3818,  3334, -4792,  3334, 18492, 18492,  1931,   412,  1935,  4558,
    4120,  1268,  1294,   475, -4792,  1944,  3515,  3334, -4792,  3334,
   -4792,  1951,  2026,  2036,  2040,  1342,  2081,  2221, -4792, -4792,
   19319,  2105,  1566,   501,  3334, -4792,  2143,  1389,  1450,  2168,
   18492,  2247, 18492,  2256, 18492,  2263,  2310, -4792, -4792,  2317,
    3789,  3789,  3801,  3824, -4792, 76586, -4792, -4792, -4792, -4792,
    3928,  3929,  3334,  3830,   378,  3334,   378,   136, -4792,  4046,
    1364,  3334, -4792,  2325, -4792, 76586, -4792, -4792, 18492,  1218,
     139, -4792, -4792, 24281,   663, 24281, -4792,  3832, -4792, -4792,
   -4792, -4792,  4337,  4617, -4792, -4792,  4105, -4792, -4792, -4792,
    3255, -4792, -4792,   411, -4792,  4482,  3831, -4792, -4792, -4792,
   -4792, -4792, 47672, -4792,  1234,  3843, 50081, 59723,  4276,  3209,
   20973, -4792,  4200,   215,   421, 76586,  1639,  4430, -4792, -4792,
   -4792,  3283,  4381, -4792, -4792, -4792,  2529, -4792, 59723, -4792,
   -4792, -4792, 76586,  1399, -4792, 39639, -4792, -4792, -4792, -4792,
    3840, -4792, -4792, -4792, -4792,  4504, -4792,  4284,   179, 59723,
    4065, -4792,  4474, 18492,  4545,  3845,  3855,  3856,  3857,  3863,
    3865, 28380, 28380,  4423,  4427, -4792,  4303,  1511,  4303, -4792,
   42854, 28380, 28380,  3124,  2726,  4643,  4479,  4173,  2935,  2935,
    2935,  3388,  3388, -4792, -4792, -4792, -4792, -4792, -4792,   195,
   -4792, 11876, -4792, -4792, -4792, -4792, -4792, -4792, -4792,  3253,
   -4792,  3606, -4792,  3467,    90,  4537, -4792,  4538, -4792,  3872,
    4543,  4305, -4792, -4792,  2845, -4792, -4792, 76586,  2589, 76586,
    3231, -4792,  4658,  3888, 24281,  4552,  3905,  4485, -4792, -4792,
    3923,  3476, -4792,   906,  1515,  3476, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,  1611,  4616,
    3322,  4477, -4792, -4792, -4792,  2298,  2298, -4792, -4792, -4792,
    1687,  4450, -4792, 28380,  3529, 49278,  -195, -4792, -4792,  3910,
   76586,  2770,     0, -4792, -4792, -4792, -4792,  4626, -4792,  4632,
    1871,  4378,  4585, -4792, -4792,   199, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,  2975, -4792,
    3926,  2827,  4352,  3932, 18492, 76586, -4792, -4792, -4792,  4020,
   -4792, -4792,  3933, 46066,  1209,  1209,  2224, -4792, -4792, -4792,
   94250, -4792,  3756,  3756,  3756, -4792, -4792,   331,  3758, -4792,
   -4792,  3934, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
     488,  2162, -4792, -4792,   488, -4792, -4792, -4792,   223,  2025,
   -4792, -4792, -4792, -4792, -4792,  3939, -4792,  3756,  3758,  3758,
   -4792, -4792,   488,  3756, -4792,  3756,  4310,  4848, -4792,   141,
    3756,  3756,  3756,  3941,  3767, -4792, -4792, -4792, -4792, -4792,
    4628,   427, -4792, 94250, -4792, 76586, -4792,  3677,  3677, -4792,
   -4792, -4792, -4792,  4194, -4792, -4792,  1802, -4792, 76586, -4792,
   -4792, 76586, 76586,    89,  1190,  3943,  3944,  3646, -4792, -4792,
   -4792,  3950,   269, -4792,   284, -4792, -4792,  3886,   884,   455,
    4169,  2100, -4792, 76586, 76586, -4792, -4792, 74980, -4792, 40443,
   -4792, -4792, 41247, -4792, -4792,  1196, -4792, -4792,  1928, -4792,
   -4792,  3946,     0,  2845,     0, 64541,  2845,  1423,  2827,   803,
    2845,  2845,     0,     0,  2845,  2845,  1491,     0,     0,  1455,
       0,  2845,     0,  2845,  2845,     0,     0,     0,     0,     0,
       0,     0,  2845,  1460,     0,     0,  2845,  2827,  3689, -4792,
   -4792, 46066,   215,   215, -4792,   205, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792,  4387, 46066,  1191, 76586,     0,
    3391,  3391,  2827,  3174, -4792,  3979,  4544,  2935,   185, -4792,
   -4792,  3226,  3949, -4792, -4792, 76586,  2231, -4792, -4792,  8111,
   -4792,  4302,  4398, -4792,  1424,  3954, -4792, -4792,   521,  5287,
   -4792, -4792,  2529, 18492,   890, -4792, -4792,   488,  4401, -4792,
    1340, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792,  3955,  4830,  4534, -4792, -4792, -4792,
   -4792, -4792,  5287,  5287, -4792, -4792, 18492, -4792, 18492,   410,
    3957, 18492, 18492, -4792, 18492, -4792,  1056,  3959,  4145, -4792,
   -4792, -4792, -4792, -4792, -4792, 18492, -4792, -4792,  5287, -4792,
   18492, -4792, -4792, 18492, -4792, -4792, 18492, 18492, -4792,  2333,
   -4792,  2389, -4792,  2409, -4792, -4792, -4792,  2827,  3964,  3971,
    2845,  3334, -4792,  3973,  4390, -4792, -4792, -4792, 18492, -4792,
    3334, -4792,  3334,  4588,  4830,  1691, -4792, -4792, -4792,  2262,
   -4792, -4792, -4792, 18492,  1218, -4792, -4792, -4792, -4792, -4792,
   -4792,  4366, -4792,  4766, 38031,  4218,  4592, -4792, -4792, -4792,
   -4792,  1244, -4792, -4792,  2272, 76586,  4783,  4432, 16838, -4792,
   -4792,  1639,  4430,  4541, -4792,  2154, -4792, -4792,  3980, -4792,
     215,  2356,  2274, -4792, -4792, 20973,  3986, -4792,  4230, 29991,
    4618, 47672,    33,  4203, 59723,  1478,  2726, 28380, -4792, -4792,
   -4792, -4792, -4792,  2172,  3991,  3992,  3993,  2172, -4792, -4792,
   -4792,  4559, -4792,  4303,  4303,  4560,  4569, -4792,  3560,  3603,
     529, -4792, 17665, 18492,  4131,  4479,  3126,  3126,  2827, -4792,
   -4792, -4792, -4792,     0,     0,  1668,     0,  4669,  4705, -4792,
    2277, -4792, -4792,  2282, -4792,  4556,  4352, -4792,  3386,  2827,
   76586,  4786,  4814,  3979, -4792, -4792, -4792,  4434, -4792,  3979,
   -4792,  2827, -4792,   151, -4792, -4792,  3900, -4792, -4792,  4790,
    4792,  4690,  4796,  1687, -4792,   677, -4792,  -195,  3467,  1466,
   -4792,  4029, -4792,   512, -4792, -4792, -4792, -4792, -4792, -4792,
    4369, -4792,  1361, -4792, 46066, -4792, 76586,  2292, -4792, 46066,
    2427,  4025, -4792, 46066, 18492, -4792,  2297, -4792,   169, -4792,
   -4792, -4792, 55708,  4310, -4792, -4792, -4792,  4815,   360, -4792,
    4816, -4792,   488, 63738, -4792, -4792, -4792, -4792,   410, -4792,
    1360, -4792,   488, -4792, -4792,  4227, -4792, -4792, -4792,   410,
     488, -4792, -4792, -4792, -4792,  1787, 76586,  1802, -4792, -4792,
   62132,  1082,     0,  3295,  4125, -4792,  4247, -4792,  4734,   337,
    4597,  3649,   215,   215,  4797, -4792, -4792,  3775, -4792,  4659,
    4600, -4792,   792, -4792,  4831, -4792,   488,  4831,  1787,  4495,
   -4792,  1787,  1787, -4792,  3591, -4792,  1802, -4792, -4792, -4792,
   76586, 76586, -4792, -4792, -4792, -4792, -4792,  4049, -4792, -4792,
   -4792,  4501,  4107, -4792,  4502, -4792, -4792,  4461, -4792, 18492,
   18492,  4500, 76586,  4503, -4792,  4801,  4863,  3646,  1401, -4792,
   -4792,  2300, -4792, -4792, -4792,  2326, -4792, -4792,  4060, -4792,
    2336, -4792, -4792, -4792, 76586, -4792,  2346,  2845, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792,  2347,  3391,  3391,  1363,
    1191,  4061,  2348,     0,     0,     0,     0, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792,   211, -4792, -4792, -4792,   149,  3567,
   46066,  4062,  8469, -4792,  1424,  4402, 76586, -4792, -4792, -4792,
   -4792,  4388, -4792, -4792, -4792, -4792,  4513,  1713,  2529,  4071,
    4072,  4073,  4077, -4792,  4079,  2357, -4792,  3880, -4792,  2298,
    4081,  4083,  2455,  4064, -4792, -4792,  3334,  2484,  1507,  2364,
    4566,  4644, -4792,  4481, -4792,  2525,  1796,  2534,  2543,  2561,
    2625, -4792, -4792, -4792, -4792, -4792, -4792,  4084, -4792, -4792,
    4865,  4527,  2529, -4792, -4792,  1026,   378, -4792,  3554, -4792,
   -4792,  4092,  1691, -4792,  4539, -4792,  2380,  4742,  4635, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, 59723,  4542,  4718,  4908,  3467,   153,
   76586,  4432,  4787, -4792, -4792,  2529, -4792, -4792, -4792,  4684,
    4564, 76586, 20973, -4792, -4792,  2356, 76586,  4118,  3840,  3649,
   -4792, -4792, 59723,  4741, -4792, -4792,    33,  1506, -4792,   208,
   -4792, -4792,  4682,  4685, -4792, -4792, 18492,  4124, 18492,  4127,
   -4792, -4792,  1639,  1639, -4792,   529, -4792,  4139,  4128,  4130,
    2529,  1068, -4792,  2529, 76586,  4150,  4131, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792,     0,  4795,  4551, -4792, 76586, -4792,
    2140,  2386, -4792, -4792,  4134,  4132,     0,   906, -4792, -4792,
   -4792,  4840, -4792, -4792, -4792,  4842,   410,   410,  4915,   410,
   -4792,  4917,  4919,   677, -4792, -4792,  4581,  4581,  4599, -4792,
    2403,  4362, -4792,  4352,  2404, -4792, 76586,  2414,  2635,  1041,
   46066,  4602, -4792, -4792, -4792, -4792, -4792, -4792, 63738, -4792,
   -4792,  4831,  2425, -4792, -4792, -4792,  2436, -4792, -4792, -4792,
   -4792, -4792,  1787, -4792,  4157, -4792,  1740, -4792, -4792, -4792,
   -4792, -4792,  3780,  3781,  3782,  1491,  1491, 18492, -4792, -4792,
   -4792, -4792, -4792, -4792,  4610,  4363, -4792, -4792, -4792, -4792,
   -4792, -4792,     0,     0, -4792, 62132, -4792,  4967,  4963, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792,  4158, -4792, -4792, 18492,
   -4792, -4792,  2055, -4792,  4352, -4792, -4792, -4792, -4792,  2529,
    5287,  4905, -4792, -4792,   -91,     0,  4844,  2123,  4877,  4620,
    1974, -4792, -4792, 76586, -4792, 76586, 76586, -4792,     0,  4162,
   -4792,  4171,  2439, -4792, -4792,  2474, -4792, -4792, -4792,  2975,
    1410, -4792, -4792, -4792,  4767, 65344, -4792,   366,  2442, -4792,
   -4792,  4483,   455,  4176,  4167, -4792, 94250,     0,    92, 76586,
   -4792, -4792, -4792, -4792, -4792, -4792,  4624,  4178,  4976, -4792,
   -4792, -4792, 18492, -4792, -4792, 18492, -4792, -4792,  4662,  4832,
   -4792, -4792, -4792, -4792, -4792, -4792,  4181,  2845, 18492,  4960,
    1328, -4792, -4792,  3334, -4792, -4792, -4792,  4634,   188, -4792,
   -4792, -4792,  1244, -4792,  4625, 59723, -4792,  3209,  4432,  2726,
   -4792,  4749,  4596,   908, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792,    33, 59723, -4792,   219, -4792, -4792, -4792,
    2529, 76586,  2529, 76586,  4820,  4820, -4792,   457, -4792, 18492,
   18492, -4792, 18492, -4792,  4994,  4189, -4792, 18492, -4792,  4150,
   -4792,     0,  4857, -4792, -4792,  4198,  4391, -4792, -4792,  1107,
   -4792, -4792, -4792, -4792, -4792,   410, -4792,   410,   410, -4792,
    4748,  4748,  4864,  2474,   289,  3792, -4792,  1410,  2450, -4792,
    1041,   460,     0,   215,   215,   215, -4792,  1041, -4792, -4792,
   -4792, -4792, -4792,  4202, -4792, -4792,   488,   410,   488, -4792,
   76586,  4709, -4792, -4792,  2637, -4792, -4792, -4792, -4792, -4792,
   -4792,  4206,  2639, -4792, -4792,  2465, -4792, -4792, -4792, -4792,
   -4792, -4792,  4405, -4792,  2298,  4361,  4424,  4428, -4792, -4792,
   -4792, -4792, -4792, 76586, 76586, -4792,  2845,  4640,  1609,  2474,
   -4792, -4792,  2476,  1609,  1410, -4792, -4792,  4991,  5019, -4792,
    1041,     0,  4500, -4792, 76586,  3677, -4792, -4792, -4792, -4792,
    4219,  4216, -4792, 76586,  4850,  4223, -4792,  4936, -4792,  2646,
   -4792, -4792, -4792,  4229,  4226, 18492, -4792, -4792, -4792, -4792,
    3146, -4792,  4893, -4792, -4792,  4908, -4792,  4420, -4792, -4792,
   -4792,  4449,  4798,  4812, -4792, -4792,    33,  4237,  4240,  4241,
    4242,  1580,  4238,  4244, -4792, -4792,  4245,  2478,  2481, -4792,
    4246, 76586,  2529, -4792, -4792,     0,  3606, 24281,  4249,  4933,
    1562, -4792, -4792, -4792, -4792, -4792, 57314, -4792, -4792, -4792,
   -4792,  4250,  4505,   215,  4937,  4938,   215,   215,   215,   215,
    4253,  3792, -4792,  4918, -4792,  4310, 76586, -4792, -4792, -4792,
    2845,     0,     0, -4792,   460, -4792, -4792, -4792,  2486, -4792,
    1470,  4702, -4792, 18492, -4792, -4792,  4546, -4792, 91843,  1090,
   -4792, -4792, -4792, -4792, -4792,  4259,  4257, -4792,  2154, -4792,
   -4792, -4792, -4792, -4792,  3649,  1609, -4792,  2100, -4792,  4613,
   -4792, -4792, -4792,   933, 94250,  4942, -4792,  3758, -4792, -4792,
    3400,  3589,  4603, 18492,  4409,  4414, -4792, -4792,  4415,  4416,
   -4792,  4441, -4792, 76586,  4700,  4531, -4792, 78192,  4693, -4792,
   -4792,  5053, -4792,  5054, 74980, 74980,   497, -4792, -4792, -4792,
   -4792, -4792, -4792,  3421, 76586,   215,  4570, -4792, -4792,  4281,
   -4792, -4792,     3,     0,   215,   215,  3649,  3649,  2827, 76586,
    4554, -4792, -4792,   215, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, 76586, -4792, -4792, -4792,   437, -4792,  2653, 18492,  4950,
    4484, 76586,  1583, -4792, 93449, 93449, 76586, -4792, -4792, -4792,
   -4792,  7492, -4792, -4792,   877, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792,  5078, -4792,  4283, -4792,
   -4792, -4792, -4792,  5050,  4731,  5055, -4792, 76586, -4792, -4792,
   -4792,  4801, 94250, -4792, -4792,  3677,  4637,  4295, 18492,  1855,
   -4792,  5102,  1878,  1896, -4792,  5287, -4792,   320, -4792, -4792,
   -4792, 81404,  3980, -4792, 76586,  4421,  2499, -4792, 94235, -4792,
   -4792, -4792,  4299,  2527, 65344,  4304, -4792, -4792,  4571,  2542,
    3283, -4792, -4792,  2595, -4792, 23454, -4792, -4792, -4792, -4792,
       0,     0, -4792, -4792, -4792, -4792, 65344,  2598, -4792, 65344,
   -4792,  1215,  1215,   623,  2529, 18492, -4792, 18492,  4496, -4792,
   -4792,  4931, 76586, -4792, -4792, -4792, -4792, 18492, -4792, 91843,
   91843, -4792, -4792, -4792, -4792,  5098,  4747, -4792,  4750,  4309,
    4990,  3677,  4665, -4792,   261, -4792,  5287, -4792,  3589, -4792,
   -4792,  4445,  4654, -4792,  4451, -4792,  3100, -4792, -4792,  2935,
    3529,  1506, -4792, 78192,  4437,  3677, -4792, -4792, -4792, -4792,
    2827, -4792,  4571,  4677, -4792,  4281, -4792,  2610, -4792,  3439,
   -4792, -4792,  3792, -4792,  4554, -4792, -4792,  5136, -4792,   275,
    4768,  4769, -4792, -4792,  3775,  2529,  2529, -4792,   454, -4792,
   -4792,  4898,  4995, 18492,  2529, 87025,  4325, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   92646, 18492, -4792,   877,  5078, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792,  5017, 87828, -4792, -4792, 65344, -4792,  1908,
   -4792, -4792, -4792, -4792, -4792,  2562,   219, -4792, -4792,  4982,
   -4792, -4792, -4792, -4792, -4792, 23454, -4792, -4792, -4792, -4792,
   -4792,  4547,  5024, -4792,  4523, 18492, 91843, -4792,  5003, -4792,
    4928,  2529,  4868,  4336, -4792,  4333,  2529,  5039, 93449, 93449,
   -4792, -4792, -4792,  -151, -4792, -4792, -4792, 91843, -4792,  5083,
   -4792, -4792,  4465, -4792,  1215,  1215, -4792,   458, -4792,  2529,
   88631,  5114, 76586, -4792,  4598, -4792, -4792, 18492,  5027, 66147,
   89434,  4357, -4792, -4792, -4792,  4665, -4792, -4792, -4792, -4792,
    5013,  4699,  1506, -4792, -4792, 18492, -4792,  5020,  4611, -4792,
    4364, -4792, 91843,  2529, 91843, -4792, -4792,  4969,  6361,  1156,
   -4792,  4365, -4792, 87828,     0,  4959,  4344,  1461,  2529,  5134,
   91843, 76586, 84616,  5038, 90237,  5001, 76586,  3677,  5002,  5005,
   -4792, -4792, -4792,  5152,  4450, -4792, -4792,  1691,  4627, -4792,
   85419, -4792,  2679,  4751,  4568, -4792, -4792,  5081,  3460, -4792,
     410,  4978, -4792,  4834, 91843, 91843, -4792, -4792, -4792, -4792,
   53299, 18492, -4792, -4792, -4792, -4792,  1185, -4792,  4835,  4393,
    4514, 86222, 91040, -4792, -4792, -4792, 29188, -4792, -4792, -4792,
    5021, -4792,  2529, -4792,  1411, 37227,  4716, 53299, -4792, -4792,
   -4792, -4792, -4792, -4792, 65344,  2638, -4792, -4792, 76586,  4418,
   -4792, -4792, -4792, 38835,  4417, -4792,   215,  5058,  4890, -4792,
   76586, 20973,  4851,  5062,  5212, -4792, -4792, -4792,  3391,  5066,
   -4792, -4792,  4433, -4792
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_int16 yydefact[] =
{
    1981,  3090,  1264,  3042,     0,     0,     0,     0,     0,     0,
    3044,  3090,   153,  2094,  2095,     0,  1925,     8,     0,  1264,
     415,     0,     0,   165,     0,  1939,     0,  2155,     0,     0,
    1264,     0,  2149,     0,     0,  1264,  1986,  2131,   392,  1921,
    3044,     0,  1322,     0,  2071,  2875,     0,     0,     0,     0,
    1999,     0,  2872,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2876,     0,     0,     0,     2,     9,    14,    43,
       0,    80,    63,    70,    32,    42,    40,    39,    37,    41,
      38,    31,   142,    87,    66,    26,    16,    21,    18,    28,
      17,    20,    24,    25,    23,    27,    22,     0,    67,  1185,
     145,   144,   143,    34,    84,    29,    30,    33,    77,    83,
      78,    79,    92,  1294,  1292,  1845,  1302,  1301,  1308,  1309,
    1310,  1982,    46,    59,    50,    47,    49,    53,    52,    61,
      62,    48,    60,    57,    58,    51,    55,    56,    54,    72,
      85,   149,     0,    44,   146,   112,   137,   138,   118,   136,
     123,   125,   113,   114,   115,   101,    97,   134,    98,   132,
     122,   116,   103,   102,   140,   117,   131,   130,   135,   129,
     139,    99,   100,   126,   121,   104,   108,   111,    96,   133,
     107,   106,   109,   128,   120,   127,   119,   105,   110,   124,
      45,    64,  2096,    65,    86,    81,    74,   150,    75,    93,
      95,    94,    76,   148,   141,    88,    19,    69,    89,    68,
      15,    36,    90,    91,    82,   151,    73,   147,    71,    35,
       0,  1082,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1921,     0,  1018,  3088,  3089,  3090,  1266,  1265,     0,
    3044,  2275,  1251,     0,  2359,  2358,  2361,  2363,  2364,  2365,
    2366,  2367,  2368,  2311,  2370,  2373,  2375,  2376,  2377,  2378,
    2312,  2380,  2381,  2382,  2383,  2384,  2385,  2313,  2314,  2388,
    2389,  2390,  2392,  2393,  2315,  2316,  2394,  2395,  2396,  2397,
    2398,  2399,  2400,  2401,  2402,  2403,  2318,  2404,  2319,  2405,
    2406,  2408,  2409,  2439,  2410,  2411,  2412,  2413,  2414,  2415,
    2320,  2416,  2417,  2418,  2419,  2420,  2421,  2422,  2423,  2424,
    2321,  2425,  2426,  2428,  2430,  2431,  2432,  2433,  2434,  2322,
    2435,  2436,  2437,  2438,  2323,  2440,  2442,  2443,  2445,  2447,
    2446,  2448,  2449,  2349,  2450,  2451,  2308,  2453,  2454,  2455,
    2456,  2457,  2460,  2461,  2350,  2462,  2463,  2465,  2466,  2324,
    2325,  2468,  2469,  2470,  2471,  2478,  2473,  2474,  2475,  2773,
    2477,  2326,  2481,  2327,  2485,  2484,  2486,  2271,  2487,  2272,
    2488,  2328,  2490,  2491,  2494,  2495,  2329,  2497,  2498,  2499,
    2500,  2501,  2502,  2504,  2330,  2506,  2507,  2508,  2509,  2510,
    2511,  2774,  2513,  2514,  2515,  2518,  2519,  2520,  2521,  2522,
    2523,  2524,  2525,  2527,  2528,  2529,  2530,  2531,  2532,  2533,
    2534,  2535,  2536,  2537,  2538,  2539,  2540,  2541,  2542,  2543,
    2544,  2545,  2546,  2548,  2549,  2550,  2551,  2351,  2331,  2553,
    2555,  2556,  2558,  2561,  2562,  2563,  2565,  2569,  2570,  2571,
    2572,  2574,  2576,  2575,  2577,  2580,  2582,  2583,  2581,  2584,
    2585,  2586,  2332,  2333,  2588,  2589,  2590,  2352,  2592,  2594,
    2593,  2353,  2595,  2596,  2597,  2599,  2600,  2601,  2602,  2603,
    2606,  2607,  2608,  2609,  2610,  2354,  2611,  2613,  2334,  2614,
    2355,  2616,  2618,  2617,  2619,  2621,  2622,  2620,  2335,  2626,
    2628,  2629,  2631,  2633,  2635,  2336,  2637,  2638,  2639,  2641,
    2640,  2642,  2337,  2644,  2645,  2651,  2652,  2653,  2654,  2777,
    2655,  2656,  2310,  2338,  2657,  2339,  2659,  2660,  2661,  2662,
    2663,  2687,  2692,  2693,  2694,  2695,  2696,  2697,  2699,  2700,
    2340,  2701,  2702,  2703,  2704,  2341,  2705,  2707,  2709,  2710,
    2711,  2712,  2713,  2357,  2714,  2715,  2716,  2717,  2718,  2719,
    2720,  2721,  2722,  2723,  2724,  2729,  2727,  2728,  2730,  2732,
    2733,  2342,  2734,  2735,  2737,  2738,  2739,  2740,  2343,  2344,
    2741,  2743,  2744,  2746,  2747,  2748,  2749,  2750,  2752,  2754,
    2755,  2756,  2757,  2758,  2759,  2760,  2761,  2345,  2762,  2763,
    2764,  2775,  2636,  2362,  2496,  2753,  2407,  2658,  2512,  2552,
    2776,  2482,  2386,  2317,  2452,  2467,  2554,  2568,  2587,  2627,
    2726,  2736,  2547,  2566,  2579,  2483,  2634,  2698,  2725,  2356,
    2751,  2309,  2427,  2429,  2567,  2604,  2360,  2489,  2369,  2526,
    2564,  2649,  2646,  2648,  2650,  2630,  2560,  2441,  2559,  2517,
    2598,  2591,  2624,  2578,  2459,  2625,  2706,  2557,  2632,  2503,
    2731,  2371,  2444,  2647,  2667,  2765,  2623,  2615,  2612,  2476,
    2664,  2665,  2666,  2668,  2669,  2670,  2671,  2672,  2673,  2674,
    2675,  2676,  2677,  2685,  2679,  2678,  2680,  2681,  2683,  2682,
    2684,  2686,  2688,  2689,  2690,  2691,  2708,  2505,  2372,  2458,
    2464,  2493,  2605,  2742,  2492,  2391,  2480,  2387,  2745,  2472,
    2573,  2516,  2479,  2643,  2374,  2379,   346,  2282,   327,  2283,
    2304,  2305,  2306,  2303,  2307,     0,  2865,  2864,     0,     0,
    3045,  3046,   681,     0,     0,     0,     0,     0,     0,  1926,
       0,   961,   681,   681,     0,     0,     0,   264,  3073,  3073,
    3090,  3092,  3094,  2361,  2311,  2377,     0,  2240,     0,     0,
       0,  1692,     0,  2315,     0,  2398,  2400,     0,     0,  1350,
    1350,   845,     0,     0,     0,  2423,  2424,  2246,     0,     0,
       0,  2237,  2247,  2468,  2473,  2475,     0,  2239,  2486,     0,
       0,     0,     0,  2510,  2249,     0,     0,  2530,  2532,     0,
       0,  2536,  2537,  2538,  2539,  2221,  1409,     0,   845,  2233,
    2248,  2227,  2584,  2585,     0,  2595,     0,     0,  2635,     0,
       0,  2640,  2651,     0,     0,  2710,     0,     0,   845,  2220,
    2729,  2727,  2728,  2730,     0,  2238,  2342,  2250,     0,  2746,
    1350,   845,   845,     0,     0,     0,  2756,  2757,  2764,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2503,  2708,  2516,     0,     0,  1342,     0,
       0,     0,  1408,     0,  1495,  3064,  1899,  1341,  1345,  1362,
    1367,  1384,     0,  1401,  1420,  1421,  1423,  1533,  1422,  1429,
    1554,  1430,  1555,  1428,  1427,  2234,  1426,  2244,  2243,  1425,
    2235,  2245,  2236,  1343,  1419,  2262,  2282,  2261,  1436,  3062,
    1921,  1921,  1921,     0,     0,  1921,  1921,     0,     0,  1921,
       0,  1921,  1921,  1921,     0,     0,   158,  2107,   416,   417,
       0,  2917,  2930,  2931,  2927,  2932,  2950,  2933,  2937,     0,
    2929,  3022,  2295,     0,  2936,     0,  3022,  2934,     0,  3022,
       0,  2935,  2940,  2951,  3022,  2928,  2284,  2294,  2293,  3022,
    2767,  2766,  2285,  2768,     0,  2919,     0,  2267,     0,     0,
    1941,  1942,  1940,  1170,     0,     0,  2156,  2157,     0,  2160,
       0,  2161,  2166,     0,  2861,     0,     0,     0,     0,     0,
    1267,     0,  1944,  1987,  1945,  1943,  1921,     0,   382,   391,
     393,   394,   390,     0,     0,  3046,  3057,  3072,  3067,  3066,
    3069,  3070,  3071,  1327,  3068,  3065,     0,  1323,  1325,  1326,
     898,     0,     0,  2808,  2811,  2542,  2577,  2812,  2732,  2809,
    2636,  2810,  2356,     0,     0,  2288,  2835,  2770,  2771,  2772,
    2769,  2289,  2778,     0,  2802,     0,     0,     0,   898,  2083,
       0,     0,  2083,     0,  1854,  2067,  2072,  2070,     0,  2814,
    2045,  2815,     0,  2022,  2044,     0,  2001,  2037,     0,  2816,
    2066,     0,  1854,     0,  2028,  1981,  2083,     0,     0,     0,
       0,     0,   394,  1184,  1200,  1215,  1183,  1215,  1321,  2267,
    2000,     0,     0,     0,  2874,     0,  2158,     0,  1320,  1963,
       0,  1820,  1823,  1825,  3142,     0,     0,     0,  3137,     0,
    3143,     0,     0,  2261,     0,     0,     0,     0,     0,  3063,
       0,     0,     0,     0,  1956,  1302,     0,     0,     1,    11,
       0,     0,  1350,  2292,  2746,     0,  2291,  2290,  2296,  2298,
    2975,  3020,  3026,     0,     0,     0,  1182,  1186,  1187,  1189,
    1190,  1191,     0,     0,     0,  1293,  1329,  1296,     0,  3059,
    3059,  3059,  1854,  1846,  1845,  1993,  1986,  2096,  2468,  2100,
    2102,  2104,     0,  1010,  1083,     0,  1014,     0,     0,     0,
       0,  2877,     0,  1012,     0,  2065,  1090,     0,  1041,     0,
       0,  3099,  1016,     0,  3043,     0,  1277,  1288,  1684,   345,
       0,   169,     0,  1229,  1917,  1253,     0,  3049,     0,     0,
       0,     0,  3095,     0,     0,     0,   528,     0,     0,     0,
       0,     0,   681,  3099,  3099,  3073,  3093,     0,     0,  1811,
    1443,  1811,  1811,  1811,  1693,     0,     0,     0,     0,     0,
       0,     0,  1811,     0,  1487,  1459,     0,  1488,     0,     0,
       0,  2251,     0,     0,     0,  1440,     0,     0,  1684,     0,
    1653,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1688,  1690,  2261,  1811,     0,     0,  1811,     0,     0,     0,
       0,     0,  1355,   894,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1811,  1811,     0,     0,  1811,
    1503,  2253,     0,     0,     0,  2252,     0,     0,     0,  2242,
    2241,  2222,     0,  1506,  1508,  1507,     0,  1811,  1811,     0,
       0,     0,  1811,  1811,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1811,     0,  1433,
    1432,  1434,     0,  1956,  3064,     0,  2817,  1651,     0,     0,
    1405,  1404,     0,  1403,  1402,  2281,     0,  1344,     0,     0,
    1349,  1348,  1410,  1411,  1412,  1413,     0,  1414,  1415,  1416,
       0,     0,     0,     0,     0,     0,  1407,  1406,     0,     0,
       0,     0,  1386,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1435,     0,     0,  2276,  2223,     0,     0,  1549,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1927,
       0,     0,     0,     0,     0,     0,  1921,   160,     0,     0,
    2918,  2910,  2948,  2947,  2952,     0,  2949,  2945,  2953,  2954,
    2938,     0,  2924,  2942,     0,  2926,  2944,  2943,  2923,  2939,
    2946,  2925,     0,  2921,  2913,     0,     0,  1807,  2887,     0,
       0,   166,     0,  1171,  1945,     0,  3166,  3160,  2154,     0,
    2167,  2168,  2164,     0,     0,     0,     0,     0,  2150,  3058,
    1269,     0,     0,     0,  1946,     0,     0,  2133,     0,  2141,
    2132,  2135,   383,     0,     0,   413,  1922,  2917,     0,     0,
    3052,  3049,  1313,  1324,   897,     0,     0,   900,  2834,  1964,
    1965,   909,     0,   899,     0,     0,     0,     0,     0,  2780,
    2846,  2843,  2842,  2793,  2788,  2787,  2300,  2971,  2786,     0,
    2821,     0,   904,   906,   905,  2831,   903,     0,     0,  2732,
    2781,  2802,     0,     0,  2779,     0,  2027,     0,  2079,     0,
       0,  2085,  2043,     0,   681,     0,     0,     0,     0,     0,
       0,     0,  2016,  2064,     0,  2063,     0,  2036,  1855,  2077,
    2078,  2083,     0,  2076,     0,  2083,     0,  2067,     0,  2083,
    2013,     0,     0,  2005,  2010,  2006,     0,  2012,  2011,  2014,
    2002,  2003,  2079,  2067,  2035,   254,  2062,  2042,  2032,  2040,
    2067,   959,   958,   957,     0,     0,  2067,  2083,  2083,   389,
       0,     0,  1199,  1201,  1202,  1220,  1219,  1196,  1216,  1217,
     254,  1998,  3164,  3165,  2873,  1970,     0,  1821,     0,     0,
       0,  2226,  2225,  3139,  2224,  3147,  3149,  3133,     0,  3136,
    3135,  3144,     3,     0,     0,   618,     4,     6,     0,     0,
       7,  1295,  1957,  1306,  1307,    12,   152,  2299,     0,     0,
       0,     0,  1037,  1038,  1038,     0,     0,     0,     0,     0,
       0,     0,     0,  3010,  1036,  2973,  2973,  3006,  2973,  2973,
    2973,     0,     0,  1065,     0,     0,     0,     0,  1334,  1333,
    1336,  2435,     0,     0,  1898,  1892,  1895,  1894,     0,  1328,
    1298,  1297,     0,  3061,  3060,     0,     0,     0,  1299,  1854,
    1997,  1996,  1995,     0,  1993,  1170,     0,  2098,     0,     0,
    2099,     0,  2087,  1981,  2086,  2105,  2106,  3097,  3098,  3096,
     911,  3091,   328,     0,     0,  2879,  2885,     0,     0,   328,
       0,     0,  1966,  1966,     0,  1966,  1966,   597,     0,   596,
    1966,   687,   549,   551,   552,   586,   553,   554,   555,   556,
     557,     0,  1168,  1966,  1168,     0,  1966,  1966,  1168,  1966,
       0,     0,  1966,  1966,  1966,  1966,     0,     0,   912,  1966,
       0,     0,  1168,     0,  1966,     0,  1152,     0,     0,  1966,
    1966,  1966,  1966,  1966,  1168,     0,     0,  1966,  1966,     0,
    1178,     0,     0,  1966,     0,  1966,  1966,  1966,     0,  1966,
    1966,     0,  1966,     0,     0,  1966,  1722,  1722,  1966,  1966,
     723,  1123,   683,   710,   711,     0,  1008,  1009,  1084,  1086,
    1156,  1092,  1091,  1120,  1125,  1154,  1155,     0,  3178,  1020,
       0,     0,  1019,  3099,  1248,     0,     0,   954,   953,     0,
       0,  1288,  1279,  1686,     0,  1685,   326,     0,   167,  1231,
    1230,     0,  1228,  1261,  1260,  1258,     0,  1259,  1257,  1252,
    1254,  1255,  3048,     0,     0,  3050,  3054,     0,   262,     0,
       0,     0,     0,     0,   681,     0,   530,     0,  2983,  3018,
     277,   260,     0,   987,     0,     0,   681,   681,   681,   681,
    3087,  3075,  3082,  3083,  3086,  3085,  3084,   681,  3081,  3074,
    3077,  3078,  3080,  3079,  3099,     0,     0,  1812,  1811,     0,
       0,     0,     0,     0,     0,  1694,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1351,     0,   846,  1515,     0,
       0,     0,     0,     0,  1783,  1784,  1785,  1786,  1794,  1787,
    1788,  1789,  1796,  1801,  1790,  1791,  1797,  1798,  1799,  1792,
    1800,  1795,  1793,  1802,     0,  1782,     0,     0,  1806,  1803,
    1805,  1804,     0,  1654,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1811,     0,     0,     0,
    1811,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1525,     0,     0,     0,
       0,     0,  1811,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1483,     0,  2264,  2263,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1597,     0,
    1597,     0,     0,     0,  1600,  1601,  1599,  1602,     0,     0,
       0,     0,  1811,     0,     0,  1957,  1437,     0,     0,     0,
       0,     0,     0,     0,  1340,  1347,  1346,  1353,  1352,  1354,
    1358,  1363,  1356,  1360,     0,  1417,  2368,  1365,     0,     0,
    1398,     0,  1368,  1378,  1399,  1382,  1389,  1390,     0,  1385,
       0,  1387,  1388,     0,  1392,     0,  1391,  1395,  1396,  1397,
    1400,     0,     0,     0,     0,  1424,  1431,  1453,  1454,  1345,
       0,  1550,  1551,  2257,  2265,  1902,  1909,  1904,     0,  1927,
    1906,  1914,  1921,  1931,  1932,  1911,   687,  1929,  1910,   558,
    2969,  1907,  1172,  1916,  3191,     0,     0,   159,     0,     0,
       0,     0,  2125,  2128,  2124,     0,  2127,     0,  2126,  2108,
    2111,  2117,  2129,     0,     0,   414,   418,   420,     0,   423,
       0,  2941,  3024,     0,     0,  2922,  2915,  2916,  2914,     0,
    2955,  2920,  1808,     0,  2886,  2465,  2550,     0,  1813,  2268,
    3168,     0,     0,  3152,     0,  3163,     0,  2165,  2162,  2863,
    1807,  2862,  2866,  1263,     0,   155,   156,     0,     0,     0,
    1268,  1272,     0,  1233,  1722,     0,  2137,  2138,     0,  2145,
       0,   381,   406,   401,   409,   403,   405,   404,   410,   411,
     412,   407,   402,   408,   395,     0,  2904,     0,     0,  2913,
    3053,     0,  3055,     0,  1813,  1314,  1313,     0,     0,     0,
    2837,     0,  2833,  2832,     0,  1038,  2278,  1038,     0,  2848,
    2849,     0,  2840,     0,  2841,     0,  2792,     0,     0,  2795,
       0,     0,     0,     0,     0,     0,     0,  2836,  2801,  2800,
       0,  2803,  2804,     0,  2807,  2857,  2858,  2855,  2856,  2859,
    2860,  2854,  2828,  2051,     0,  2081,  2084,  1815,     0,     0,
    2060,  2054,  2053,  2049,  2055,  2061,  2050,  2023,  2024,  2025,
    1863,  1864,  1862,  1856,  1857,  1861,  1860,  2019,  2068,  2059,
    2057,  2046,  2083,  2058,  2056,  2007,  2008,  2009,     0,  1854,
       0,  2081,  2083,     0,  2052,  2083,     0,     0,  2083,  2039,
    2041,  1205,  1206,     0,     0,  1221,     0,  1195,  1975,  1974,
       0,  1971,  1973,  1962,  1822,     0,  1827,     0,     0,     0,
    3134,  3150,  3132,  3138,  3145,  3146,  3131,  2265,     0,   619,
       0,     0,   622,     0,     0,  1966,    13,    10,  1073,     0,
       0,  3017,     0,  2973,  2973,     0,     0,  2978,  2297,     0,
       0,     0,  3015,     0,     0,     0,     0,  3003,     0,  3004,
    3007,     0,  3008,  3009,     0,     0,  3030,  3028,     0,  3029,
    3027,  2960,  2975,  3021,     0,  1045,  1194,  2273,  1193,  1192,
    1188,     0,     0,  1339,  1336,  1330,  1337,  2277,  1897,   901,
    1893,     0,     0,  1850,  1847,  1849,  1303,  1304,  1305,  1300,
       0,     0,  1919,  1991,  1994,     0,  2097,     0,     0,     0,
    2088,  2089,  2090,  2091,  2092,     0,   911,   670,   672,   679,
     678,   680,     0,  1015,  2884,  2883,     0,     0,     0,     0,
    1013,     0,     0,   547,  1967,     0,     0,   547,     0,     0,
       0,     0,   688,  2065,  1966,  1169,  1004,   955,  1264,   955,
    1129,     0,  1004,     0,     0,     0,     0,     0,     0,  1264,
       0,     0,     0,     0,     0,  1264,     0,     0,     0,     0,
       0,  1966,     0,  1138,     0,  1094,     0,     0,     0,     0,
       0,     0,     0,  1139,     0,     0,     0,  1095,  1966,     0,
       0,     0,     0,     0,     0,  1264,     0,     0,     0,  1264,
    1181,     0,  1180,  1179,     0,     0,  1264,  1264,     0,   720,
       0,     0,     0,   716,   717,     0,     0,     0,     0,  1116,
    1117,     0,     0,  1112,  1723,  1113,     0,     0,   684,  1966,
    1966,     0,  1088,  1085,   911,   911,     0,  1966,  3186,  1074,
       0,     0,  1017,     0,     0,  1240,  1281,  1275,  1280,  1278,
    1288,     0,  1773,     0,   347,     0,     0,     0,     0,     0,
       0,     0,     0,   254,   171,     0,  1918,  1262,  1256,  3047,
    3051,   682,   911,     0,     0,     0,     0,     0,     0,   529,
       0,   532,     0,     0,  2982,  2983,  2986,  2987,  2988,  2989,
    2990,  2991,     0,     0,  3026,  1966,     0,     0,     0,   988,
     911,   681,     0,     0,     0,     0,     0,  3076,     0,  1511,
       0,  1612,  1661,  1612,  1612,  1612,     0,     0,     0,     0,
       0,     0,  1512,     0,  1457,  1513,  1514,     0,     0,     0,
    1612,     0,   847,     0,     0,  1460,  1461,  1450,     0,     0,
    1534,     0,  1657,  1462,     0,     0,     0,     0,     0,  1535,
    1689,     0,  1691,  2265,     0,  1612,  1519,  1468,     0,  1612,
       0,  1469,  1536,  1537,  1538,     0,  1540,     0,  1521,     0,
       0,  1524,     0,     0,  1471,  1612,  1612,     0,     0,     0,
       0,  1612,  1473,     0,     0,     0,  1472,     0,     0,     0,
       0,     0,     0,     0,  1475,     0,  1451,  1612,  1612,  1527,
       0,     0,  1529,     0,  1484,  1811,  1612,  1649,     0,  1589,
    1588,  1606,     0,     0,  1606,     0,     0,  1603,     0,  1590,
    1587,  1586,     0,     0,  1612,  1493,     0,     0,  2818,  2819,
    2820,  2838,  1652,  1650,  1441,  1359,  1364,  1357,  1361,  1366,
       0,     0,     0,  1377,     0,     0,     0,     0,     0,  1369,
    1380,  1383,  1553,  1541,     0,  1684,     0,     0,  1157,  1913,
       0,  2065,  1912,   559,   560,   562,     0,  1174,  1173,  1908,
    3192,  1905,  1172,     0,   161,   163,  2122,  2119,  2118,  2120,
     254,  2121,     0,  2130,  2109,  2423,  2729,  2730,     0,   427,
       0,   399,   398,   400,   424,     0,     0,  2913,  3023,     0,
       0,  2964,  2967,     0,     0,     0,  2908,  1810,  2897,  2893,
    2898,  2900,  2896,  2899,  2901,  2894,  2895,  1813,     0,  1854,
    1814,  1722,  3162,  3153,  3154,     0,  3158,  3161,  3167,  1283,
    1284,  1288,  2163,     0,     0,     0,   157,     0,     0,  2151,
       0,  1270,     0,     0,  1238,  1237,  1239,  1232,  1234,  1235,
       0,     0,     0,     0,  2146,   254,  2134,     0,     0,     0,
       0,     0,  1923,     0,  3056,  1316,     0,     0,     0,     0,
    1315,  1317,  1318,  1699,  1698,  1729,  1726,  1725,  1728,  1727,
    1730,  1722,  1807,  1834,  1813,     0,     0,     0,   908,   910,
     907,     0,     0,  2973,  2973,     0,     0,  2853,  2845,  2847,
    2844,  2794,  2301,  2972,     0,  2824,  2825,  2826,  2822,  2823,
       0,  2829,  2827,     0,  2806,  2080,     0,  1854,     0,  2048,
       0,     0,     0,  2021,     0,  2038,  2004,  1854,  2020,     0,
    2018,  2067,  2067,  2017,  1204,  1203,     0,  1207,  1218,  1969,
       0,  1826,     0,  1824,  3140,  3148,     0,     0,     0,     0,
       0,     0,     0,     0,   624,     0,   620,     0,     0,  1032,
       0,  2992,  1039,  1031,  1030,     0,  2977,  3011,  2988,  1033,
    1034,  1035,  2976,     0,  2994,  3013,  2973,     0,  2973,  2973,
    2963,  2962,  2961,  2958,     0,     0,     0,     0,     0,  1066,
    1068,     0,     0,     0,     0,  1042,  1046,  1047,  1335,  1338,
    1331,     0,  2180,  1891,  1332,  1852,  1853,  2259,  1851,     0,
       0,  1807,  2267,     0,     0,     0,  2269,     0,  2101,  1889,
    1890,  1874,  1875,  1873,  1876,  2093,  1877,  1888,  2103,  1966,
     671,  1966,     0,     0,     0,     0,     0,     0,     0,   329,
     339,     0,     0,  2878,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,   282,   581,  1023,   687,  1884,  1886,
    1883,  1885,   587,   600,  1887,   601,   598,  1024,   585,   588,
    1025,  3193,   599,   550,     0,   757,  1005,   956,  1004,  1096,
    1004,     0,     0,     0,   955,   760,  1004,     0,   984,  1005,
     756,     0,  1163,  1162,  1164,   758,   758,     0,     0,     0,
    1881,  1882,  1880,  1878,  1879,   699,   694,     0,  1871,  1872,
    1868,  1869,  1867,  1870,   705,  1118,  1253,  1119,  1780,     0,
     696,   697,   698,   718,     0,     0,   707,     0,  1136,  1137,
       0,  1099,  1134,  1135,  1172,   689,     0,     0,     0,   736,
     737,   735,   712,   719,  1166,  1165,  1167,   692,   693,     0,
       0,  1153,  1843,  1850,   725,   700,   724,   695,     0,     0,
       0,  1147,  1107,     0,   734,   732,   729,   731,   730,   733,
     708,   701,   702,   704,   703,   715,   706,  1106,  2129,   690,
     691,     0,   721,   722,     0,     0,  1089,  1168,  1168,  1124,
    1121,  1122,  1087,  1093,  1126,   582,   583,   558,     0,  1966,
    3188,     0,  1076,  1078,  3100,  3101,  1825,     0,     0,     0,
    1776,     0,  1777,  1774,  1775,     0,  1687,     0,     0,     0,
       0,     0,     0,     0,     0,   170,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   254,   199,   234,   263,   911,   676,     0,
     563,     0,     0,     0,   272,     0,  1966,  1966,  1966,  1966,
     267,   687,   534,   536,   537,   538,   539,   540,   543,   541,
     544,   542,   545,   546,   558,  2984,  2980,     0,  2981,     0,
    3019,  1065,     0,   993,   995,   994,   990,   989,     0,     0,
    2179,     0,  2178,   756,   257,   603,   605,   608,   606,   687,
     685,   610,     0,     0,   291,     0,   327,  3126,     0,     0,
       0,  1612,  1556,  1613,  1558,  1559,  1564,     0,  1695,     0,
    1447,   859,   859,   843,  1669,   839,   831,   837,  1683,  1674,
    1678,  1681,  1680,  1682,     0,   815,  1677,  1679,   829,  1665,
     843,  1667,  1670,   859,  1675,  1455,     0,     0,     0,     0,
       0,  1612,  1566,  1612,     0,     0,     0,     0,     0,     0,
    1655,     0,     0,     0,  1452,     0,  1545,  1612,  1570,  1612,
    1568,     0,     0,     0,     0,     0,     0,     0,  1574,  1572,
       0,     0,     0,     0,  1612,  1576,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1573,  1575,     0,
       0,     0,     0,     0,  1560,  1620,  1614,  1615,  1616,  1617,
       0,     0,     0,  1604,  1606,     0,  1606,     0,  1591,     0,
    1509,  1612,  1562,     0,  1438,     0,  1375,  1370,     0,  1379,
       0,  1394,  1393,     0,     0,     0,  1552,     0,  2258,  2266,
    1903,  1901,  1159,  1158,  1915,  1930,  2065,  2970,  1900,   164,
       0,  2123,  2116,  2112,  1651,     0,   419,   428,   421,   425,
     426,   422,     0,  3025,  3033,     0,     0,     0,     0,  1854,
       0,  2888,     0,     0,  3152,     0,  1288,  1290,  2169,  2170,
    2171,     0,  2869,  2870,  2868,  2867,  2153,  2152,     0,  1273,
    1274,  1236,     0,  1959,  1958,     0,  1936,  1938,  1947,  1950,
       0,  2140,  2139,  2143,  2142,     0,   396,     0,  2913,     0,
       0,  2902,     0,     0,  1807,     0,  1699,  1729,  1726,  1725,
    1728,     0,     0,     0,     0,  1712,  1720,  1718,  1720,  1715,
       0,     0,     0,  1807,  1825,     0,  1816,  1834,  2791,  2790,
    2789,  1038,  1038,  2783,  2782,  2851,  2850,  2852,  2797,   687,
    2796,     0,  2805,  2082,  2029,  2034,  2033,  1859,  1858,  2047,
    2015,   254,   255,  1813,  2083,     0,  1227,     0,  1223,  1222,
       0,  1209,  1972,  1828,     0,  3151,     5,     0,     0,     0,
       0,   623,     0,   633,     0,     0,     0,     0,  3169,  2993,
       0,     0,  3016,     0,     0,     0,  3001,  2974,  3005,  3002,
    2959,  1071,  1069,  1070,  1072,  1067,  1050,  1049,  1051,     0,
       0,     0,  1064,  1063,  1062,     0,     0,  1029,  1048,   902,
       0,  2188,  1848,     0,  1722,     0,  1813,  1920,  1992,  1991,
       0,     0,     0,   332,   336,   333,   334,     0,   335,     0,
       0,  2881,     0,   584,  1022,   687,   576,   578,   579,   580,
     286,   285,   287,   288,   290,   289,   284,  1028,     0,   594,
       0,     0,     0,     0,     0,  1004,   951,   952,   759,     0,
     754,   761,     0,     0,     0,     0,     0,   742,   744,   745,
       0,   828,   782,   773,   859,   776,   775,   919,   843,   787,
     834,     0,   836,   833,   808,   807,   824,   806,   811,   795,
     919,   919,   794,   827,   919,   812,   810,   814,     0,   815,
     835,   820,   809,   813,   805,     0,   826,   859,   843,   843,
     791,   825,   919,     0,   818,   859,   747,   863,   793,   926,
       0,     0,   859,   861,   839,  1145,  1146,   992,   991,  1144,
       0,     0,  1102,     0,  1103,     0,  1105,   909,   909,   713,
    1110,  1133,  1132,     0,  1111,   714,  1175,  1101,     0,  1844,
    1100,     0,     0,     0,  1233,     0,     0,  1779,   727,   726,
    1027,  3182,  3179,  3180,     0,  3190,  3189,  3191,     0,     0,
       0,   296,  3102,     0,     0,  1287,  1289,     0,  1276,     0,
     173,   174,     0,   175,   176,     0,   177,   178,     0,   179,
     172,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   168,
     677,     0,  1966,  1966,   266,   687,   565,   567,   568,   569,
     570,   573,   571,   572,   272,     0,     0,   271,     0,     0,
       0,     0,     0,  2065,   268,     0,     0,   278,  1045,  3176,
    3177,  3178,     0,   609,   258,     0,     0,   604,   602,   911,
     607,     0,     0,  3117,     0,     0,   524,   523,     0,     0,
    1485,  1557,  1696,     0,     0,   860,  1662,   919,     0,  1672,
       0,  1673,   841,   840,   832,   830,  1676,   838,   816,  1666,
    1671,  1668,  1664,  1456,     0,     0,  2254,  1458,  1449,  1448,
    1567,  1565,     0,     0,  1491,  1517,     0,  1492,     0,     0,
       0,     0,     0,  1464,     0,  1467,     0,     0,  1547,  1571,
    1569,  1520,  1539,  1496,  1522,     0,  1470,  1439,     0,  1497,
       0,  1502,  1500,     0,  1577,  1474,     0,     0,  1481,     0,
    1479,     0,  1480,     0,  1482,  1526,  1528,     0,     0,     0,
       0,  1612,  1621,     0,  1622,  1608,  1607,  1594,     0,  1598,
       0,  1595,     0,  1609,     0,  1749,  1563,  1494,  2839,     0,
    1374,  1376,  1372,     0,  1381,  1542,  1161,  1160,   561,   162,
    2114,     0,  2110,     0,     0,     0,     0,  2912,  2966,  2965,
    2968,  3031,  2956,  2889,     0,     0,  1976,  1978,     0,  3159,
    1285,  1288,  1290,     0,  1286,  2172,  2871,  1271,  1937,  1984,
       0,     0,     0,  1954,  2256,  1970,  1955,  1961,  2147,     0,
       0,     0,  1923,     0,     0,     0,  1825,     0,  1737,  1731,
    1733,  1734,  1736,     0,     0,  1699,  1698,  1319,  1714,  1713,
    1721,     0,  1719,  1720,  1720,     0,     0,  1708,  1707,     0,
    1770,  1738,     0,     0,  1829,  1816,  2973,  2973,     0,  2830,
    2030,  2031,  2026,     0,     0,     0,     0,     0,  1211,  3141,
       0,   629,   616,     0,   614,   618,     0,   611,     0,     0,
     627,     0,     0,     0,  2280,  2279,  2995,     0,  2996,     0,
    1054,     0,  1053,  1059,  1056,  1055,     0,  1044,  1043,     0,
       0,     0,     0,  2181,  2183,     0,  1896,  1813,  1813,  2268,
    1989,     0,  2270,  1813,   673,   728,   338,   337,   343,   344,
       0,  2880,  2065,   283,     0,  1098,     0,     0,   635,     0,
       0,     0,   762,     0,     0,  1002,     0,  1001,  1850,   985,
     986,  1128,   756,   747,   781,   774,   792,   913,   924,   922,
     916,   817,   919,     0,   920,   921,   778,   790,     0,   801,
       0,   796,   919,   804,   800,   816,   819,   821,   823,     0,
     919,   789,   788,   798,   785,   848,     0,  1175,   748,   873,
       0,     0,     0,     0,  1406,   867,     0,   931,     0,     0,
     876,     0,  1966,  1966,     0,   884,   763,   864,   866,   765,
       0,   887,     0,   927,   926,   780,   919,   926,   848,     0,
     862,   848,   848,  1142,     0,  1143,  1175,  1781,  1151,  1150,
       0,     0,  1177,  1131,  1842,  1149,  1148,     0,  1104,   709,
    1724,     0,     0,  3184,     0,  3187,  1040,     0,   307,     0,
       0,  1075,     0,   300,   297,   309,     0,  1250,  1244,  1778,
     180,     0,   182,   184,   189,     0,   191,  2302,     0,   194,
       0,   196,  2274,   198,     0,   185,     0,   235,   252,   253,
     202,   240,   228,   239,   229,   242,   241,   243,   244,   230,
     231,   246,   247,   245,   232,   222,   227,   203,   225,   207,
     209,   223,   201,   250,   251,   205,   206,   221,   208,   210,
     211,   212,   215,   216,   219,   220,   217,   218,   249,   214,
     248,   213,   204,   226,   233,   200,     0,     0,     0,  2065,
     270,     0,     0,     0,     0,     0,     0,   531,   593,   589,
     595,   592,   535,  2985,     0,  3000,  2998,  2999,  1042,  3186,
       0,     0,   911,   686,     0,     0,   348,   740,   741,   739,
     738,     0,  3127,   527,   525,   526,     0,     0,  1697,     0,
       0,     0,     0,  1663,     0,     0,  1444,  1455,  2255,     0,
       0,     0,     0,  1658,  1660,  1656,  1612,     0,     0,     0,
       0,     0,  1442,     0,  1543,     0,     0,     0,     0,     0,
       0,  1478,  1476,  1477,   928,  1531,  1530,     0,  1561,  1618,
       0,  1624,  1605,  1593,  1592,     0,  1606,  1510,     0,  1757,
    1758,     0,  1750,  1751,     0,  1371,     0,     0,     0,   436,
     431,   439,   433,   435,   434,   440,   441,   442,   443,   437,
     432,   438,   430,   429,     0,     0,     0,  3040,  1813,  1976,
       0,  1978,     0,  1935,  3156,  3155,  3157,  1282,  1291,  2174,
       0,     0,     0,  1948,  1951,     0,     0,     0,     0,     0,
    2144,   397,     0,     0,  2907,  1924,  1923,     0,  1739,  1319,
    1700,  1716,     0,     0,  1709,  1717,     0,     0,     0,     0,
    1764,  1765,     0,     0,  1768,  1771,  1772,  1584,     0,  2637,
    2260,  1840,  1839,  1817,     0,  1818,  1829,  2785,  2784,  2798,
    1226,  1225,  1224,  1208,     0,     0,  1213,   617,     0,   615,
       0,     0,   613,   621,     0,   628,     0,     0,  3012,  2997,
    3014,     0,  1060,  1061,  1058,     0,     0,     0,     0,     0,
    2182,     0,     0,  2189,  2191,  1990,  1845,  1845,     0,   577,
       0,   638,  1097,     0,     0,   755,     0,     0,     0,   973,
       0,     0,   998,   743,   746,   915,   914,   918,     0,   917,
     777,   926,     0,  1006,   797,   822,     0,   799,   852,   853,
     854,   786,   849,   851,   933,  1127,   879,   888,   890,   889,
     880,   878,     0,     0,     0,     0,     0,     0,   895,   870,
    2231,   896,  2232,  2228,     0,     0,   891,   892,   893,   881,
     877,   882,     0,     0,   883,     0,   865,     0,     0,   875,
     868,   869,   779,   783,   784,   770,     0,   771,   772,     0,
    1140,  1130,  1114,  1176,     0,  3183,  3181,  3185,   308,   295,
       0,     0,  1077,  1079,     0,     0,  1080,     0,     0,     0,
    1241,  1249,   181,     0,   190,     0,     0,   195,     0,     0,
     186,     0,     0,   236,   238,   962,   591,   590,   566,     0,
     968,   273,   274,   276,     0,     0,   265,  3188,     0,   259,
     256,     0,     0,     0,   349,   351,     0,     0,   358,     0,
    1486,   857,   855,   858,   856,   844,     0,     0,     0,  1489,
    1490,  1518,     0,  1578,  1516,     0,  1465,  1544,     0,     0,
    1523,  1498,  1501,  1499,  1504,  1505,     0,     0,     0,     0,
    1626,  1610,  1611,     0,  1759,  1466,  1752,     0,     0,  1373,
    2115,  2113,  3031,  3034,     0,     0,  2909,  1854,  1978,  1825,
    1933,     0,     0,  2176,  2173,  1983,  1985,  1949,  1952,  1953,
    1968,  1960,  2148,  1923,     0,  2903,     0,  1732,  1711,  1710,
    1703,     0,  1705,     0,  1760,  1760,  1769,     0,  1735,     0,
       0,  1841,     0,  1835,     0,  1830,  1831,     0,  1312,  1818,
    1210,     0,     0,  1197,   630,     0,   620,   634,   612,  3173,
    2979,  1052,  1057,  2186,  2187,     0,  2184,     0,     0,  2190,
    1865,  1865,     0,   962,     0,   658,   636,   968,     0,   997,
     973,  1850,     0,  1966,  1966,  1966,   749,   974,   975,   977,
     978,   981,  1000,     0,   925,   923,   919,     0,   919,   850,
       0,   937,  2230,  2229,     0,   872,   874,   885,   886,   879,
     766,     0,     0,  1109,  1115,     0,   293,   298,   299,   310,
     311,  1021,  3105,  3103,     0,     0,     0,     0,  1246,   183,
     192,   193,   197,     0,     0,   224,     0,     0,  1157,   963,
     964,   966,     0,  1157,   969,   970,   972,     0,     0,   261,
     973,     0,   305,  3118,     0,   909,  3116,   361,   359,   360,
       0,   354,   356,     0,     0,     0,  1445,     0,  1659,     0,
    1546,  1548,   929,     0,  1623,     0,  1647,  1646,  1648,  1619,
       0,  1596,     0,  1756,  1755,  3040,  3032,  3035,  2890,  1934,
    1977,     0,     0,     0,  2177,  2906,  1923,     0,     0,     0,
       0,     0,     0,     0,  1579,  1580,     0,     0,     0,  1838,
       0,     0,  1819,  1311,  1212,     0,   254,     0,     0,     0,
       0,  3170,  3171,  2185,  2193,  2192,     0,  1988,  1980,  2882,
     750,     0,     0,  1966,     0,     0,  1966,  1966,  1966,  1966,
     653,   659,   661,     0,   751,     0,     0,   752,  1003,   980,
       0,     0,     0,   976,  1850,   802,  1007,   803,     0,   936,
       0,   941,   871,     0,  1141,  1108,   301,  1081,   463,     0,
    3104,  1247,  1245,  1243,  1242,     0,     0,   237,     0,   280,
     965,   269,   281,   971,     0,  1157,  3115,   296,   306,     0,
     350,   352,  3128,   358,     0,     0,   842,   843,  1463,  1532,
    1625,     0,     0,     0,     0,  1641,  1628,  1629,     0,     0,
    2911,     0,  3041,     0,     0,     0,  2905,     0,  1807,  1704,
    1706,     0,  1761,     0,  1773,     0,     0,  1837,  1836,  1833,
    1832,  1214,  1198,     0,     0,  1966,     0,  3174,  1866,   647,
     640,   643,     0,     0,  1966,  1966,     0,     0,     0,     0,
       0,   637,   660,  1966,   753,   996,   979,   982,   983,   999,
     934,     0,   938,   939,   940,     0,   932,     0,     0,   303,
     489,  2397,   475,   461,     0,     0,  2563,   465,   312,   315,
     313,  1981,   314,   320,     0,   321,   322,   323,   324,   325,
     316,   487,   488,   319,   317,   318,     0,  2286,     0,  2287,
    2347,  2346,  2348,     0,     0,     0,   187,     0,   967,   275,
     279,   309,     0,   330,   355,   909,     0,     0,     0,     0,
    1636,     0,     0,     0,  1634,     0,  1630,     0,  1627,  1632,
    1631,     0,  1979,  2175,     0,  2547,     0,  1742,     0,  1740,
    1763,  1762,     0,     0,     0,     0,  1583,  1581,   631,     0,
       0,  3175,   647,     0,   645,     0,   641,   639,   642,   669,
       0,     0,   665,   666,   664,   662,     0,     0,   655,     0,
     935,     0,     0,   767,   302,     0,   294,     0,     0,   474,
     477,     0,     0,   480,   470,   469,   471,     0,   464,   463,
     463,   517,   468,   514,   513,   506,     0,  3106,     0,     0,
       0,   909,  3129,   357,  3111,  1446,     0,  1637,     0,  1639,
    1638,     0,     0,  1643,     0,  1644,  2793,  3039,  3038,  3036,
    1722,     0,  1741,     0,     0,   909,  1767,  1766,  1582,  1585,
       0,   625,   631,  3173,   644,     0,   651,     0,   649,   652,
     667,   668,   658,   654,     0,   663,   947,     0,   946,     0,
     943,   942,   769,   768,   863,   304,   490,   501,   504,   496,
     476,     0,     0,     0,   466,   463,     0,   450,   448,   449,
     455,   456,   457,   458,   459,   460,   451,   454,   452,   453,
     463,     0,   366,     0,     0,  3107,  3108,   188,   311,  3119,
     341,   340,   331,     0,   463,  3109,  3110,     0,  3113,     0,
    1635,  1633,  1642,  1645,  3037,   901,     0,  1743,  1744,  1747,
     632,   626,  3172,   646,   648,     0,   657,   656,   949,   950,
     948,     0,     0,   764,     0,     0,   463,   497,     0,   472,
       0,   481,     0,     0,   364,   520,   518,   362,   508,   508,
     292,   330,   342,     0,  3125,  3130,  3112,   463,  1640,  2214,
    1746,  1748,     0,   650,     0,     0,   498,   504,   494,   502,
     463,     0,     0,   462,     0,   516,   365,     0,     0,     0,
     463,     0,   507,   509,   511,  3120,  3123,  3122,  3124,  3114,
       0,  2194,     0,   945,   944,     0,   495,     0,     0,   493,
     473,   478,   463,   521,   463,   375,   374,     0,     0,   444,
     515,     0,   367,   463,     0,     0,  2180,  1749,   499,     0,
     463,     0,   463,     0,   463,     0,     0,   909,     0,     0,
     363,  3121,  2215,     0,  2188,  1753,  1745,  1751,     0,   491,
     463,   479,   484,     0,     0,   370,   445,   446,     0,   372,
       0,  2196,  1754,     0,   463,   463,   480,   483,   522,   519,
       0,     0,   368,   369,   380,   379,     0,  2195,     0,  2200,
       0,   463,   463,   485,   388,   386,   463,   376,   384,   378,
       0,   385,   447,   373,     0,     0,  2207,     0,   371,   387,
    2198,  2199,  2197,  2202,     0,     0,  2204,  2205,     0,  2216,
     377,  2206,  2201,     0,  2208,  2210,     0,     0,  2218,  2203,
       0,     0,     0,     0,  2212,  2209,  2211,  2217,     0,     0,
    2159,  2219,     0,  2213
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4792, -4792, -4792, -4792, -4792, -4792, -1059, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792,  1747, -4792, -4792, -4792, -4792,
   -4792, -4792,  1995,  2003, -4792, -4139, -4792, -4792,  2002, -4792,
     539,  2008, -4792,   537, -4792,  1375, -4792,   342, -4792, -4792,
   -4792, -4792, -2794, -1570, -4792, -4792, -4792, -4792, -4792, -4792,
    1365, -4792, -4792,   536,  1559,  4036, -4792,   530, -4792,   194,
   -4792, -4792, -4792, -4041,    72,  -103, -4792, -4792,    54,  3540,
    -154, -4791, -4792, -4792, -4792, -4792, -4792, -4792,   334, -4792,
   -4792,   200, -4792, -4792, -1284, -4792, -4792, -4792, -4792, -4792,
   -4792,  -286,  -246,  2600, -4792, -4792, -4792,  5220, -4792,  4195,
   -4792, -2724,  2410, -4792, -4792, -4792, -4792, -4792,  2464, -2651,
   -4792, -4792, -4792,  1237, -4792, -4792, -4792,  -482,   236, -4792,
     240, -4792,   244, -4792,   245, -4792,   246,   247,   248,   250,
   -4792,   251, -4792, -4792,  -237, -4792, -4792, -4792, -4792,   252,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792,  -147, -4792, -4792,
     -37, -4792, -4792,  -135,   255, -4792,  -112,   256, -4792,   260,
   -4792,   -55, -4792,   -53, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792,  1408,  2855,  4129,  2856, -2691, -4792,
    1827, -4792, -4792,   939, -4792, -4792,  1139, -1541, -4792,  2728,
   -2471, -2466, -1074, -2465, -4792, -4792, -4792, -3123, -3120, -1362,
   -4792, -1360, -2457, -2456, -2420,   921,  1988,  1990,  1983,    21,
   -4792,  1194,   494, -4792, -4792, -4792, -3497,    19, -4792, -3752,
     729, -4792, -4792, -4792, -4792, -3006, -4792, -4792,   -62, -4792,
   -4792,    10,    13, -4792,   315, -4792,  2902, -4792, -4792, -2369,
    -413,  2786, -4792, -1959, -1760, -2367, -1613, -1607, -4792, -4792,
   -4792,   938,  2012,  1145, -4792,  1138, -1621,  1092, -3658, -4792,
   -4792,  -588, -2893, -4792, -4792, -4474, -4792, -2487,  1610, -4792,
   -4792, -2445, -4792, -4792, -4792,  1576,  1579, -3276,  1909, -1465,
   -4792,   721,   674, -1444, -4792,    22, -4792,  1098, -4792, -4792,
   -3893, -4792,   -41, -2556,   -28, -4792, -4792, -3081, -3590, -1599,
   -4792, -4792, -3267, -3107,  1920, -4792, -4792,   333, -4792, -4792,
   -4792, -4792, -3192, -4792, -1696, -2219, -4792, -4792,   509, -4792,
     444,   515, -4792,   443, -3647, -4792,   502, -1770,  2267, -4792,
    3485, -3038, -2446, -4792, -3980, -1374,   765, -2317,  1147, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -1548, -4792, -4792,   981,
    1475, -4792,  2365,  2064, -4792,  2375, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792,  2831, -4792,   706, -2040,  2834,
   -4792,  2838,   468, -2554, -1132, -4792, -1124, -4792, -1644,  3690,
   -2415, -2994, -4792, -4792, -4792, -4792, -4792,  3717, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,  3069, -4792,
   -4792, -4792, -4792,  4311, -4792,  3071, -4792, -4792, -4792, -4792,
   -4792,  1595, -4792,  2538, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792,  2265,  3544, -4792, -4792,    55, -4792, -4792, -4792, -4792,
    2540, -4792, -4792,  3571,  2175, -4792, -4792,  1897,  2560, -1767,
    1347, -1690,  5345,     1,   -11,    24, -4792, -4792,  3195, -4792,
   -4792, -2221, -4792, -4792, -4792, -4792,  4406,   551,  -977, -4792,
   -4792,  3020, -4792,  4422,  4076,  3323,   359,  4413, -4792, -1289,
   -4792,   -21, -4792, -4792,  -864, -4792, -4792, -4792,  -701,   993,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792,  2652, -4792, -4792, -4792, -4792, -4792, -4792,  3398,  2698,
   -4792, -4792, -2626, -4792, -2370, -1923, -4792, -2499,   442, -4792,
   -4792, -4792, -4792, -4792, -4792,   471, -4792,   145, -4792, -4792,
   -4792, -4792, -2061, -4792, -4792, -4792, -4792, -1024, -2507, -1146,
   -1142, -4792,  4183, -4792, -4792, -4792, -3111, -4792, -2660, -4792,
   -4792, -4792, -4792, -3115, -1775, -4792, -1694,  2549,  2554,  2556,
    2557, -4792, -4792,    66, -4792,   150, -4792,   -39, -4792,   -52,
   -4299, -4297,   639, -4792,   911, -4792, -4792, -4792,   353,  1632,
     355, -2228, -2413, -1235,  1605, -4792, -4792, -2120,  4220, -2163,
   -2012,  1348,   635,    14,  4372,  3847, -3127, -4792,   910, -4792,
     476,  1892, -2287, -4792, -4792,  1670, -1133, -4792,   518, -3080,
   -4792, -1036, -4792, -4792, -2852,   619, -2068, -2383, -2267, -2527,
   -2392, -4792, -4792,  3063,  -851, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792,  -549,    62,   -69, -3899,  5449,  3367, -4792,
    2696,  3765,  3771, -4792, -4792,  4026,  1967,  1970, -4792, -3455,
   -2537, -4792, -4792, -4792,  -997, -1213,   963,  3870,  1412,  1978,
   -2908,   992, -4083,  3787, -4792, -3541,   982,  4326,  3796, -3414,
    3797, -4792, -4792, -4792, -4792, -4792,  3185, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792,   -40, -1313, -4792, -4792, -4792,  1417,
    3912,  3187,  -861, -4792, -4792, -4792, -4792,  4329, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,  2702,
    2307, -4792, -4792, -4792, -4792, -4792,  3306, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792,   715,    25, -4792,
    1349,     6, -4792,   922, -4792, -4792, -4792, -4792, -4792,   -56,
   -4792, -4792,   -64, -4792, -4792, -4792, -4792, -2699, -1153, -1305,
    1051,  1253, -1858, -2467, -2058, -3534, -1199, -4792, -4792,  1002,
   -4792, -2937,   707,  -758, -1295, -1296,   110,  2500,  3356, -1487,
   -4792,  5122,  -880, -1657, -2054,   954,  4184,    -6, -4792, -3482,
   -4792,   581,   117,  1693,    11,  3284, -3656, -4792,    15,    74,
   -4792,   808,   348, -4792, -4792,   805, -4792, -4792, -4792,   237,
   -4792, -4792, -4792, -4792,  4008, -4792,  2607,  5488, -4792, -4792,
   -4792,  3280,  5489,  -963, -4792,  4015,  3303, -4792,  3304, -4792,
   -4792, -4792, -2128, -4792, -4792,   155, -4792,  2692, -4792, -4792,
   -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792, -4792,
   -4792, -4792, -4792, -2059,  4067,  4548,  4104, -4792, -4792,  2544,
   -4792, -2725, -1404, -1175, -1428, -4792,  4425,  2940,  2951, -2250,
   -1063, -1062,  -989, -1107, -1006,  -994, -4792,  3883, -1510, -4792,
   -4792,  1677, -4792,  2943,   779, -4792, -4792,   599, -4792, -4792,
    1838,  4561,  4078, -4792, -4792, -4792, -4792, -4792,  1956, -4792,
     -12,    -1, -4792,  -213, -4792, -4792, -4792,   106,  5547,  5549,
   -4792, -4792,   198, -4792, -1002, -4792, -4792, -4792, -4792, -4792,
    4373, -4792, -4792,  4384, -4792, -4792, -4792, -4792, -4792,    88,
    4386, -4792, -4792, -4792, -4792, -4792, -4792,  1724, -4792, -4792,
   -4792, -4792, -4792, -4792,  2059, -4792, -4792, -4792, -4792,    52,
   -4792, -4792, -4792,   259, -4792,  1664, -4792,  1284, -4792,  1178,
     851,  1763, -2482
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    65,    66,  1120,  2347,    67,    68,    69,    70,    71,
    2175,    72,  1407,  2117,  2784,  2785,    73,   958,    74,  2575,
    1837,  2573,  2574,  3820,  4301,  4302,  3829,  4316,  3823,  4305,
    4306,  3826,  4310,  4311,  3273,  3274,  4702,  4703,  4322,  4329,
    4334,  4359,  3275,  2304,    75,    76,    77,    78,  2582,    79,
    3887,  2604,    80,  3063,  3064,  1880,  3912,  4291,  5036,  4295,
    5139,  5246,  5057,  3212,  4686,  5037,  5038,  5148,  3335,  2433,
    5272,  3049,  5362,  3050,    81,  1189,  4723,  4724,  4725,  4930,
    4931,  4932,  4933,  5440,  5335,  5407,  5441,  5520,  5526,  5467,
    5536,  5537,  5538,  5524,  1473,  5539,    82,   990,   991,  1475,
    2204,  2799,  2205,    83,    84,   920,  2135,  2136,  2137,  2138,
    3491,  2800,  3486,  3487,  4482,  5468,  5522,  5336,  5337,  5253,
    5338,  5151,  5339,  5257,  5340,  5154,  5341,  5342,  5343,  5344,
    5432,  5345,  5252,  5460,  5332,  5333,  5434,  5502,  5517,  5346,
    5161,  5247,  5394,  5162,  5248,  5427,  5328,  5428,  5455,  5498,
    5329,  5395,  5458,  5398,  5347,  5353,  5442,  5348,  5354,  5349,
    5166,  5264,  5352,  5262,  5351,  5438,  5437,  5483,  3918,  4406,
    1866,  2591,  3290,  3291,  3292,  3066,  3067,  1732,  2772,  2773,
    2774,  3874,  3875,  3876,  3674,  3675,  3676,  2443,  3207,  3055,
    1733,  1734,  1800,  1736,  3296,  3878,  3879,  3297,  3298,  1737,
    3300,  1738,  1739,  1740,  3072,  3324,  3325,  3326,  3327,  3328,
    2342,  2343,  3616,  2964,  3613,  4564,  4120,  5301,  4127,  4177,
    4178,  4845,  5227,  5110,  5223,  5111,  5225,  5307,  5308,  5121,
    5237,  5238,  5010,  5011,  5012,  2426,  2427,  3276,  3277,  2428,
    1199,  1801,  3329,  2453,  1802,  3165,  1803,  1804,  2431,  3180,
    3152,  4401,  3706,  3707,  3708,  4227,  3709,  3095,  2461,  3699,
    3700,  4245,  3756,  4658,  5324,  3757,  3758,  3759,  3760,  3761,
    3762,  3763,  3935,  3764,  3936,  3931,  3932,  3929,  1237,  4621,
    4622,  4623,  3925,  3926,  4261,  4246,  4247,  4248,  4630,  4649,
     864,  4639,  4203,  1491,  3012,  1514,  1515,  2899,  2222,  1805,
    4204,  4205,  4206,  4255,  3998,  4756,  4250,  4228,  4871,  5028,
    5031,  5136,  5320,  3096,  1830,  3088,  1584,   735,  4908,  4909,
    4910,  4913,  4914,  4915,  4856,  4857,  4858,  4859,  3097,  2608,
    4860,  4861,  3316,  4848,  4185,  4186,  4187,  3098,  4612,    85,
      86,  1710,    87,  1719,    88,  1712,    89,  1823,  1181,    90,
    2549,    91,    92,    93,    94,    95,  2353,    96,    97,  3647,
    3005,  3006,  3007,  2385,  2999,  3000,  1125,  3213,  3811,  4891,
    1163,  1806,  1807,  2543,  1808,  1809,  4883,  1810,  3126,  1811,
    1812,  1813,  1814,  3471,  3472,  3103,  3473,  3155,  2463,  1444,
    2779,  4273,  2515,    98,    99,  1136,  1137,  1138,  1139,  1140,
    1141,   100,   101,  2315,  4986,   102,  1592,  1593,  1594,  3601,
    4118,  4556,  4823,  1597,  1598,  1599,  2947,  3599,   103,  1842,
     104,  2857,  2858,  2859,   105,  4898,  4690,  4691,  2555,   106,
     107,  1849,  1850,  1851,   108,   239,   109,  1462,  1460,  2180,
    2181,   110,  1185,  1186,  2557,   111,  2839,  2840,  1831,  1832,
    4054,   112,   113,  1333,   115,   865,   117,   118,  2214,  2215,
    2880,  2881,   119,   120,  1006,  1007,  1008,  1145,  1146,  1670,
    2394,  2395,  2396,   866,   867,  1347,  1234,  1833,   869,   870,
    2070,   871,  1348,  1349,  4252,   872,  1360,  2058,   873,  3944,
     874,   875,  4015,   876,   877,   878,  3967,  3968,  4434,  2090,
    2091,  2092,   879,   880,  4976,  5215,  4808,   881,  2723,  2023,
    2024,  4009,  3442,  4456,  3342,  3343,  3436,  4814,  3438,  4003,
    4004,  4451,  4760,  4949,  5075,  5190,  5077,  5191,  5198,  4950,
     882,   883,   884,  1954,  3960,  3390,  4423,  1899,  3375,  1834,
    1835,  1259,  1260,  1225,  2629,  1905,  2882,  4084,  2883,  3560,
    3561,  3562,  4095,  4091,  2533,  2534,  2884,  2885,  2886,  2887,
    2888,  2889,  2890,  4968,  5206,  5207,  5422,  4461,  5496,  4462,
    4463,  4464,  4972,  4533,  4534,  4535,  4536,  4537,  3221,  3222,
    3223,  3796,  3127,  1944,  1945,  1952,  2153,  2154,  1900,  2829,
    1531,  4104,  4818,  1116,  1091,  1092,  1610,  2325,  4545,  4815,
    4816,  3566,  4541,  4813,  3161,  3162,  1152,  1153,  2404,  3017,
    3018,  1547,  1548,  2283,  2284,  4997,  3166,  3035,  3115,  3073,
    3036,  3037,  1674,  1675,  1147,  1676,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,  2793,  2411,   994,  3541,   736,  2105,  2106,
    2107,   139,   140,   963,   984,  1465,  3526,  3527,  4062,  3528,
    1117,  3530,  4066,  1088,  2444,  2445,  4067,  1089,  2320,  2321,
    2322,  4491,  4493,   141,   142,  4058,  4059,   985,   143,  3026,
    1693,  1694,   144,  1081,  1569,  1570,  1571,  2299,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,  1544,  1741,  1551,  1068,  1069,  1070,  1552,
    2265,  2927,  1532,   190,   191,  1702,   192,  1159,  1160,  1700,
    1703,  1704,   193,  1408,  2129,  3483,  4032,  4467,  2130,  2131,
    2794,   194,   987,  1470,  1467,  2186,  1471,  2189,  4068,  2865,
    4510,   195,   977,  1458,  2849,   196,   968,   197,   198,   972,
    2843,  2168,  1452,  3511,  4499,  4783,  4963,  3332,  3651,  4153,
    4154,  4156,  4583,  4584,  5476,  5529,  5552,  5546,  5555,  5556,
    5559,  5564,  5565,  5580,  5451,  5568,  5574,   885,  1613,   886,
    4640,  4641,   887,   888,   889,   890,   891,   892,  4419,  4063,
     893,  2405,  4542,   894,  4060,   895,  2891,  2412,   707,  4312,
    4313,  1126,  1614,  2398,  2227,  4136,  1350,  1103,   948,  5168,
    1026,  1128,  1506,  1129,  2110,  1507,  2813,   709,   710,   711,
    5169,   712,   713,   952,  1031,   714,   199,  1032,   200,  2236,
     201,  3579,  3580,  1520,  1524,  2251,  2252,  2253,  1071,  2041,
    2245,  1521,  2254,  1035,  2742,  1499,  1500,  2234,  1501,  2232,
    1502,  2908,  2262,   202,  1454,   718,  2171,  2172,  3514,   203,
    1085,   204,   205,   206,  1171,   207,  2158,  2827,  2828,   208,
    2870,   209,  2140,  2149,  1411,   954,   955,  2816,  2994,  2380,
    2381,  2814,  2111,  1508,  2367,  1653,  1642,  1869,  2594,  2595,
    2596,  2597,  2978,  2599,  2600,  2601,  3308,  1131,  1645,  1870,
    1132,  1422,  2143,  1663,  4487,  4037,  5082,  4776,   210,   240,
     721,  1197,  1856,  2211,   211,   212,   213,   214,  1685,   898,
    2892,   899,  1009,  1213,   737,  1889,  1881,   233,   234,   235,
     740,   741,   236,  1821,  1822,  4296,  4893,  5040,  5367,  5368,
    1883,  5417,  1884,  1885,  4396,  5059,  5411,  5473,  5448,  5415,
    1886,  3915,  4728,  5183,  5364,   215,  1619,  1615,  1101,  2336,
    2330,  2332,  2835,  4496,  2836,  2837,  2165,   216,   217,  1447,
     218,   219,  4991,  4992,  3901,  2548,  3802,  3803,  4285,  3210,
    3807,  2781,  3082
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     708,   114,  1024,  1066,  1067,  1386,  1576,  1381,  1705,   897,
    2005,  2004,   916,  2420,   121,  2399,   957,  2025,  1492,  1496,
    1959,  1689,  2535,  1658,   116,   976,  1574,  1261,  3078,  3079,
    2317,  2150,   992,  3450,  1871,   996,  1102,  2103,  1525,  2104,
     992,  2538,  3602,  1079,  1815,  1220,  2462,  1086,  1108,  1093,
    2844,  2893,  1816,  3074,  3192,  3193,  3074,  3074,  1027,  1109,
     706,  3284,  1643,  1644,  2563,  1114,  2491,  1655,  1656,  3769,
    1522,  2057,  2801,  3331,   917,  2802,  3141,  3378,  3587,  3588,
    1106,  3379,  3652,  3789,  2514,   975,  1908,  1909,  1115,  3812,
     981,  1127,  2719,  2720,  3940,   950,  2354,  2429,  3445,  4244,
    2468,  1735,  1947,  2430,  2472,  2729,  2730,  2731,  1130,  2977,
    1154,  2432,  4123,  3798,  2985,  1961,  1688,  1028,  2492,  4163,
    3293,  2460,  2922,  2026,  1659,  3294,  3295,  1974,  1975,  1976,
    2504,  3380,   956,  1978,  3302,  3303,  1660,  2359,   949,  3085,
    2362,  1657,  2364,  3373,  3536,   116,  2830,  2771,  3542,  3485,
    2873,  3373,  3598,  3181,  3182,  1329,  1330,  3880,  1331,  1078,
    3881,  3317,  1178,  4766,   719,  4767,  4308,  4249,  1679,  1193,
    1195,  1382,  2014,  4514,  4490,  4699,  4253,  2386,  2388,  2389,
    1438,  1542,  1383,  2447,   974,  3374,  1079,  4268,  4269,   980,
    3001,  3015,  2152,  3374,  3027,  2777,  3074,  1901,  1902,  1903,
    1468,  2959,  2830,  2602,  3116,  1577,  2961,  1383,  1913,   742,
    1383,  1882,  1890,  3278,  -687,  1164,  2854,   708,  3546,  3437,
     708,  1127,  1175,  1079,  1340,  1341,  3645,  2553,  2369,  2113,
    2370,  2372,  2373,  3153,  2350,  3157,  3158,  1079, -1026,  1967,
    3090,  2285,  1971,  3474,  2292,  4162,  1825,  1340,  1341,  1839,
    4682,  1758,  4925,  3344,  3345,  3346,  1340,  1341,  2208,  2350,
    2302,  1988,  1989, -1928,  3540,  1993,  3786,  2305,  3023, -2315,
    3382,  2303,  -548,  2308,  3508, -2891,  4572,  1166, -2136,  2303,
    1173,  2213,  -674,  2007,  2008,  4215,  1196,  1758,  2012,  2013,
    1340,  1341,  4967,  2711,  1680,  3398,  2971,  1758,  2972,  3400,
    3016,  1299,  1161,  2033,  1340,  1341,  1155,  2847,  3553,  3638,
    2219,  2986,  4341,  -533,  2988,  3408,  3409,  2989, -1011,  1208,
    1209,  3415,  1073,  3529,  2589,  1340,  1341, -1809,  -675,  5226,
    1143,  4927,  1340,  1341,  1857,  4277,  1843,  3427,  3428,  1176,
    4638,  4928,  1182,  3305,  3585, -2892,  3434,  1340,  1341,  1916,
    4953, -2799,   993,  1187,  4197,  -575,  3575,  1340,  1341,  3319,
    1661,  -564, -2065,  3808,  3452,  1529,  4198,  3478,  1087,   951,
    1340,  1341,  1340,  1341,  4561,  1489,  1340,  1341,  3074,  2146,
    4199,  1340,  1341,  4606,  2163,  2152,  3770,  1340,  1341,  1204,
     966,  1030,  1038,  1011,  1183, -2891,  3376,  1383,  2365,  1758,
    5389,  2038,    42,  2688,  2368,  3124,  1340,  1341,  4780,  2860,
    2152,  1707,  1340,  1341,  3136,   964,  2277,  1340,  1341,  4887,
    1385,  1038,  1011,  5282,  2510,  3512,  1340,  1341,  1076,  2630,
    1340,  1341,  2334,  2631,  2593,  1340,  1341,  4101,  2209,  1530,
    4083,  4087,  4207,  4096,  3137,  2371,  3554,  1611,  1241,  1082,
    4098,  4099,  5365,  1844,  3184,  3649,  3147,  1845,  3186, -2074,
    2993,  1450,  4646,  4209,  4213, -2892,  3555,  4214,  2855,  3899,
    1429,  1846,  4221,  4222,  2039,    49,  4647,  2511,  2278,  3556,
    4289,  5361,  3015,  1300,  4929,  4223,  1923,  3187,  1340,  1341,
     969,  2752,  2054,  1340,  1341,  1340,  1341,  1340,  1341,  1384,
    1261,  1840,   715,  3805,  4489,  2606, -2957,  2087,  2088,  1585,
    2446,  4197,  2448,  2449,  2246,  1526,  3800,  2451,  3806,  1340,
    1341,  3219,  1668,  4198,  1384,  2250,  1214,  1384,  2607,    54,
    2464,  3578,  5283,  2470,  2471,  1142,  2473,  4199,  5001,  2476,
    2477,  2478,  2479,  1854,  1439, -1809,  2482,  1366,  1367,  1038,
    1011,  2494,  4264, -2075,  4899,  3389,  2499,  2500,  2501,  2502,
    2503,  5002,  3557,  2512,  2507,  2508,  3900,  5241,  1554,  3320,
    2518,   241,  2520,  2521,  2522,  2374,  2525,  2526,  3778,  2528,
    3611,  1558,  2531,  2930,  3677,  2536,  2537,   918,  3002,  4244,
    5185,  3016,  1343,  2191,  2425,  1344,  1340,  1341,  2147,  3639,
    1426,  3319,  -687,  2627,  5396,  4030,  4503,  1847,  5396,  3440,
   -2315,  1110,  2778,  3894,   970,  1343,  4849,  4795,  1344,   767,
    3643,  3644,  1855,  4290,  1343,  2031,  1144,  1344,  1669,  1612,
    2833,  2216,  3552,  4565,  1824,  3513,  1340,  1341,  1827,  3799,
     243,  -687,  3691,  1651,  2335,  3432,  5390,  5446,  1708,  2266,
    1111,  4403,  2856,  2409,  5361,  1679,  4283,  3545,  1343,  3583,
    4413,  1344,  4888,  2063,  3499, -1809,  1828,   965,  4648,  1451,
    2366,  2279,  1343,  5366,  1709,  1344,  2366,  2903,  1553,  2904,
    2777,  1340,  1341,  2086,  3558,   772,  1340,  1341,  5284,  2040,
    2287,  2554,  3377,  1343,  2290,  4959,  1344, -2957,  2294,  1242,
    1343,  1083,  1074,  1344,  1679,  1848,  2425,  1306,  5271,  1340,
    1341,  2164,  1079,  1079,  1384,  1343,  1490,  2366,  1344,  4251,
    1127,  4530,  1206,  1662,  1530,  1343,  2309,  2310,  1344,  3782,
     967,  3567,  1107,  4265,  5295,  1340,  1341,  2103,  1343,  2104,
    1343,  1344,  3771,  1344,  2148,  4162,  3776,  2775,  3492,  1343,
    1060,  4875,  1344, -2891,  3884,  1343,  3559,  1245,  1344,  3793,
    4531,  3087,  4404,  3087,  5045,  5046,  2375,  4035,  1109,  3809,
    2639,  3690,  3564,  3693,  1343,  1387, -1809,  1344,  3797,  1262,
    1343,  1680,  3903,  1344,  1156,  1343,  1489,   784,  1344, -1809,
    1385,  3331,  3331,  3322,  1343,  3331, -1809,  1344,  1343,  1874,
    1917,  1344,  3656,  1343,  2872,  3448,  1344,  2801,  1174,  3877,
    2802,  3586,  2652,  2429,  3476,  2830,  1133,  4193,  4010,  2430,
    4012,  2552,  2363, -2892,  1826,  5222,   953,  2432,  1194,  1194,
      42,  1391,  1392,  1393,  3509,  1301,  1396,  1397,  3640,  3641,
    1400,  3510,  1402,  1403,  1404,  4216,  1215,  4715,  3572,  1480,
    3330,  1029,  2637,  1346,  2112,  1127,  1343,  1338,  2848,  1344,
    2776,  1343,  1351,  1343,  1344,  1343,  1344,  1841,  1344,   800,
    1205,  1075,  3576,  4573,  2620,  3697,  1346,  1340,  1341,  2598,
    4266,  5058,  2830,  2452,  1334,  1346,  4954,  1343,  1436,  3074,
    1344,  4085,  2617,   801,  4965,  2737,  3646,  1394,  3024,  3617,
    1841,  3654,  1399,    49,  3234,  2603,  2173, -1026,  3870,  2452,
    1841,  1339,  3868,  3347,  2183,  -353,  3775,  1466,  1469,  1346,
    1340,  1341,  4885,  3003,  3004,  2973,  2974,  3631,  3632,  3633,
    3634,  4200, -1928,  1346,  2452,  4610,  4002, -2315,  2732,  1216,
    1440,  -548,  2664,  2452, -2891,  4614,  2668, -2136, -2074,  4518,
    2960,  -674,  1127,  4617,  1346,  2962,  4201,    54,  1445,  4013,
    4607,  1346,  4020,  3924,  1343,  3529,  4519,  1344,  2690,  2429,
    1841,  3921,  1459,  1127,    55,  2430,  1346,  1077,  4522,  4523,
    4501,  1385,  -533,  2432,  2452,  2513,  1346, -1011,  1430,  4663,
    1461,  4601,  3684, -2957,  5487,  2565, -1809,  -675,  1586,  1346,
     897,  1346,  1894,  3235,  1343,  1346, -1809,  1344,  2733,  1127,
    1346,  3950,  4409,  3951, -2892,  5285,  1346,  1127,  1127,   919,
   -2799,  4424,  2452, -1809,  -575,   971,  2452,  3969,  1527,  3970,
    -564,  4797,  2452,  2689,  2931,  1346,  5125,  1127,  5269,  4308,
    1555,  1346, -2075,  1427,  3984,  5242,  1346,  4031,  1027,  1343,
    4787,  3304,  1344,  1559,  1343,  1346,  3502,  1344,  1679,  1346,
    2911,  2744,  2378,  3692,  1346,  2638,   114,  5086,   950,  3772,
    1406,  3441,    42,  2834,  3507,  1079,  1602,  1343,  1362,   121,
    1344,  4016,  3767,  3768,  1093,  4331,  2628,  5327,  4200,   116,
     827,  5426,  3653,  1134,   950,  2712,  2452,  2778,  4284,  2713,
    4430,  4872,  4873,  1343,  1841,  1154,  1344,  1028,  4602,  2036,
    1590,   949,   241,  2037,  3091,  1636,  3563,  1346,  4852,  1235,
    3787,  2269,  1346,  2226,  1346,  4134,  1346,  1490,  3790,  4405,
    1455,  1115,  2968,  3794,  2618,  1603,  1463,  1127,  1434,  3320,
     116,  2643,  4532,  5173,   960,    49,  1530,  4662,  1346,  4626,
    4664,  2229,  2036,  3924,  5174,  1706,  2656,   982,  2523,  1127,
    1107,  1713,  1714,  4660,  1127,  4974,  1718,  1388,   720,  5259,
    5322,  1817,  4927,  1818,   708,  2954,  1711,  1079,  5497,  2644,
    4410,  2649,  4928,  1105,  1836,  2981,  2692,  1595,  3636,  1303,
    2693,  1601,  2709,  1858,  1859,  1860,  2710,   959,  1863,    54,
    5513,  1867,  1127,  5017,  1872,  1873,  2662,  4627,  2901,  4251,
    2005,  3163,  4761,  4581, -1809,  2654,    55,  2735,  4989,  1868,
    3481,  2736,  3457,  3914,  1549,  1346,  3458,  2902,  1715,  3299,
    4628,  3301,  2541,  4625,  1819,  3955,   961,   986,  1262,  3956,
    1604,  3084,  5488,  3092,  2655,  1343,  3880,  4582,  1344,  3881,
    4287,  5323,  1262,  3660,   978,  1979,  3313,  4145,  4189,  4190,
    1191,  5489,  4411,  2935,  4975,  1346,  1716,  5316,  3135,  4629,
    1340,  1341,  4671,  5055,  1596,  1658,  1550,  1948,  1334,  3698,
    1949,  1365,  2920,   950,  2970,  3148,  1340,  1341,  1343,  1383,
    1522,  1344,  4762,  1194,  4164,  3534,  1489,  2658,  3963,  4288,
    2006,  1135,  3964,  4853,  2670,  3024,  2675,  1203,  4175,   962,
    1346,  3618,  1340,  1341,  1591,  1346,  2027,  1340,  1341,  1655,
    1656,  4552,   983,  5214,  3982,  4929,  3194,  3195,  3983,  1383,
    1494,  5260,  3893,   897,  3208,  5061,  2046,  2115,  1346,  4501,
    2059,  2060,   951,  1435,  2064,  4511,  4513,  2065,  2066,  2067,
    2524,  2062,  2071,  2072,  2074,  2076,  2077,  2078,  2079,  2080,
    1340,  1341,  1109,  3322,  1346,  1362,  2854,  2174,   951,  1735,
    3909,  1852,  5175,  1735,  4332,  2803,  1659,  1127,  4181,  1735,
     973,  1030,  2760,  3485,  2094,  2095,   708,  2097,  1660,  2099,
     708,  1127,  3312,  1657,   708,  2109,  1127,  1079,  3087,  2114,
    4297,  4298,  1107,  2139,  2462,  2679,  3494,  1340,  1341,  2103,
    4431,  2104,  1815,  1815,  2230,  2142,  5079,  2025,  1127,  3029,
    1816,  1816,  3293,  3465,  4076,  3314,  1127,  3294,  3295,  1127,
    4111,  2933,  4157,  2157,  2159,  2144,  3302,  3303,  4417,  2538,
    3286,  2938,  1337,  4100,  2940,  2680,  2096,  2943,  1079,  1079,
    2100,  2588,  3592,  4109,  2108,  4330,  1079,  1079,  3373,  1079,
    2187,  3456,  4409,  2612,  2613,  2614,  2615,  3093,  1340,  1341,
    4379,  4380,  2311,  3622,  2616,  3573,  3574,   241,   950,  4071,
    2220,  1637,  1024,  4412,  4364,  3030,  4022,  4852,  1127, -2065,
    4023,  1340,  1341,  4160,  2160,  2682,  1340,  1341,  3074,  3074,
    3374,  2462,  2491,  2239,  4865,  2224,  1346,  4457,  3637,  4381,
     950,  2247,  5261,  1194,  2737,  4661,  3031,  1735,  2683,  4007,
    3461,  3462,  4011,  2026,  4504,  1340,  1341,  3373,  3589,   708,
     708,   708,  1079,   708,  1127,  1079,  4119,  5193,  1027,  1441,
    2286,  3407,  5202,  4373,  2687,  4333,  2288,  4397,   708,  1346,
    1127,  2275,   708,   949,  2492,  1220,  2745,   951,  3626,   950,
    3628,  3629,  5217,  2132,  2170,  1194,  2782,  2291,  1365,  3374,
    4138,  4990,  2182,  1194,  4879,  2184,  2460,  3110,  3319,  1190,
    3552,  2830,  4344,  5317,  1340,  1341,  4458,  3032,  1436,  2270,
    2271,  2272,  1192,  2274,  4786,  5273,  1493,  1028,  1725,  5025,
    1725,  5027,  1093,  2326,  1511,  1516,  1384,  5219,  2289,  1340,
    1341, -2065,  2293,   767,  4444,  1340,  1341,  2337,  2855,  3467,
    4108,  1743,  1127,  4459,  1545,  2285,  2285,  2462,  3593,  3594,
    4410,  4448,  2606,  1340,  1341,  1340,  1341,  1490,  1343,  2344,
    1127,  1344,  -758,  3111,  2830,  4383,  1384,  4611,  2273,  1340,
    1341,  2276,  4960,  3094,  1343,  2607,  1127,  1344,  2897,  1340,
    1341,  1875,  5254,  5255,  2429,  1632,  4244,  1127,  5132,  3033,
    2430,  4398,  4853,  2382,  2406,  2407,  2408,    42,  2432,   772,
    1343,  5359,  1853,  1344,  5318,  1343,  2705,  2413,  1344,  5550,
    1725,  3433,  1127,  3678,  3315,  3679,  3767,  3768,  1681,   716,
    1727,  3677,   717,  3869,   114,  5379,  4811,  2434,  2435,   116,
     116,   116,  4415,  -606,  4651,  5319,  4172,   121,  1495,  2374,
    3568,  3569,  3570,  1291,  1677,  4549,  3289,   116,  1343,  2722,
    1727,  1344,  1727,  1340,  1341,  2312,  4140,  1340,  1341,  4052,
    1950,  1690,  1727,  1951,  5193,  3112,  4563,  1630,  2746,  4092,
      49,  1717,   951,  1377,  1378,  1379,  1380,  4946,  4571,  1295,
    3980,  -910,  1485,  4575,  2540,  4319,  4643,   241,  4324,  1340,
    1341,  5018,  4335,  4336,   993,  1343,  4339,  4340,  1344,  1497,
    5250,   784,  4093,  4346,   951,  4348,  4349,  1080,  3320,  4854,
    4855,  5187,  5091,  3501,  4357,  1340,  1341,  4643,  4363,   953,
    4325,  3872,  2856,  1691,    54,  4938,  2815,  1340,  1341,  4947,
    3214,  4271,  2703,  1340,  1341,  1876,  4458,  1876,  4796,  2558,
    1079,    55,  1727,  1340,  1341,   953,  3661,  3113,  3662,  2542,
    4763,  4358,  4460,   951,  1639,  1079,  1343,  1167,  5092,  1344,
    4149,  1029,  2050,  4282,  2240,  2775,  1340,  1341,  1887,  3074,
    1877,  4150,  1168,  4459,  4055,  3331,  4141,  4086,  4399,  1343,
    1484,   795,  1344,   800,  1343,  1084,  4097,  1344,  1079,  5133,
    4036,  1030,  3503,  3923,  1827,  1340,  1341,  1060,   995,  4158,
    4486,  2633,  1087,  4568,  2035,  1340,  1341,  1340,  1341,  4570,
    3034,  3584,  5551,  1343,  1771,  4812,  1344,  5507,  3877,  1346,
    1579,  3591,  1828,  2238,  4374,  4375,  4376,  1060,  3927,  1060,
    2375,  3489,  1340,  1341,  2081,  1346,  4369,  2241,  3882,  1060,
    3883,  1340,  1341,  3581,  1640, -1991,  5443,  5443,  2765,  3942,
    5106,  3215,  4447,  4412,  2766,  1385,  2560,  1486,  1692,  1340,
    1341,  1346,  2775,  -910,  5129,  5251,  1346,  4706,  4707,  1340,
    1341,  2576,  1343,  1340,  1341,  1344,  1498,  1105,  1262,  2663,
    1729,  3873,  1340,  1341,  2085,  2747,  2765,  5093,  4788,  1340,
    1341,  4142,  2957,  4400,  1292,  3074,  3074,  1343,  2101,  5134,
    1344,  2748,  4792,  1343,  2610,  4201,  1344,  4094,  4272,  1346,
    1729,  4643,  1729,  3642,  4585,  4586,  3804,  2776,  4168,  1060,
    4587,  1343,  1729,  1343,  1344,  1107,  1344,    64,  2801,  4948,
    1296,  2802,  3322,  2145,   953,  4688,  1127,  1343,  2376,  4309,
    1344,  4110,  3490,  4106,  4107,  3447,  2436,  1343,  1366,  1367,
    1344,   241,  1385,  2770,  2051,  1127,  1346,  4689,  1375,  1376,
    1377,  1378,  1379,  1380,  1340,  1341,  2749,  2753,  3114,    42,
    5321,  3459,  4864,  3460,  1340,  1341,  4743,  1109,  1340,  1341,
    2757,  2776,  4460,  2761,  1580,  3767,  3768,  1878,  1641,  1878,
    2759,  2776,  4151,  3889,  3890,  3891,  3892,   819,  1184,  2726,
   -1991,  1109,  1729,  1351,   827,  1334,  2226,  4453,  1105,  4454,
    2634,  3420,  1079,  4041,  2565,  3961,  5107,  1346,  2484,  1340,
    1341,  1343,  3449,  5224,  1344,  1343,  5228,  4014,  1344,  1079,
    2803,  4133,  3237,  3238,  2775,  4139,   237,  3074,  1118,  4169,
    1346,  3962,    49,  1340,  1341,  1346,  1079,  1262,  1127,  1587,
    2082,  3916,  2242,  2339,  3897,  4072,  2340,  1343, -1991,  3655,
    1344,  3149,  2465,  2812,  5108,  2830,  2830,  2817,  1169,  4393,
    4892,  2830,  2455,  3917,  1346,  1079,  2083, -1302,  4854,  4855,
    1079,  1340,  1341,  1343,  4326,  4327,  1344,  2466,  1127,  3975,
    4877,  4878,  1127,  1127,  4021,  1343,    54,  1148,  1344,  1170,
    1820,  1343,  1820,  2496,  1344,  4197,  1340,  1341,  2377,  2850,
    2851,  1343,  3430,    55,  1344,  1340,  1341,  4198,  3333,  3015,
    2437,  1127,  1127,  1119,   238,  2874,  2378,  1079,  2768,   953,
    1588,  4199,  1109,  1346,  1343,  1127,  3986,  1344,  2871,  3431,
    4328,  3150,  1827,  1038,  4210,  1194,  2005,  2358,  3775,  2005,
    4064,  1127,  5453,  5454,  1879,  1121,  1879,  4293,  1346, -1302,
    1683,   953,  1194,  1343,  1346,  1162,  1344,  4137, -1302,  4704,
    1828,  2052,  4294,  1343,  2400,  1343,  1344,  4152,  1344,  1897,
    1027,  2485,  1346,  2929,  1346,  1340,  1341,  2053,  1027,  1165,
    4196,  2831,  3553,  1897,  1340,  1341,  2841,  3987,  1346,  2416,
    1343,  1340,  1341,  1344,  3507,  2341,  4251,  2243,  1346,  1343,
     953,  1897,  1344, -1991,  4161,  4618,  2619,  2379,  1177,  5383,
    1079,  1079,  2965,  4220,  1897,  4517,  2244,  1343,  3016,   950,
    1344,  4225,   950,  2467,  1897,  2953,  4019,  1343,  4258,  1028,
    1344,  1343,  2084,  3151,  1344,  4777,  1109,  1028,  1340,  1341,
    1343,  1029,  1172,  1344,  4745,  1340,  1341,  1343,  1340,  1341,
    1344,  4027,  1897,  1340,  1341,  4318,  2497,  4320,  4026,  2966,
   -1302,  1340,  1341,    25,  5049,  4337,  4825,  1127,  3011,  5052,
    4342,  4343,  1346,  4345,  2005,  4347,  1346,  1684,  4350,  4351,
    4352,  4353,  4354,  4355,  4356,  4642,  4360,  4361,  4362,  1107,
    2418,   367,  -606,   369,  2452,  2413,  1898,  1829,  3797,  3981,
    3797,  2540,  1149,  4619,  3623,  1127,  1142,  2392,  1346,  2393,
    1912,  2419,   716,  4826,  3022,   717,  4642,  1340,  1341,  1079,
    3554,  1127,  1343,  1127,  1109,  1344,  2941,  2942,  1966,  2635,
    2632,  3624,  1343,  2565,  1346,  1344,  1343,  1340,  1341,  1344,
    3555,  1970,  3253,  3254,   950,  1179,  1346,  4620,  2704,  3134,
    2636,  1992,  1346,  3556,  3080,  1340,  1341,  1150,  1143,   222,
    3086,   979,  1346,  3008,  2645,  1180,  3099,  3101,  3104,  3105,
    3106,  3107,  3108,  4043,  2646,  1647,  3117,  1343,  3128,  2032,
    1344,  4944,  3020,  1340,  1341,  1346,  2830,  1188,  3128,   716,
    3138,  3139,   717,  3128,  1190,  3143,  3144,  1144,  1127,  3146,
    3128,  1343,  2005,  3163,  1344,  3156,  2462,  4366,  3159,  1196,
    2006,  5180,  1340,  1341,  1346,  3169,  4048,  3701,  3170,  1079,
    1581,  1582,  4372,  3089,  1346,  1198,  1346,  3765,  3766,  3185,
    3021,  3128,  4977,  4978,  3109,  1127,  3557,  5179,  2657,  1343,
    3129,  3299,  1344,  3301,  1200,  5277,  4730,  1583,  2653,  5127,
    5128,  1346,  2666,  1340,  1341,  1079,  5196,  1340,  1341,  1201,
    1346,  4852,  1340,  1341,  1343,  3128,  3224,  1344,  5279,  1207,
    3160,  1340,  1341,  1343,  3168, -1302,  1344,    36,  1346,  5199,
    1386,  3172,  3173,  4969,  2667,  4970,  5280,  1079,  1346,  1340,
    1341,  1079,  1346,   951,  1151,  1202,   951,  5200,  5418,  5232,
    5233,  1346,  5376,  1030,  3205,  3206,  1649,  1127,  1346,  5371,
    2671,  1030,  1650,  2727,    42,  1210,   708,  3336,   708,   708,
     708,  2657,  2678,  1425,  1868,    42,  1428,  1722,  2681,  4751,
   -1302,  1431,  2741,  1038,  1011,  3171,  1433,  1127,  2684,  1038,
    1011,  1127,  3330,  1343,   116,  1211,  1344,  1421,   989,  2539,
    3396,  1432,  1343,  1340,  1341,  1344,   989,  4217,  3558,  1343,
    4218,  2696,  1344,  1340,  1341,  1340,  1341,  1340,  1341,  4367,
    4368,  3216,  3074,  5576,  1340,  1341,  3334,  1212,  3337,  3338,
    4516,  1340,  1341,  1346,  2905,  1723,   220,    49,  4547,  4548,
    2714,  1340,  1341,  1346,  4407,  1217,  1651,  1346,    49,  4943,
    2721,  1793,  2724,  3279,  1794,  2906,  1343,  3283,  2659,  1344,
    1340,  1341,  2565,  1343,  3767,  3768,  1344,  1273,   951,  2750,
    1218,  1343,  3439,  1219,  1344,  2804,  2027,  4420,  4421,  1343,
    3559,  1221,  1344,  1222,  3074,  3074,  2958,  1290,  1346,  1223,
    1362,    54,  1226,  4112,  2660,  5234,  4853,  2907,  1964,  1339,
    1304,  1305,    54,  4436,  3920,  1227,  1038,  1011,    55,  2005,
    4314,  4315,  1346,  5477,  3954,  2846,  2539, -1302,  3957,    55,
    3469,  3470,  4200,  1228,  4024,  4147,  4148,  3965,  2672,  3041,
    1127,  3463,  2565,  1398,  3971,  1343,  1534,  1127,  1344,  4896,
    4897,  1229,  1334,  4211,  3754,  1928,  1633,  3477,  1230,  4387,
    1346,  1231,  1127,  4665,  2139,  1343,  4667,  4668,  1344,  2139,
    4590,  1652,  2900,  3493,  1127,  4594,  4425,  -756,  1232,  4597,
    3678,  1233,  3679,  1343,  1236,  1346,  1344,  2455,  2912,  1735,
    1616,  1617,  4429,  1620,  1346,  1621,  3237,  3238,  1725,  5515,
    5516,  1362,  2456,  4385,  4386,  1535,  4804,  4805,  4704,  1079,
    4951,  1343,  1721,  1238,  1344,  1239,  1079,  1079,    42,  3972,
    1027,  1240,  2995,  2996,  1722,  3531,  3532,  2997,  2998,  3973,
    3422,  1722,  1262,  3974,  1243,  3544,  1244,  2812,  1536,  1385,
    1343,  2673,  1079,  1344,  2674,  2565,  1109,  1109,  2565,  3424,
    1246,  4466,  1024,  1247,   116,  1248,  4711,  4712,  4713,  4714,
    1249,  1932,  3118,  1362,  1346,  3164,  2676,  2717,  1995,  1996,
    2565,  2565,  1334,  1346,  3976,  3595,  3596,  3597,  1390,  1028,
    1346,  1343,  1723,  1726,  1344,  1343,  1250,  5380,  1344,  1723,
    1343,    49,  1395,  1344,  2286,  2286,  1127,  2808,  3979,  1343,
    1251,  2809,  1344,  1365,    64,  4911,  -756,  3042,  1027,  3608,
    4916,  3610,  2457,  1252,  2984,  1107,  3603,  1343,  1253,  3029,
    1344,  3469,  5126,  3043,  1256,  2170,  1257,  1346,  3119,  1263,
    1727,  1362,  2182,  3520,  1346,  1401,  3985,  3118,  5209,   950,
     950,   950,  1346,  2951,  1264,  3523,  3524,  2952,  1827,  1724,
    1346,  3381,  1677,  1265,  3118,  2565, -2065,  3183,  1266,  3120,
    1405,  3988,    55,  1267,  1094,  1647,  1268,  1028,  3028,  1933,
    3038,  2306,  2307,  1936,  3454,  1127,  1828,  3882,  2565,  3883,
    1937,  1343,  3201,  3204,  1344,  3030,  4718,  1079,  2413,  3659,
    1269,  1343,  1109,  1343,  1344,  1343,  1344,  3687,  1344,  4652,
    4653,  3688,  1343,  3119,  1365,  1344,  1346,  1270,  3666,  1343,
     953,  1095,  1344,   953,  3977,  3671,  3031,  4191,  2565,  1343,
    3119,  4192,  1344,  1029,  4392,  4613,  1346,  1271,  4192,  1274,
    3121,  1029,  1275,  4502,  3120,  1725,  4613,  1276,  1343,  1409,
    3990,  1344,  1725,  4911,  1346,  3145,  1277,  4916,  1127,  3992,
    4772,  3120,  3086,  3056,  3086,  4465,  3994,  1537,  1278,  2565,
    3099,  1938,  1369,  1370,  3710,  4488,  1365,  4505,  1410,  2950,
    4557,  4506,  1346,  3128,  4558,  4559,  1686,  1687,  4793,  4558,
    4907,  3773,  3190,  1648,  1412,  4592,  1096,  3032,  1843,  4593,
    4599,  1419,  1420,  4692,  4600,  3044,  1649,  4693,  1127,  3767,
    3768,  1346,  1650,  3995,  3781,  3121,  1279,  1060,  1280,  4911,
    3996,  1281,  3122,  2458,  4916,  2152,  3253,  3254,  4017,  4694,
    1726,  1424,  3121,  4695,  3128,  1940,  4441,  1726,  5581,  4697,
    -756,  1282,  3128,  4698,  1365,   953,  3128,  3128,  1423,  4700,
    4705,  4710,  1346,  4701,  4600,  4600,  1346,  1283,  1107,  5071,
    4733,  1346,  1079,  1030,  4736,  3128,  3074,  4746,  1127,  1127,
    1346,  2565,  1284,  1369,  1370,  1437,  3057,  1727,  1285,  3033,
    1722,  1286,  3045,  4769,  1727,  2005,  1560,  2565,  1346,  4827,
    2005,  4064,  4442,  4593,  1493,  1442,  1651,  3122,  1493,  2558,
    1729,  1287,  4854,  4855, -1809,  1361,  4843,  4847,  3046,  1288,
    4600,  4600,  4443,  1538,  3122,  1844,  1561,  4850,  3174,  1845,
    3175,  4600,  1289,   951,   951,   951,   220,  1443,  4866,  5072,
    4595,  3286,  4867,  1846,  1539,  1369,  1370,  1293,  1723,  4868,
    1294,  2459,  4905,  4867,  2486,  4920,  4906,  1297,   767,  4600,
    1298,  1030,  1346,  5015,  2455,  1302,  1127,  5016,  4741,  1540,
   -1809,  1306,  1346,  3176,  1346,  1728,  1346,  1562,  5035,  2487,
    3047,  1563,  4593,  1346,  1307,  1541,  1941,  1308,  1194,  5051,
    1346,  5097,  1449,  3688,  5098,  4812,  3177,  4744,  4812,  5130,
    1346,  2803,  1079,  5131,  1943,  1079, -1809,  3710, -1809,  1309,
    1310,  1453,  5292,  1369,  1370,  1362,  5293,  3911,  1311,  1346,
    1312,  1652,   747,  1362,   772,  1313, -1809,  1314,  1315,  1730,
    1622, -1809,   221,   116,  1316,  3178,  -756,  1115,  4750,  1456,
    5297,  3287,   116,   116,  3817, -1809,   116,  4752,  3288,  1317,
    1641,   222, -1809,  3123,  3479,  5302,  4753,  1318,  3058,  4558,
   -1809,   896,  1362,  1319,  1060,  1320,  1097,   946,  3059,  3484,
    1321,  1060, -1809,   950,  4754,  3060,  1322,  1323,  1324,  1847,
    4966,  5073,  3048,  2488,  1325, -1809,  1326,  1327,  1098,  1025,
   -1809,  1373,  1374,  1375,  1376,  1377,  1378,  1379,  1380, -1809,
    4632,  1725,  4122,   896,  1104,  1328,  5102,   767,  5304,   896,
    3034,  5313,  5305,  4833,  4834,  5314,  4836,  1389,  3902,  3439,
    1421,  3904,  1457,  5384,   223,  1827,   784,  5385,  3123,  1099,
    5525,  1363,  1464,  1472,  3029,  4886,  1564,  4144,  4755,  4018,
    1474,   997,  5525,  4840,  4841,  3123,  1476,  1729,  4851,  1484,
    5032,  5562,  5034,  1828,  1729,  5563,  1509,  1364,  1517,  5068,
    2355,  2356,  1722,  2357,   771,  1523,  5243,   224, -1809,  5525,
    1352,  1353,  1528,   772,  1533,  1546,  2812,  1848,  1556,  3061,
    4040,  1127,  2391,  2392,  1557,  2393,  1726,  1572,  1573,  1079,
    1100, -1809,  1373,  1374,  1375,  1376,  1377,  1378,  1379,  1380,
    3030, -1809,  1127,  3029,   777,  5375,  2006,  1578,   800,  2006,
     225,  1354,  2486,  3286,  1565,  1575,   116,  1362,  1365,  4057,
    1723,   220,  2455,  1127,  1355,  1440,  1365,  3289,  1605,  4738,
    1606,  3031,   801,  1727,  1608,  1079,  1079,  2487,  1609,  1115,
    1109,  1109,  1618,  1623,  1079,  1079,  1079,  1366,  1367,  1109,
    1109,  1109,  1362,  5303,  1373,  1374,  1375,  1376,  1377,  1378,
    1379,  1380,  1624,  1625,  1356,  1365,  1730,  1628,   998,  3030,
    1362,  1626,  3118,  1730,  1627,   784,  3062,  1357,  1566,  1629,
    1631,   747,  1493,  4128,  1633,  1634,  1664,  3179,  1635,  1638,
   -1809,  4121,  1646,  4121, -2065,  1665,  1667,  1666,  1678,  1682,
    3068,   983,  3032,  1696,  1358,  4051,  1362,  2490,   367,  1698,
     369,  1699,  1720,  3287, -1809,  1362,  1701,   722,   747,  1820,
    3288,  1838,  1861,  1368,  1375,  1376,  1377,  1378,  1379,  1380,
    5020,  5021,  5022,  1029,  1862,  5078,   222,  1079,  3119,  4159,
     795,  2488,  1109,   226,  2006,  1864,  1362,   951,   999,  1865,
    3553,  1383,   798,  1897,  1904,  3689,   799,   800,  1953,  4632,
    1915,  1918, -1809,  1963,  1965,  1986,   767,  1964,  1359,  3120,
    2003,  3069,  4993,  1725,  4994,  4995,  2015,  1369,  1370,  3086,
    2016,  2285,  5072,  1827,  3033,  1369,  1370,  4188,  2028,  2029,
     953,   953,   953,  3553,  2030,  2042,  4632,  2061,  1371,  2068,
    1567,   767,  2069,   767,  5026,  1493,  2098,  2102,   723,  2116,
    1060,  1828,  2141,  2162,  2677,  2166, -1809,  2167,  2169,  2177,
    1365,  1029,   227,   771,  1369,  1370,  2178, -1809, -1809,   827,
    2188,  4958,   772,  2179,  2190,  2207,  2210,  1413,  2221,  2225,
    3121,  2226,  1568,  2228,  -960,  2231,  2233,  2235, -1809,  2237,
   -1809,  2263,  2238,  3070,  3966,  1365,  5192,  1486,  1726,  4267,
     771,  3029,  2264,   777,  3286,  2900,  1493,   772,  2295,   772,
    2268, -1809,  2006,  1365,  2296,  4275,  4276,  2005,  2297,  2298,
    5113,  5216,  2300,  5116,  5117,  5118,  5119,   228,  3554,   229,
    2303,  2313,  4229,  1729,  2314,   724,  2316,  3128,  3128,  3289,
     777,  3224,  2164,  4303,  2327,  1727,  4307,  2328,  3555,  1365,
    2331, -1809,  2329,  2333,  2345,  2346,  2348,  2349,  1365,  1127,
    1414,  3556,  3122,   230,  5188,  1415,  5543,  3030,  2350,  -756,
    2351,  3554,  5074,  2352,   784,   231,  4655,  2360,  1641,  2361,
    4231,  2384,  4232,  2366,  2397, -2065,  2401,  2402,  2489,  1365,
    2417,  3555,  2438,  3885,  2456,  4188,   819,  2439,  3068,  5003,
    4633,  2442,  2441,  4634,  3556,  2490,  2454,  2469,  1416,   784,
    4188,   784,  4377,   825,  2450,  2455,  2474,  2475,   827,  1369,
    1370,   828,  5220,  2480,  1417,  2481,  2483,  2493,  2495,  1079,
    4233,  5230,  5231,  5004,  2498,  2505,  2506,  2509,   725,   795,
    5239,  2516,  2517,  1372,  3557,  3034,  1386,  2519, -1809,  2529,
    1418,  3236,  1730,  2530,  1369,  1370,   800,  2527, -1809,  2532,
    2544,  2545, -1809,  2546,  1725,  2547,  2551,  4526,  2561,  3069,
    2550,   232,  1369,  1370,  2562,  2565,   795, -1809,  2564, -1809,
   -2065, -1809,  2577,  2579,  2581,  2580, -1809,  3557,  2583,  2584,
    5281,   800,   799,   800,  1000,  1001,  2585,  1002,  1003,  1004,
    2586,  2587,  2592,  5192,  2590,  2605,  5350,  2611,  1369,  1370,
    4528,   988,  2621,  2648,  3071,   801,  1005,  1369,  1370,  2623,
    2624,  2625,  1060,  2640,  2642,  2647,  1373,  1374,  1375,  1376,
    1377,  1378,  1379,  1380,  1373,  1374,  1375,  1376,  1377,  1378,
    1379,  1380,  2650,  2651,  5041,  4391,  2657,   726,  1369,  1370,
    2661,  3070,  3029,  2718,  2694,  4574,  5289,  5005,  2139,  3933,
    2665,  3937,  2695,  2669,  2685,  2686,  3558,   727,  -930,  2006,
    2691,  5369,  2738,  1373,  1374,  1375,  1376,  1377,  1378,  1379,
    1380,  2706,  2707,  3123,  4124,  2708,  2716,  2818,  2739,  2728,
    3289,  2734,  2715,  1262, -1418,  2812,  1727,  1380,  1127,  2740,
    2763,  1079,  2764,  2754,  2758,  1729,  1109,  2767,  2780,  3558,
    2776,  2783,   728,  2819, -1925,   116,  2786,   729,  3030,  2787,
    2788,  2789,  5258,  2790,  2791,  2792,  2805,  2806,  2820,  2807,
    2810,  1530,   896,  2842,  2845,  1841,  2852,   896,  3559,  4635,
    4636,  2821,  5430,  5006,   953,  2853,  2861,  4637,   730,  3031,
    2862,  2863,   731,  2864,  4121,   819,  2867,  2868,  2213,  4633,
     732,  5007,  4634,  3237,  3238,  3872,  1497,   896,  2895,  2869,
    1366,  4234,   825,  2118,  2896,  2914,  4235,   827,  1498,  2915,
     828,  3559,  4236,   896,  2916,  5008,  2917,  4608,  2918,  2926,
    2919,  2934,   819,  2822,  2823,  2923,  4633,  2928,  4188,  4634,
    4591,  2932,   733,  4188,  4527,  2939,  2946,  4188,  5482,   825,
    5484,  2944,   827,  2955,   827,  2949,  3710,   828,  2956,  2963,
    3032,  2824,  4237,  2950,  1730,  2975,  5500,  1127,  1373,  1374,
    1375,  1376,  1377,  1378,  1379,  1380,  2967,  1651,  2969,  4562,
    2983,  2976,   896,   896,  2987,   896,   896,  4529,  2982,  2990,
    1079,  3009,  2991,  3014,  1127,  2992,   734,  3019,   896,  1151,
    5531,  5532,  3025,  1373,  1374,  1375,  1376,  1377,  1378,  1379,
    1380,  3039,  3071,  1060,  5218,  3051,  3052,  3053,  3140,  2005,
    5557,  1373,  1374,  1375,  1376,  1377,  1378,  1379,  1380,  2825,
    3142,  3054,  2005,  5566,  1079,  4673,  2119,  2005,  5557,  3196,
    2120,  4238,  3033,  3209,  2005,  5566,  2566,  2567,  2568,  2569,
    2570,  2571,  2572,  3188,  3191,  5189,   708,  1373,  1374,  1375,
    1376,  1377,  1378,  1379,  1380,  3873,  3211,  1374,  1375,  1376,
    1377,  1378,  1379,  1380,  3217,  3218,  3225,  3227,  4303,  3228,
    2121,  3229,  3230,  2826,  3231,  3232,  3233,  3281,  3285,  3282,
    2593,  4239,  3307,  3309,   896,  1661,  1729,  1373,  1374,  1375,
    1376,  1377,  1378,  1379,  1380,  3318,  4624,  3341,  1060,  3383,
    3350,  3384,  3385,  3397,  3399,  2957,  4683,  3414,  3497,  3480,
     946,  1241,  1291,  1295,  -756,  5009,  3498,  5527,  3444,  3446,
    3451,  3504,   896,  3500,  2455,  3533,  3455,  3495,  4635,  4636,
   -2302,  3496,  3505,  3518,  3537,  3538,   946,  3539,  4240,  2456,
    4672,  3543,  3552,  3551,  4188,  3565,  4194,  4195,  3571,  1025,
    4726,  4202,  3577,  3590,  2118,  2122,  3600,  3604,  3605,  3606,
    3607,  3609,  3612,  3615,  3614,  4635,  4636,  3619,  5363,  3620,
    3621,  3625,  3627,  4669,    42,  3024,   116,  3650,  3670,  3664,
    3239,  3667,  3522,  3668,  3240,  3669,  3241,  4224,   868,  3242,
    3767,  3768,  3672,  4254,  4256,  4257,  3694,  3695,  3933,  3243,
    3696,  3703,  3704,  3705,  3244,  3245,  3246,  3247,  3248,  3249,
    3250,  3251,  3252,  3253,  3254,  3255,  3256,  3257,  3258,  3259,
    3260,  3261,  3262,  3263,  3264,  3265,  3266,  3267,  3268,  3269,
    3270,  3271,  3698,  3775,  3780,  3783,  1112,  3784,  1127,  3801,
    4241,  3791,  3272,  -756,  4779,  3788,  3792,    49,  3810,  2457,
    2123,  3813,  3817,  3034,  3814,  2006,  1386,  3815,  3831,  3816,
    2006,  3819,  3822,  3825,  -758,  3828,  1127,  3832,  3833,  3834,
    3835,  3836,  2192,  3837,  3838,  3839,  3840,  2119,  3841,  3888,
    3842,  2120,  2193,  4242,  4243,  1827,  2124,  3843,  3844,   116,
    3845,  3846,  2194,  5447,  3847,  3848,  3849,  3850,  3439,  3851,
    3852,  3523,  3524,  3853,   896,  3854,  2195,  2196,  2197,  3855,
    2125,  3871,  4824,  1828,  3856,  3857,  3858,  3859,    55,  3860,
    3861,  2121,  2198,  3886,  3862,   946,  2152,  3863,  3864,  5571,
    3865,  3866,  3867,   896,   896,  2126,  3895,  3913,  3924,  3896,
    3928,  5363,   896,   896,   896,   896,   896,   896,  3934,  3930,
    4188,  3938,  3939,  3941,  4188,   896,   896,  1386,   896,   896,
    3943,  3945,  1127,   896,   896,  3946,  3958,   896,   896,   896,
     896,  3997,   896,   896,  3959,  4005,  4006,  1301,  3947,  2127,
     896,   896,  1771,   896,   896,   896,   896,   896,  4000,  1743,
     896,   896,   896,   896,   896,   896,   896,   896,   896,  3948,
     896,  3949,  4033,   896,   896, -1809,  2122,  4001,   896,  1127,
    2128,  1060,   896,   896,   896,  4025,  5540,  4008,  4034,  4038,
    4042,  4053,  4065,  4056,  4069,   896,   896,   896,  4070,  4073,
     896,  4074,  4077,   896,   896,   896,   896,   896,  4078,  4079,
    4080,  4088,   896,  5540,   896,  4089,  4081,  4303,  4082,  4307,
    4901,  4102,    42,  4090,   896,   896,  4103,  4113,  4114,  4115,
    4045, -1809,   896,  4116,   896,   896,  4125,  -756,  4117,  1127,
    4126,   116,  4129,  4131,  2152,  4132,   896,   896,   896,  4143,
     896,   896,  4146,  1079,   896,   896,   896,  4130,  4155,   896,
     896,   896,   896,   896,   896,   896,   896,  4166,  4161, -1809,
     896,  2123,  3042,  4167,  3525,   896,  4170,  4171,  4174,  4182,
    4226,  4292,  4176,  4263,  4179,  4183,  4208, -1809,  3043,  4270,
     946,  4219, -1809,  4259,  4281,    49,  4279,  4280,  4317,  1127,
    4371,  4390,  4384,  4414,  4394,  4395,  4402,  2124,  4416,  4418,
    4426,  4433,  4432, -1809,  1493,  4455,  4957,  4445,  1127,  2199,
    4450, -1809,   946, -1809,  4446,  3128,  4449,  3128,  4468,  5360,
    4484,  2125,  4485, -1809,  4490,  5013,  2200,  4501,  2459,  4492,
    4498,  2900,  4509,  4508,  4515,  4512, -1809,  4521,  4524,  3523,
    3524, -1809,  4469,  4520, -1702, -1701,  2126,  4525,  4544,  4554,
   -1809,  4555,  4470,  2339,  4566,  4567,    55,  4569,  4576,  4934,
    4577,   946,  4471,  4578,  4579,  3658,  4588,  4596,   896, -1809,
    4605,  4609,  4615,  5403,  -759,  4644,  4472,  4473,  4474,  4645,
    4650,  3091,  4657,  4659,  5029,  3351,  4253,  4666,  5403,  -909,
    2127,  4674,  4475,  4675,  4677,  4229,  4678,  4681,  4685,  1025,
    4684,   896,  5414,  4709,  4687,  4719,   896, -1809,  4696,  4722,
    4729,  4742,  3352,  -756,  4731,  4732,  4733,  4303,  4303, -1809,
    4734,  2128,  4735,  4727,  4739, -1809,  4740,  4747,  4749,  4748,
   -1809,  4757,  -756,  4758,  4759,  4765,  4768,  4770,  4726,  4230,
    4771,   716, -1809,  4231,   717,  4232,  4773,  5064,  4774,  4775,
    3044, -1809, -1809,  4782,  4781,  5449,  4784,  2456,  4794, -1809,
    4798,  4790,  3353,  4799,  2201,  3354,  4801,  4807,  5403,  4803,
    4809, -1809,  4810,  3355,  4817,  4821,  4822,  4828,  5471,  4558,
    4831,   896,  4832,  4835, -1809,  4837,  5103,  4838,  1148, -1809,
     900,  5013,  3356,  4233,  4863,  3439,  4842,   798, -1809,  4870,
     896,  4844,  4880,  4876,  4881,  4736,  3808,  4890,  4894,  4903,
    2286,  5414,  4895,  4904,  4924,  4917,  4935,  4937,  4921,  4923,
    5403,  4936,  5403,  4940,  4942,  4941,  2202,  3045,  4945,  4956,
    4188,  4952,  4961,  4962,  4971,  4980,  4981,  4985,  5403,  3357,
    4987, -1809,  3525,  2203,  4996,  5024,  4999,  5030,  5033,   901,
    1366,  1367,  5043,  3046,  5042,  3358,  5044,  5048,   896,  5054,
    3623,  5039,  5062,  5063,  5065, -1809,  5066, -1809,  5067,  5403,
    5403,  -909,  5069,  4812,  5548,  4953,  5081,  5083,  5085,  5087,
    5094,  5084,   902,  5088,  5089,  5090,  5095,  5096,  3435,  5105,
   -1809,  5104,  5109,  5114,  5115,  5120,  5123,  2006,  5112,  5135,
   -1809,  5208,  5176,  5138,  5177,  5182,  5194,  5203,  3224,  3224,
    3359,  5186,  5197, -1809,  5201,  3047,  5204,   903,  4121,  4476,
    5196,  5210,  5211,  5222,  5221,  5245,  5199,  5200,  5236,  3360,
    5263,  -930,  5265,  5235,  5266,  5267,  4477,  -492,  5275,  5268,
    5274,  5278,  5296,  5291,  5300,  5240,   242,  5299,  5330,  5327,
    -510,  5355,  5357,  5358,  5356,  5249,  5371,  5372,  5378,  5373,
    5256,  4990,  5388,   947,  5399,  5391,  5392, -1809,   904,  5400,
    5404,  5412,   114,  5421,  5425,  5424,  5426,  5431,  5433, -1809,
    5435,  5436, -2743,  5439,  1224,   121,  5450,  5452,  5459, -1809,
    5464,  4303,  5462,  5474,  5479,   116,  3361,  3362,  3363, -1809,
    5475, -1809,  5472,  3364,  5485,  5480,  3365,  5493,  5499,  1493,
    5490,  5481,  5503, -1809,  1255,  5505,  5508,  3048,  1079,  5509,
    5510,  5514, -1809,  5519,  5309,  5518,  5521,  5544,  1127,  5528,
    1272,  5530,  4954,  1366,  4234,  5545,  5558,  5549,  5572,  4235,
    5567,  5573,  5578,  5577,  5579,  4236,  5582,  4029,  5583,  3830,
    1127,  3821,  3824,  1127,  4900,  4902,  2900,  4478,  3366,  3367,
    3827, -1809, -1809,  4365,  5570,  4912,  5331,  4173,  5047,  4370,
    1888,  5181,  4922,  5270,  4479,  5410,   896,  5445,  5060,  2440,
     896,  5560,  5523,  5184,  3368,  4237,  1072,  1589,   896,  3488,
     896,  4483,  5013,  1335,  5149,   950,  -154,  3535,  5150,  5533,
    5456,   905,  5152,  5153,  5155,  5156,  5157,  5208,  5158,  5159,
    5160,  5397,  5457,  5163,  5164, -1809,  4918,  5444,  5165,  5409,
    5408,  4382,  3077,  4028,  1731,  1340,  1341, -1809,  4708,  3083,
     896,  4589,  3280,  4720,  5290,  3910,  4480,  3908,  3907,  4560,
    4988,  5381,  4846,  5423,  5387,  5386,  5122, -1809,  3040, -1809,
    3199,  4604,  4721,  4481,  3011,  3906,  4654,  4603,  3369, -1809,
    4262,  4212,  4260,  4869,  4238,  4656,  5393,  5419,  5124, -1809,
   -1809,  3999,  5000,  5050,   896,   896,   896,  5053,  2609,  5023,
     906,  1127,  5014,  3702,  5309,  4862,  4616, -1809, -1809,  4716,
   -1809,  3648, -1809,  4388,  3635,  3898,  3202, -1809,  4884,  3203,
     907,  1448,  3200,  2945,  2390,  2415,  5171,  2948,  1600,  4278,
   -1809,  3774,  3519,   896,  4239,  2578,  3521,  2559,   896,  4497,
    3818,  3506,  4050,  1924,  1925,  1926,  1927,  1928,  3370,  1113,
    4737,  2894,  2762,  1483,  3010,  2044,  3466,   896,  2725,   868,
    3443,  5076,  5099,  5370,   896,   908,  5461,  3547,  1482,   896,
     729,   896,  3548,  5469,  3549,  3550,  3371,   896,  5495,   896,
     896,  1962,  5420,  5377,  4973,  5512,  4806,  5212,   909,  4299,
    5213,  4240,  1914,  4546,  4983,  2324,  4819,  5100,  4274,  4105,
    4998,   910,  1607,  5070,  3013,   915,  2769,  3475,  2421,  4046,
    2161,  4791,  4047,   911,  2422,  5501,  2323,  4507,  4044,  3372,
    5506,  4778,  1695,  4785,  2301,  2936,  1697, -1809,  2937,   912,
    2423,  2414,  5171,  5171,  3482,  3795,  2866, -1809,  4964,  2424,
    5511,  5494,  4580,  3767,  3768,  4839,  5575,  5569,  4789,  4764,
    1929,  1930,  1931,  1932,  5541,   913, -1809,  4670, -1809,  4979,
   -1809,  4830,  2913,  5374,  3657, -1809,  2045,   114,  4323,  2249,
    3582,  1033,  1034,  2924,  2248,  2909,  2910,  3515,  3630,  2006,
    2151,  5541,  1479,  3310,  2206,  2383,  3306,  3311,  1127,   951,
     116,  4955,  2006,  4241,  5080,  1654,  1481,  2006,   738,  2212,
     739,  5491,  5382,  4049,  2006,  4389,  4676,  4717,  4919,   914,
    4286,     0,     0,     0,     0,     0,     0,  -758,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1891,     0,     0,
       0,   946,     0,     0,   946,     0,  4242,  4243,  1892,     0,
    1893,  1025,   896,     0,     0,     0,   896,  5171,  5171,  1025,
       0,     0,   896,     0,     0,     0,     0,     0,     0,     0,
       0,  1933,     0,  1934,  1935,  1936,     0,     0,     0,     0,
    1895,  1896,  1937,     0,     0,     0,     0,     0,     0,  1906,
    1907,     0,     0,  1910,  1911,     0,     0,     0,     0,     0,
       0,     0,  1919,  1920,     0,  1921,  1922,     0,     0,     0,
    1946,     0,     0,     0,  1955,  1956,  1957,  1958,     0,  1960,
       0,     0,     0,  1343,     0,     0,  1344,  1968,  1969,     0,
    1972,  1973,     0,  5171,     0,     0,     0,  1977,     0,     0,
    1980,  1981,  1982,  1983,  1984,  1985,     0,  1987,  5171,     0,
    1990,  1991,     0,     0,     0,  1994,     0,     0,     0,  1997,
    2001,  2002,  5171,  1938,     0,     0,   946,     0,     0,     0,
       0,     0,  2009,  2010,  2011,     0,     0,     0,     0,     0,
    2017,  2018,  2019,  2020,  2021,     0,     0,     0,     0,     0,
       0,  2034,     0,     0,  5171,     0,     0,     0,     0,     0,
       0,  2043,   868,     0,     0,     0,  5171,  5171,     0,  2047,
       0,  2048,  2049,     0,     0,  5171,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1939,  1940,  5171,  1924,
    1925,  1926,  1927,  1928,     0,     0,     0,     0,  5171,     0,
       0,     0,     0,     0,     0,  5298,     0,     0,     0,     0,
       0,  3075,  2089,     0,  3075,  3075,     0,     0,     0,     0,
    5171,     0,  5171,     0,     0,     0,     0,  5312,     0,     0,
    5315,  5171,     0,     0,     0,     0,     0,     0,  5171,     0,
    5171,     0,  5171,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5172,     0,     0,  5170,     0,  5171,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5171,  5171,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5171,
    5171,     0,     0,     0,  5171,     0,  1929,  1930,  1931,  1932,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2223,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1941,     0,
       0,   896,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1346,  1942,  1943,     0,  2261,     0,
       0,     0,     0,  2267,     0,     0,     0,     0,  5416,  5172,
    5172,     0,  5170,  5170,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   896,     0,     0,     0,     0,     0,
       0,     0,     0,   896,   896,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1933,     0,  1934,
    1935,  1936,     0,     0,   896,   896,   953,   896,  1937,     0,
     896,   896,   896,   896,   896,     0,     0,   896,  2319,     0,
       0,     0,     0,     0,     0,     0,   896,     0,     0,     0,
       0,   896,     0,   896,     0,   896,   896,  2338,   896,   896,
       0,     0,     0,   896,   896,   896,     0,     0,     0,   896,
     896,   896,     0,   896,     0,   896,     0,   896,     0,   896,
       0,   896,     0,     0,  5172,  5172,   896,  5170,  5170,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   896,     0,     0,     0,     0,  1446,     0,  1938,
       0,     0,   896,     0,     0,  2403,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   896,     0,   896,     0,
     896,     0,     0,     0,   896,     0,   947,     0,     0,     0,
     896,   896,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5561,     0,     0,     0,     0,
    5172,     0,   947,  5170,     0,     0,     0,     0,     0,     0,
       0,     0,  1939,  1940,     0,  5172,     0,     0,  5170,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5172,
       0,     0,  5170,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1025,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5172,     0,   896,  5170,  1446,     0,     0,     0,     0,
       0,     0,     0,  5172,  5172,     0,  5170,  5170,     0,     0,
       0,     0,  5172,     0,     0,  5170,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5172,     0,     0,  5170,     0,
       0,     0,     0,     0,     0,  5172,     0,     0,  5170,     0,
       0,   946,   946,   946,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5172,     0,  5172,
    5170,     0,  5170,     0,     0,     0,     0,     0,  5172,  1025,
       0,  5170,     0,     0,     0,  5172,     0,  5172,  5170,  5172,
    5170,     0,  5170,     0,  1941,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5172,   896,     0,  5170,     0,
       0,  1942,  1943,  2622,     0,     0,   896,  2626,   896,  5172,
    5172,     0,  5170,  5170,     0,     0,     0,  2622,     0,     0,
       0,   947,     0,     0,     0,     0,  5172,  5172,     0,  5170,
    5170,  5172,     0,     0,  5170,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   896,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3711,  3712,     0,     0,     0,
       0,  3713,     0,  3714,     0,  3715,  3716,     0,     0,     0,
       0,  2698,  2700,  2702,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3717,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2743,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3718,  2751,     0,  3719,     0,     0,     0,
       0,     0,     0,     0,  3720,     0,  2755,     0,  2756,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3356,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3721,     0,     0,     0,     0,     0,   947,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3722,     0,
    3723,     0,     0,     0,     0,     0,     0,     0,   947,     0,
       0,     0,     0,     0,  1446,     0,  3724,  3725,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2176,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   947,  3726,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3727,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3728,     0,     0,     0,     0,     0,     0,     0,     0,  3729,
    3730,     0,  3731,     0,     0,     0,     0,     0,     0,  2921,
       0,     0,     0,  2261,     0,   946,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3732,  3733,
    3734,     0,     0,     0,     0,   896,     0,     0,     0,     0,
       0,     0,     0,   896,     0,     0,     0,  3735,  3736,  3737,
       0,     0,     0,     0,  3738,     0,     0,  3739,     0,     0,
       0,     0,     0,     0,     1,     0,     0,     2,     0,     0,
       0,     0,     0,     0,     0,  3740,  3741,     0,     0,     0,
     896,   896,     3,     0,     0,     0,     4,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       5,     6,     0,     0,     0,     0,   896,     0,     7,  3742,
    3743,     0,     0,     8,     9,     0,   896,     0,   896,     0,
     896,     0,     0,     0,     0,     0,  2387,  2387,  2387,    10,
       0,     0,     0,     0,     0,  3368,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    11,
       0,     0,     0,     0,   896,     0,     0,     0,     0,   896,
       0,   896,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    12,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    15,    16,     0,   896,  3744,     0,     0,
       0,  3745,     0,     0,     0,     0,    17,     0,     0,     0,
       0,     0,     0,  3746,     0,     0,     0,     0,     0,     0,
      18,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   896,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    20,     0,
      21,     0,     0,     0,     0,    22,     0,     0,    23,     0,
       0,     0,     0,  3747,     0,     0,  3748,   896,     0,  3749,
    3750,  3751,  3752,    24,     0,     0,     0,     0,     0,     0,
       0,    25,     0,     0,    26,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     896,     0,     0,     0,    27,     0,     0,     0,  3226,     0,
       0,     0,  3753,  3754,     0,     0,     0,     0,     0,     0,
       0,    28,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3755,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3340,     0,     0,     0,     0,     0,     0,     0,     0,
    3348,  3349,     0,     0,     0,     0,     0,     0,     0,     0,
     896,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3386,  3387,     0,  3388,     0,     0,  3391,  3392,  3393,
    3394,  3395,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3401,     0,     0,     0,     0,  3402,     0,
    3403,    30,  3404,  3405,     0,  3406,     0,     0,     0,     0,
    3411,  3412,  3413,     0,     0,     0,  3416,  3417,  3418,     0,
    3419,     0,  3421,     0,  3423,     0,  3425,     0,  3426,     0,
       0,     0,     0,  3429,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    32,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3453,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
      34,     0,    35,     0,     0,    36,     0,     0,     0,     0,
       0,  3464,     0,     0,     0,    37,    38,  2089,     0,     0,
       0,     0,     0,     0,     0,    39,     0,    40,  5486,     0,
       0,     0,     0,     0,     0,     0,    41,     0,     0,     0,
       0,     0,    42,     0,     0,     0,     0,     0,     0,     0,
      43,     0,     0,     0,     0,    44,    45,    46,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3075,  3075,    47,     0,
       0,     0,  1722,  1746,  1747,    48,     0,     0,     0,     0,
    3516,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    49,     0,     0,     0,   896,
       0,     0,     0,     0,  2832,     0,  2838,  -911,  -911,  1749,
       0,     0,     0,     0,     0,     0,     0,  -911,     0,    50,
       0,     0,     0,  1752,     0,     0,     0,     0,     0,  1753,
    1754,    51,   896,  1755,   896,    52,     0,   896,   896,     0,
     896,     0,     0,    53,     0,     0,     0,     0,     0,    54,
       0,   896,     0,     0,     0,     0,   896,  1757,     0,   896,
       0,     0,   896,   896,     0,     0,    55,     0,     0,     0,
       0,  1758,     0,     0,    56,  1759,     0,   947,     0,     0,
     947,     0,     0,  2319,   896,     0,     0,     0,     0,     0,
      57,    58,    59,    60,     0,     0,     0,     0,     0,   896,
       0,     0,     0,     0,  1764,    61,  2925,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   896,     0,     0,     0,     0,     0,
       0,  4500,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   896,    62,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2403,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   896,   896,
       0,  1768,    63,     0,     0,     0,     0,     0,  1769,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   947,     0,     0,     0,     0,     0,  1770,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     1,     0,     0,     2,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     4,     0,
       0,     0,    64,     0,     0,     0,     0,     0,     0,     0,
     896,     0,     5,     6,     0,     0,     0,  1772,     0,     0,
       7,     0,     0,     0,     0,     8,     9,     0,     0,     0,
       0,     0,     0,     0,  3065,  1773,     0,     0,  3076,     0,
       0,    10,     0,  3081,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    11,     0,     0,     0,     0,     0,     0,  3130,  3131,
    3132,  3133,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    12,     0,     0,     0,     0,     0,     0,
    1777,     0,     0,    13,    14,     0,     0,     0,     0,  1778,
    3167,     0,     0,     0,     0,    15,    16,     0,     0,     0,
       0,     0,     0,     0,     0,   896,   896,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3081,  3081,
       0,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1036,
    1037,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,    21,     0,     0,  1038,  1011,    22,  1783,     0,
      23,     0,     0,     0,     0,     0,  1039, -2073,     0,     0,
       0,     0,     0,  3075,  3075,    24,     0,     0,     0,     0,
       0,     0,     0,    25,     0,     0,    26,     0,     0,     0,
       0,  1040,     0,  1041,     0,     0,     0,     0,     0,     0,
       0,     0,  3919,  1042,     0,     0,    27,     0,     0,     0,
    3922,     0,     0,     0,  1784,  1785,  1786,  1787,     0,     0,
       0,     0,  1788,    28,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1789,
       0,     0,  1790,     0,     0,     0,     0,  3952,  3953,     0,
       0, -2065,  1043,     0,     0,     0,     0,  1044,     0,     0,
    1045,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1046,     0,     0,  3978,     0,     0,     0,     0,  1792,     0,
       0,     0,     0,  3989,     0,  3991,     0,  3993,     0,     0,
       0,     0,  1047,     0,  1048,     0,     0,     0,     0,     0,
       0,     0,     0,  1049,     0,  1050,     0,     0,   896,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    30,     0,     0,     0,     0,     0,     0,
       0,     0,   896,     0,   896,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,  2319,     0,     0,     0,    32,     0,     0,
       0,     0,     0,     0,     0,     0,  1051,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    33,
       0,     0,    34,     0,    35,     0,     0,    36,     0,     0,
    1795,     0,     0,     0,     0,     0,  4075,    37,    38,     0,
       0,     0,     0,     0,     0,     0,     0,    39,     0,    40,
    3517,     0,     0,     0,  1798,  1799,     0,     0,    41,     0,
       0,     0,     0,     0,    42,     0,     0,     0,     0,     0,
       0,     0,    43,   896,  2261,     0,     0,    44,    45,    46,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   947,   947,   947,
       0,     0,     0,     0,  1052,   896,     0,     0,     0,     0,
      47,     0,     0,     0,     0,     0,     0,    48,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1053,     0,     0,     0,     0,     0,    49,     0,     0,
       0,  2387,  1054,  1055,     0, -2069,  1056,  1057,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    50,     0,     0,     0,     0,     0,  1058,     0,     0,
       0,     0,     0,    51,     0,     0,     0,    52,   896,     0,
       0,   896,     0,     0,     0,    53,     0,  4180,     0,     0,
       0,    54,     0,     0,   896,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    55,     0,
       0,     0,     0,     0,     0,     0,    56,  1722,  1746,  1747,
       0,  1059,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3319,     0,     0,     0,     0,  1722,  1746,  1747,     0,
       0,     0,     0,     0,  3663,   896,   896,    61,   896,     0,
       0,     0,     0,   896,  1749,     0,  3673,     0,  3680,  3681,
    3682,  3683,     0,  3685,  3686,     0, -2813,     0,  1752,     0,
    1060,     0,     0,  1749,  1753,  1754,     0,     0,  1755,     0,
       0,     0,     0,     0,    62,     0, -2073,  1752,     0,  1061,
       0,     0,     0,  1753,  1754,     0,     0,  1755,     0,     0,
       0,     0,  1757,     0,     0,     0,     0,     0,     0, -2069,
       0,     0,     0,     0,     0,     0,  1758,     0,     0,     0,
    1759,  1757,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1758,     0,  3779,     0,  1759,
       0,     0,     0,     0,     0,     0,     0, -2813,     0,  1764,
    3785,     0,     0,     0,  1062,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  -606,     0,  1764,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   896,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    64,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4408,     0,     0,     0,
       0,     0,     0,   896,     0,     0,  1768,     0,     0,     0,
       0,     0,     0,  1769,     0,     0,     0,     0,     0,     0,
       0,  3320,     0,     0,     0,  1768,     0,     0,     0,  4422,
       0,  2403,  1769,  1770,  4427,  4428,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4435,   896,
       0,     0,  1770,  4437,  5167,     0,  4438,  1063,  1064,  4439,
    4440,     0,     0,     0,  5178,  3321,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4452,     0,     0,     0,     0,     0,     0,     0,   896,
       0,   947,  1772,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1065,     0,     0,     0,     0,     0,     0,
    1773,  1772,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4495,     0,     0,     0,     0,     0,     0,     0,  1773,
       0,     0,     0,     0,     0,     0,     0,     0,  2319,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3319,     0,     0,     0,   896,  1722,  1746,  1747,     0,     0,
    5167,  5167,     0,     0,     0,  1777,     0,     0,     0,     0,
       0,     0,     0,     0,  1778,  4540,  4543,     0,     0,     0,
       0,     0,     0,     0,  1777,     0,     0,     0,     0,     0,
    1105,     0,  1749,  1778,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   896,     0,  1752,     0,     0,     0,
       0,     0,  1753,  1754,     0,     0,  1755,   946,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1757,   896,     0,     0,     0,  3322,     0,     0,     0,     0,
       0,     0,     0,  1783,  1758,     0,     0,  4598,  1759,     0,
       0,   896,     0,   896,     0,     0,     0,     0,     0,     0,
       0,     0,  1783,   896,     0,  5167,  5167,     0,     0,     0,
       0,     0,    42,     0,     0,  -606,     0,  1764,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1784,
    1785,  1786,  1787,     0,     0,     0,     0,  1788,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1784,  1785,
    1786,  1787,     0,     0,  1789,     0,  1788,  1790,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   896,
       0,  5167,     0,  1789,     0,    49,  1790,     0,     0,     0,
    3320,     0,  4679,  4680,  1768,     0,  5167,   896,     0,     0,
       0,  1769,     0,  1792,     0,     0,     0,     0,     0,     0,
    5167,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1770,  1792,     0,     0,     0,     0,     0,     0,     0,
       0,   896,     0,     0,     0,  4135,     0,     0,     0,    54,
       0,   896,  5167,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5167,  5167,    55,     0,     0,     0,
       0,     0,     0,  5167,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4165,     0,  5167,     0,     0,     0,
    1772,     0,     0,   896,     0,     0,  5167,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1773,     0,
       0,   896,     0,     0,     0,     0,     0,     0,  5167,     0,
    5167,     0,     0,     0,     0,     0,     0,     0,     0,  5167,
       0,     0,     0,     0,     0,  1795,  5167,     0,  5167,     0,
    5167,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1795,     0,  5167,     0,     0,  1798,
    1799,     0,     0,  1777,     0,     0,     0,     0,     0,  1105,
    5167,  5167,  1778,     0,     0,     0,     0,   896,  1798,  1799,
       0,     0,     0,     0,     0,     0,     0,  5167,  5167,     0,
       0,     0,  5167,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2319,     0,     0,     0,     0,
       0,     0,     0,     0,  3322,     0,     0,   896,     0,     0,
       0,     0,     0,     0,  3075,     0,     0,     0,     0,  4800,
       0,  4802,     0,     0,     0,     0,     0,  2387,     0,     0,
       0,  1783,  3323,     0,  2387,  -606,  2387,     0,     0,     0,
       0,    42,     0,     0,  2387,  4338,     0,     0,     0,  2387,
    2387,     0,  2387,     0,  2387,     0,     0,  2387,  2387,  2387,
    2387,  2387,  2387,  2387,     0,  2387,  2387,  2387,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1784,  1785,  1786,
    1787,  4378,     0,     0,     0,  1788,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1789,     0,    49,  1790,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4874,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1792,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4882,     0,     0,     0,     0,     0,    54,     0,
       0,     0,     0,     0,     0,     0,     0,  1742,     0,     0,
       0,     0,  1743,     0,  1744,    55,     0,  1745,     0,     0,
       0,     0,     0,     0,     0,     0,  1722,  1746,  1747,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1748,     0,
       0,  -911,  -911,  1749,  1750,  2403,     0,     0,  4939,  1751,
       0,  -911,     0,     0,     0,     0,     0,  1752,     0,     0,
       0,  4540,     0,  1753,  1754,     0,     0,  1755,     0,     0,
       0,     0,     0,     0,     0,     0,  1756,     0,     0,     0,
       0,     0,     0,  1795,     0,     0,     0,     0,     0,     0,
       0,  1757,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1758,     0,  1798,  1799,  1759,
       0,     0,  4540,  4540,     0,  4540,     0,  1760,  1761,     0,
    4982,     0,     0,     0,  1762,  4550,  4551,     0,  4553,     0,
       0,     0,  1763,     0,     0,     0,     0,     0,  1764,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1765,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1766,     0,     0,     0,     0,     0,     0,     0,
       0,  1107,     0,     0,  -606,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1767,     0,  1768,     0,     0,     0,     0,
       0,     0,  1769,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1770,     0,  4631,     0,     0,     0,  2403,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1771,     0,     0,     0,     0,
       0,     0,     0,  1742,     0,     0,     0,     0,  1743,     0,
    1744,     0,     0,  1745,     0,     0,     0,     0,     0,     0,
       0,     0,  1722,  1746,  1747,     0,     0,     0,     0,     0,
       0,  1772,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1773,
       0,     0,     0,  1774,  1748,     0,     0,     0,     0,  1749,
    1750,     0,     0,     0,     0,  1751,  5137,     0,     0,     0,
       0,     0,     0,  1752,     0,     0,     0,     0,     0,  1753,
    1754,     0,     0,  1755,     0,     0,     0,     0,     0,     0,
       0,  1775,  1756,     0,     0,     0,     0,  1776,     0,     0,
       0,     0,     0,     0,  1777,     0,  5195,  1757,     0,     0,
       0,     0,     0,  1778,     0,  2387,  2387,  2387,  2387,     0,
       0,  1758,     0,     0,     0,  1759,     0,     0,     0,     0,
       0,     0,     0,  1760,  1761,     0,     0,     0,     0,     0,
    1762,     0,     0,     0,     0,  1779,     0,     0,  1763,     0,
       0,     0,     0,     0,  1764,     0,     0,     0,     0,     0,
    1780,  1781,  1782,     0,     0,  1765,     0,     0,     0,     0,
       0,  5244,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1766,     0,
       0,     0,  1783,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5276,     0,     0,     0,     0,     0,     0,     0,  1767,
       0,  1768,     0,     0,     0,     0,     0,     0,  1769,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1784,  1785,
    1786,  1787,     0,     0,     0,     0,  1788,     0,  1770,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1789,     0,     0,  1790,     0,  5325,     0,
    5326,  1771,     0,     0,     0,     0,     0,     0,     0,     0,
    5334,     0,     0,     0,     0,     0,  4820,     0,     0,  1791,
       0,     0,     0,     0,     0,     0,     0,     0,  4829,  4135,
       0,     0,  1792,     0,     0,     0,     0,  1772,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1773,     0,     0,     0,  1774,
       0,     0,     0,     0,     0,     0,  1793,     0,     0,  1794,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5401,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1775,     0,     0,
       0,     0,     0,  1776,  5406,     0,     0,     0,     0,     0,
    1777,     0,     0,     0,  3081,  3081,     0,     0,     0,  1778,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4889,  5429,     0,
       0,  1779,     0,     0,  1795,  1796,  1797,     0,     0,     0,
    2387,     0,     0,     0,     0,     0,  1780,  1781,  1782,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1798,  1799,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4926,
    5463,     0,     0,     0,     0,     0,     0,     0,  1783,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5478,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1784,  1785,  1786,  1787,     0,     0,
       0,     0,  1788,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5542,     0,     0,     0,     0,  1789,
       0,     0,  1790,  4984,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1791,     0,     0,     0,     0,
       0,     0,     0,     0,  5019,     0,     0,     0,  1792,     0,
       0,     0,     0,     0,  2319,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1793,     0,     0,  1794,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5056,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1795,  1796,  1797,     0,     0,     0,     0,  5101,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1798,  1799,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3081,  3081,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   244,   245,     0,
     743,   247,   248,   249,   250,  5229,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   744,     0,   254,   255,   256,
     257,   745,   259,     0,   260,     0,     0,   746,   261,   747,
     748,   749,   262,   750,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,   751,   752,   270,   271,
       0,   272,   273,   753,   754,   275,     0,   276,   277,   278,
     279,   755,   281,     0,   756,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,   757,   758,
     302,     0,     0,   947,   759,   303,   760,     0,   304,   761,
     762,     0,   305,   306,   307,   763,   764,   765,     0,     0,
       0,     0,   766,   310,   767,     0,     0,   768,   311,   312,
       0,   313,  5310,  5311,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   769,     0,   337,   338,   339,   340,   341,
     770,   771,   342,   343,     0,   344,   345,   346,   347,   348,
     772,     0,   349,   350,     0,     0,     0,   773,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   774,   357,   775,
       0,   359,     0,   360,     0,   776,     0,   361,   362,     0,
     363,   777,     0,   364,   365,     0,     0,     0,   778,   367,
     368,   369,   779,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,   780,   374,   375,   376,   781,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,   782,   387,   388,     0,     0,     0,     0,
       0,   783,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,   784,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
     785,   396,   397,   398,   399,   786,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   787,   407,     0,     0,
     788,   409,   789,   410,     0,   411,   790,   791,   792,   793,
     794,   416,   417,   418,   419,   420,     0,   795,   421,   422,
       0,     0,   423,   424,   425,   426,   427,   796,   797,   798,
     428,   429,     0,   799,   800,   430,  5492,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,   801,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     802,   803,   451,   804,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   805,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,   806,   807,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   808,     0,   809,   495,
     496,   497,   498,     0,   499,   810,   811,   501,   502,   503,
     504,     0,   812,   506,    42,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,   813,   814,   535,   536,     0,
       0,   537,   538,   815,   540,   541,   542,   816,   817,   543,
     544,   545,   546,   818,   547,   548,     0,    49,   549,   550,
     551,   552,     0,   819,   553,   554,     0,   820,   821,   822,
     823,     0,     0,     0,     0,     0,   559,   560,     0,   824,
     825,   826,   562,   563,     0,   827,   564,   565,   828,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   829,   574,     0,     0,   830,   831,   832,
     575,  1332,   576,     0,     0,   577,   834,     0,   835,   578,
       0,   579,   580,   836,   837,     0,     0,     0,    55,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   838,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,   839,   840,     0,   597,
     598,   599,   841,   600,   601,   602,     0,   603,   842,   843,
     604,   844,   605,     0,   845,   846,   847,   848,   849,   606,
     607,     0,   850,   608,   851,   609,   852,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,     0,   853,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   854,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   855,   702,     0,   703,     0,   704,     0,   705,
       0,     0,     0,     0,     0,     0,   856,   857,     0,     0,
       0,     0,   859,     0,   860,     0,     0,     0,   861,     0,
       0,     0,   862,   863,   244,   245,     0,   743,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   744,     0,   254,   255,   256,   257,   745,   259,
       0,   260,     0,     0,   746,   261,   747,   748,   749,   262,
     750,     0,   263,   264,   265,  1998,   266,     0,   267,   268,
       0,     0,   269,   751,   752,   270,   271,     0,   272,   273,
     753,   754,   275,     0,   276,   277,   278,   279,   755,   281,
       0,   756,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,   757,   758,   302,     0,     0,
       0,   759,   303,   760,     0,   304,   761,   762,     0,   305,
     306,   307,   763,   764,   765,     0,     0,     0,     0,   766,
     310,   767,     0,     0,   768,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     769,     0,   337,   338,   339,   340,   341,   770,   771,   342,
     343,     0,   344,   345,   346,   347,   348,   772,     0,   349,
     350,     0,     0,     0,   773,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   774,   357,   775,     0,   359,     0,
     360,     0,   776,     0,   361,   362,     0,   363,   777,     0,
     364,   365,     0,     0,     0,   778,   367,   368,   369,   779,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
     780,   374,   375,   376,   781,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,  1999,   386,     0,
     782,   387,   388,     0,     0,     0,     0,     0,   783,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,   784,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,   785,   396,   397,
     398,   399,   786,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   787,   407,     0,     0,   788,   409,   789,
     410,     0,   411,   790,   791,   792,   793,   794,   416,   417,
     418,   419,   420,     0,   795,   421,   422,     0,     0,   423,
     424,   425,   426,   427,   796,   797,   798,   428,   429,     0,
     799,   800,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,   801,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   802,   803,   451,
     804,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   805,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   806,   807,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   808,     0,   809,   495,   496,   497,   498,
       0,   499,   810,   811,   501,   502,   503,   504,     0,   812,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,   813,   814,   535,   536,     0,     0,   537,   538,
     815,   540,   541,   542,   816,   817,   543,   544,   545,   546,
     818,   547,   548,     0,     0,   549,   550,   551,   552,     0,
     819,   553,   554,     0,   820,   821,   822,   823,     0,     0,
       0,     0,  2000,   559,   560,     0,   824,   825,   826,   562,
     563,     0,   827,   564,   565,   828,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     829,   574,     0,     0,   830,   831,   832,   575,   833,   576,
       0,     0,   577,   834,     0,   835,   578,     0,   579,   580,
     836,   837,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   838,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,   839,   840,     0,   597,   598,   599,   841,
     600,   601,   602,     0,   603,   842,   843,   604,   844,   605,
       0,   845,   846,   847,   848,   849,   606,   607,     0,   850,
     608,   851,   609,   852,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,     0,   853,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   854,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   855,
     702,     0,   703,     0,   704,     0,   705,     0,     0,     0,
       0,     0,     0,   856,   857,     0,     0,     0,     0,   859,
       0,   860,     0,     0,     0,   861,     0,     0,     0,   862,
     863,   244,   245,     0,   743,   247,   248,   249,   250,  2255,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   744,
       0,   254,   255,   256,   257,   745,   259,     0,   260,     0,
       0,  2256,   261,   747,   748,   749,   262,   750,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
     751,   752,   270,   271,     0,   272,   273,   753,   754,   275,
       0,   276,   277,   278,   279,   755,   281,     0,   756,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,   757,   758,   302,     0,     0,     0,   759,   303,
     760,     0,   304,   761,   762,     0,   305,   306,   307,   763,
     764,   765,     0,     0,     0,     0,   766,   310,   767,     0,
       0,  2257,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   769,     0,   337,
     338,   339,   340,   341,   770,   771,   342,   343,     0,   344,
     345,   346,   347,   348,   772,     0,   349,   350,     0,     0,
       0,   773,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   774,   357,   775,     0,   359,     0,   360,     0,   776,
       0,   361,   362,     0,   363,   777,     0,   364,   365,     0,
       0,     0,   778,   367,   368,   369,   779,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,   780,   374,   375,
     376,   781,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,   782,   387,   388,
       0,     0,     0,     0,     0,   783,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,   784,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,   785,   396,   397,   398,   399,   786,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     787,   407,     0,     0,   788,   409,   789,   410,     0,   411,
     790,   791,   792,   793,   794,   416,   417,   418,   419,   420,
       0,   795,   421,   422,     0,     0,   423,   424,   425,   426,
     427,   796,   797,   798,   428,   429,     0,   799,   800,   430,
       0,   431,   432,  2258,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,   801,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   802,   803,   451,   804,   452,     0,
     453,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   805,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
     806,   807,   480,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     808,     0,   809,   495,   496,   497,   498,     0,   499,  2259,
     811,   501,   502,   503,   504,     0,   812,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,   512,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,   813,
     814,   535,   536,     0,     0,   537,   538,   815,   540,   541,
     542,   816,   817,   543,   544,   545,   546,   818,   547,   548,
       0,     0,   549,   550,   551,   552,     0,   819,   553,   554,
       0,   820,   821,   822,   823,     0,     0,     0,     0,     0,
     559,   560,     0,   824,   825,   826,   562,   563,     0,   827,
     564,   565,   828,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   829,   574,     0,
       0,   830,   831,   832,   575,   833,   576,     0,     0,   577,
     834,     0,   835,   578,     0,   579,   580,   836,   837,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   838,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
     839,   840,     0,   597,   598,   599,   841,   600,   601,   602,
       0,   603,   842,   843,   604,   844,   605,     0,   845,   846,
     847,   848,   849,   606,   607,     0,   850,   608,   851,   609,
     852,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,  2260,   620,     0,     0,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
       0,   853,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   854,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   855,   702,     0,   703,
       0,   704,     0,   705,     0,     0,     0,     0,     0,     0,
     856,   857,     0,     0,     0,     0,   859,     0,   860,     0,
       0,     0,   861,     0,     0,     0,   862,   863,   244,   245,
       0,   743,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   744,     0,   254,   255,
     256,   257,   745,   259,     0,   260,     0,     0,   746,   261,
     747,   748,   749,   262,   750,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,   751,   752,   270,
     271,     0,   272,   273,   753,   754,   275,     0,   276,   277,
     278,   279,   755,   281,     0,   756,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,   757,
     758,   302,     0,     0,     0,   759,   303,   760,     0,   304,
     761,   762,     0,   305,   306,   307,   763,   764,   765,     0,
       0,     0,     0,   766,   310,   767,     0,     0,   768,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   769,     0,   337,   338,   339,   340,
     341,   770,   771,   342,   343,     0,   344,   345,   346,   347,
     348,   772,     0,   349,   350,     0,     0,     0,   773,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   774,   357,
     775,     0,   359,     0,   360,     0,   776,     0,   361,   362,
       0,   363,   777,     0,   364,   365,     0,     0,     0,   778,
     367,   368,   369,   779,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,   780,   374,   375,   376,   781,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,   782,   387,   388,     0,     0,     0,
       0,     0,   783,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,   784,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,   785,   396,   397,   398,   399,   786,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   787,   407,     0,
       0,   788,   409,   789,   410,     0,   411,   790,   791,   792,
     793,   794,   416,   417,   418,   419,   420,     0,   795,   421,
     422,     0,     0,   423,   424,   425,   426,   427,   796,   797,
     798,   428,   429,     0,   799,   800,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,   801,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   802,   803,   451,   804,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   805,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   806,   807,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   808,     0,   809,
     495,   496,   497,   498,     0,   499,   810,   811,   501,   502,
     503,   504,     0,   812,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,   813,   814,   535,   536,
       0,     0,   537,   538,   815,   540,   541,   542,   816,   817,
     543,   544,   545,   546,   818,   547,   548,     0,     0,   549,
     550,   551,   552,     0,   819,   553,   554,     0,   820,   821,
     822,   823,     0,     0,     0,     0,     0,   559,   560,     0,
     824,   825,   826,   562,   563,     0,   827,   564,   565,   828,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   829,   574,     0,     0,   830,   831,
     832,   575,   833,   576,     0,     0,   577,   834,     0,   835,
     578,     0,   579,   580,   836,   837,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   838,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,   839,   840,     0,
     597,   598,   599,   841,   600,   601,   602,     0,   603,   842,
     843,   604,   844,   605,     0,   845,   846,   847,   848,   849,
     606,   607,     0,   850,   608,   851,   609,   852,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,   853,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   854,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   855,   702,     0,   703,     0,   704,     0,
     705,     0,     0,     0,     0,     0,     0,   856,   857,   858,
       0,     0,     0,   859,     0,   860,     0,     0,     0,   861,
       0,     0,     0,   862,   863,   244,   245,     0,   743,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   744,     0,   254,   255,   256,   257,   745,
     259,     0,   260,     0,     0,   746,   261,   747,   748,   749,
     262,   750,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,   751,   752,   270,   271,     0,   272,
     273,   753,   754,   275,     0,   276,   277,   278,   279,   755,
     281,     0,   756,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,   757,   758,   302,     0,
       0,     0,   759,   303,   760,     0,   304,   761,   762,     0,
     305,   306,   307,   763,   764,   765,     0,     0,     0,     0,
     766,   310,   767,     0,     0,   768,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   769,     0,   337,   338,   339,   340,   341,   770,   771,
     342,   343,     0,   344,   345,   346,   347,   348,   772,     0,
     349,   350,     0,     0,     0,   773,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   774,   357,   775,     0,   359,
       0,   360,     0,   776,     0,   361,   362,     0,   363,   777,
       0,   364,   365,     0,     0,     0,   778,   367,   368,   369,
     779,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,   780,   374,   375,   376,   781,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,   782,   387,   388,     0,     0,     0,     0,     0,   783,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     784,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,   785,   396,
     397,   398,   399,   786,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   787,   407,     0,     0,   788,   409,
     789,   410,     0,   411,   790,   791,   792,   793,   794,   416,
     417,   418,   419,   420,     0,   795,   421,   422,     0,     0,
     423,   424,   425,   426,   427,   796,   797,   798,   428,   429,
       0,   799,   800,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,   801,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   802,   803,
     451,   804,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   805,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,   806,   807,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   808,     0,   809,   495,   496,   497,
     498,     0,   499,   810,   811,   501,   502,   503,   504,     0,
     812,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,   813,   814,   535,   536,     0,     0,   537,
     538,   815,   540,   541,   542,   816,   817,   543,   544,   545,
     546,   818,   547,   548,     0,     0,   549,   550,   551,   552,
       0,   819,   553,   554,     0,   820,   821,   822,   823,     0,
       0,     0,     0,     0,   559,   560,     0,   824,   825,   826,
     562,   563,     0,   827,   564,   565,   828,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   829,   574,     0,     0,   830,   831,   832,   575,   833,
     576,     0,     0,   577,   834,     0,   835,   578,     0,   579,
     580,   836,   837,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   838,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,   839,   840,     0,   597,   598,   599,
     841,   600,   601,   602,     0,   603,   842,   843,   604,   844,
     605,     0,   845,   846,   847,   848,   849,   606,   607,     0,
     850,   608,   851,   609,   852,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,     0,   853,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   854,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     855,   702,     0,   703,     0,   704,     0,   705,     0,     0,
       0,     0,     0,     0,   856,   857,  2641,     0,     0,     0,
     859,     0,   860,     0,     0,     0,   861,     0,     0,     0,
     862,   863,   244,   245,     0,   743,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     744,     0,   254,   255,   256,   257,   745,   259,     0,   260,
       0,     0,   746,   261,   747,   748,   749,   262,   750,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,   751,   752,   270,   271,     0,   272,   273,   753,   754,
     275,     0,   276,   277,   278,   279,   755,   281,     0,   756,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,   757,   758,   302,     0,     0,     0,   759,
     303,   760,     0,   304,   761,   762,     0,   305,   306,   307,
     763,   764,   765,     0,     0,     0,     0,   766,   310,   767,
       0,     0,   768,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   769,     0,
     337,   338,   339,   340,   341,   770,   771,   342,   343,     0,
     344,   345,   346,   347,   348,   772,     0,   349,   350,     0,
       0,     0,   773,   352,  2697,   353,     0,     0,     0,   354,
       0,   355,   774,   357,   775,     0,   359,     0,   360,     0,
     776,     0,   361,   362,     0,   363,   777,     0,   364,   365,
       0,     0,     0,   778,   367,   368,   369,   779,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,   780,   374,
     375,   376,   781,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,   782,   387,
     388,     0,     0,     0,     0,     0,   783,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,   784,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,   785,   396,   397,   398,   399,
     786,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   787,   407,     0,     0,   788,   409,   789,   410,     0,
     411,   790,   791,   792,   793,   794,   416,   417,   418,   419,
     420,     0,   795,   421,   422,     0,     0,   423,   424,   425,
     426,   427,   796,   797,   798,   428,   429,     0,   799,   800,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,   801,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   802,   803,   451,   804,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   805,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   806,   807,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   808,     0,   809,   495,   496,   497,   498,     0,   499,
     810,   811,   501,   502,   503,   504,     0,   812,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
     813,   814,   535,   536,     0,     0,   537,   538,   815,   540,
     541,   542,   816,   817,   543,   544,   545,   546,   818,   547,
     548,     0,     0,   549,   550,   551,   552,     0,   819,   553,
     554,     0,   820,   821,   822,   823,     0,     0,     0,     0,
       0,   559,   560,     0,   824,   825,   826,   562,   563,     0,
     827,   564,   565,   828,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   829,   574,
       0,     0,   830,   831,   832,   575,   833,   576,     0,     0,
     577,   834,     0,   835,   578,     0,   579,   580,   836,   837,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   838,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,   839,   840,     0,   597,   598,   599,   841,   600,   601,
     602,     0,   603,   842,   843,   604,   844,   605,     0,   845,
     846,   847,   848,   849,   606,   607,     0,   850,   608,   851,
     609,   852,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,     0,   853,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     854,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   855,   702,     0,
     703,     0,   704,     0,   705,     0,     0,     0,     0,     0,
       0,   856,   857,     0,     0,     0,     0,   859,     0,   860,
       0,     0,     0,   861,     0,     0,     0,   862,   863,   244,
     245,     0,   743,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   744,     0,   254,
     255,   256,   257,   745,   259,     0,   260,     0,     0,   746,
     261,   747,   748,   749,   262,   750,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,   751,   752,
     270,   271,     0,   272,   273,   753,   754,   275,     0,   276,
     277,   278,   279,   755,   281,     0,   756,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
     757,   758,   302,     0,     0,     0,   759,   303,   760,     0,
     304,   761,   762,     0,   305,   306,   307,   763,   764,   765,
       0,     0,     0,     0,   766,   310,   767,     0,     0,   768,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   769,     0,   337,   338,   339,
     340,   341,   770,   771,   342,   343,     0,   344,   345,   346,
     347,   348,   772,     0,   349,   350,     0,     0,     0,   773,
     352,  2699,   353,     0,     0,     0,   354,     0,   355,   774,
     357,   775,     0,   359,     0,   360,     0,   776,     0,   361,
     362,     0,   363,   777,     0,   364,   365,     0,     0,     0,
     778,   367,   368,   369,   779,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,   780,   374,   375,   376,   781,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,   782,   387,   388,     0,     0,
       0,     0,     0,   783,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,   784,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,   785,   396,   397,   398,   399,   786,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   787,   407,
       0,     0,   788,   409,   789,   410,     0,   411,   790,   791,
     792,   793,   794,   416,   417,   418,   419,   420,     0,   795,
     421,   422,     0,     0,   423,   424,   425,   426,   427,   796,
     797,   798,   428,   429,     0,   799,   800,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
     801,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   802,   803,   451,   804,   452,     0,   453,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     805,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,   806,   807,
     480,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   808,     0,
     809,   495,   496,   497,   498,     0,   499,   810,   811,   501,
     502,   503,   504,     0,   812,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
     512,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,   813,   814,   535,
     536,     0,     0,   537,   538,   815,   540,   541,   542,   816,
     817,   543,   544,   545,   546,   818,   547,   548,     0,     0,
     549,   550,   551,   552,     0,   819,   553,   554,     0,   820,
     821,   822,   823,     0,     0,     0,     0,     0,   559,   560,
       0,   824,   825,   826,   562,   563,     0,   827,   564,   565,
     828,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   829,   574,     0,     0,   830,
     831,   832,   575,   833,   576,     0,     0,   577,   834,     0,
     835,   578,     0,   579,   580,   836,   837,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   838,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,   839,   840,
       0,   597,   598,   599,   841,   600,   601,   602,     0,   603,
     842,   843,   604,   844,   605,     0,   845,   846,   847,   848,
     849,   606,   607,     0,   850,   608,   851,   609,   852,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,     0,   853,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   854,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   855,   702,     0,   703,     0,   704,
       0,   705,     0,     0,     0,     0,     0,     0,   856,   857,
       0,     0,     0,     0,   859,     0,   860,     0,     0,     0,
     861,     0,     0,     0,   862,   863,   244,   245,     0,   743,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   744,     0,   254,   255,   256,   257,
     745,   259,     0,   260,     0,     0,   746,   261,   747,   748,
     749,   262,   750,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,   751,   752,   270,   271,     0,
     272,   273,   753,   754,   275,     0,   276,   277,   278,   279,
     755,   281,     0,   756,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,   757,   758,   302,
       0,     0,     0,   759,   303,   760,     0,   304,   761,   762,
       0,   305,   306,   307,   763,   764,   765,     0,     0,     0,
       0,   766,   310,   767,     0,     0,   768,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   769,     0,   337,   338,   339,   340,   341,   770,
     771,   342,   343,     0,   344,   345,   346,   347,   348,   772,
       0,   349,   350,     0,     0,     0,   773,   352,  2701,   353,
       0,     0,     0,   354,     0,   355,   774,   357,   775,     0,
     359,     0,   360,     0,   776,     0,   361,   362,     0,   363,
     777,     0,   364,   365,     0,     0,     0,   778,   367,   368,
     369,   779,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,   780,   374,   375,   376,   781,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,   782,   387,   388,     0,     0,     0,     0,     0,
     783,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,   784,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,   785,
     396,   397,   398,   399,   786,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   787,   407,     0,     0,   788,
     409,   789,   410,     0,   411,   790,   791,   792,   793,   794,
     416,   417,   418,   419,   420,     0,   795,   421,   422,     0,
       0,   423,   424,   425,   426,   427,   796,   797,   798,   428,
     429,     0,   799,   800,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,   801,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   802,
     803,   451,   804,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   805,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   806,   807,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   808,     0,   809,   495,   496,
     497,   498,     0,   499,   810,   811,   501,   502,   503,   504,
       0,   812,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,   813,   814,   535,   536,     0,     0,
     537,   538,   815,   540,   541,   542,   816,   817,   543,   544,
     545,   546,   818,   547,   548,     0,     0,   549,   550,   551,
     552,     0,   819,   553,   554,     0,   820,   821,   822,   823,
       0,     0,     0,     0,     0,   559,   560,     0,   824,   825,
     826,   562,   563,     0,   827,   564,   565,   828,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   829,   574,     0,     0,   830,   831,   832,   575,
     833,   576,     0,     0,   577,   834,     0,   835,   578,     0,
     579,   580,   836,   837,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     838,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,   839,   840,     0,   597,   598,
     599,   841,   600,   601,   602,     0,   603,   842,   843,   604,
     844,   605,     0,   845,   846,   847,   848,   849,   606,   607,
       0,   850,   608,   851,   609,   852,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,     0,   853,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   854,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   855,   702,     0,   703,     0,   704,     0,   705,     0,
       0,     0,     0,     0,     0,   856,   857,     0,     0,     0,
       0,   859,     0,   860,     0,     0,     0,   861,     0,     0,
       0,   862,   863,   244,   245,     0,   743,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   744,     0,   254,   255,   256,   257,   745,   259,     0,
     260,     0,     0,   746,   261,   747,   748,   749,   262,   750,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,   751,   752,   270,   271,     0,   272,   273,   753,
     754,   275,     0,   276,   277,   278,   279,   755,   281,     0,
     756,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,   757,   758,   302,     0,     0,     0,
     759,   303,   760,     0,   304,   761,   762,     0,   305,   306,
     307,   763,   764,   765,     0,     0,     0,     0,   766,   310,
     767,     0,     0,   768,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   769,
       0,   337,   338,   339,   340,   341,   770,   771,   342,   343,
       0,   344,   345,   346,   347,   348,   772,     0,   349,   350,
       0,     0,     0,   773,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   774,   357,   775,     0,   359,     0,   360,
       0,   776,     0,   361,   362,     0,   363,   777,     0,   364,
     365,     0,     0,     0,   778,   367,   368,   369,   779,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,   780,
     374,   375,   376,   781,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,   782,
     387,   388,     0,     0,     0,     0,     0,   783,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,   784,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,   785,   396,   397,   398,
     399,   786,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   787,   407,     0,     0,   788,   409,   789,   410,
       0,   411,   790,   791,   792,   793,   794,   416,   417,   418,
     419,   420,     0,   795,   421,   422,     0,     0,   423,   424,
     425,   426,   427,   796,   797,   798,   428,   429,     0,   799,
     800,   430,     0,   431,   432,  4494,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,   801,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   802,   803,   451,   804,
     452,     0,   453,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   805,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
     478,   479,   806,   807,   480,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   808,     0,   809,   495,   496,   497,   498,     0,
     499,   810,   811,   501,   502,   503,   504,     0,   812,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,   512,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,   813,   814,   535,   536,     0,     0,   537,   538,   815,
     540,   541,   542,   816,   817,   543,   544,   545,   546,   818,
     547,   548,     0,     0,   549,   550,   551,   552,     0,   819,
     553,   554,     0,   820,   821,   822,   823,     0,     0,     0,
       0,     0,   559,   560,     0,   824,   825,   826,   562,   563,
       0,   827,   564,   565,   828,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   829,
     574,     0,     0,   830,   831,   832,   575,   833,   576,     0,
       0,   577,   834,     0,   835,   578,     0,   579,   580,   836,
     837,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   838,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,   839,   840,     0,   597,   598,   599,   841,   600,
     601,   602,     0,   603,   842,   843,   604,   844,   605,     0,
     845,   846,   847,   848,   849,   606,   607,     0,   850,   608,
     851,   609,   852,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,   853,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   854,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   855,   702,
       0,   703,     0,   704,     0,   705,     0,     0,     0,     0,
       0,     0,   856,   857,     0,     0,     0,     0,   859,     0,
     860,     0,     0,     0,   861,     0,     0,     0,   862,   863,
     244,   245,     0,   743,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   744,     0,
     254,   255,   256,   257,   745,   259,     0,   260,     0,     0,
     746,   261,   747,   748,   749,   262,   750,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,   751,
     752,   270,   271,     0,   272,   273,   753,   754,   275,     0,
     276,   277,   278,   279,   755,   281,     0,   756,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,   757,   758,   302,     0,     0,  4538,   759,   303,   760,
       0,   304,   761,   762,     0,   305,   306,   307,   763,   764,
     765,     0,     0,     0,     0,   766,   310,   767,     0,     0,
     768,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   769,     0,   337,   338,
     339,   340,   341,   770,   771,   342,   343,     0,   344,   345,
     346,   347,   348,   772,     0,   349,   350,     0,     0,     0,
     773,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     774,   357,   775,     0,   359,     0,   360,     0,   776,     0,
     361,   362,     0,   363,   777,     0,   364,   365,     0,     0,
       0,   778,   367,   368,   369,   779,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,   780,   374,   375,   376,
     781,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,   782,   387,   388,     0,
       0,     0,     0,     0,   783,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,   784,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,   785,   396,   397,   398,   399,   786,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   787,
     407,     0,     0,   788,   409,   789,   410,     0,   411,   790,
     791,   792,   793,   794,   416,   417,   418,   419,   420,     0,
     795,   421,   422,     0,     0,   423,   424,   425,   426,   427,
     796,   797,   798,   428,   429,     0,   799,   800,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,   801,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   802,   803,   451,   804,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   805,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   806,
     807,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   808,
       0,   809,   495,  4539,   497,   498,     0,   499,   810,   811,
     501,   502,   503,   504,     0,   812,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,   813,   814,
     535,   536,     0,     0,   537,   538,   815,   540,   541,   542,
     816,   817,   543,   544,   545,   546,   818,   547,   548,     0,
       0,   549,   550,   551,   552,     0,   819,   553,   554,     0,
     820,   821,   822,   823,     0,     0,     0,     0,     0,   559,
     560,     0,   824,   825,   826,   562,   563,     0,   827,   564,
     565,   828,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   829,   574,     0,     0,
     830,   831,   832,   575,   833,   576,     0,     0,   577,   834,
       0,   835,   578,     0,   579,   580,   836,   837,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   838,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,   839,
     840,     0,   597,   598,   599,   841,   600,   601,   602,     0,
     603,   842,   843,   604,   844,   605,     0,   845,   846,   847,
     848,   849,   606,   607,     0,   850,   608,   851,   609,   852,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,     0,
     853,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   854,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   855,   702,     0,   703,     0,
     704,     0,   705,     0,     0,     0,     0,     0,     0,   856,
     857,     0,     0,     0,     0,   859,     0,   860,     0,     0,
       0,   861,     0,     0,     0,   862,   863,   244,   245,     0,
     743,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   744,     0,   254,   255,   256,
     257,   745,   259,     0,   260,     0,     0,   746,   261,   747,
     748,   749,   262,   750,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,   751,   752,   270,   271,
       0,   272,   273,   753,   754,   275,     0,   276,   277,   278,
     279,   755,   281,     0,   756,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,   757,   758,
     302,     0,     0,     0,   759,   303,   760,     0,   304,   761,
     762,     0,   305,   306,   307,   763,   764,   765,     0,     0,
       0,     0,   766,   310,   767,     0,     0,   768,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   769,     0,   337,   338,   339,   340,   341,
     770,   771,   342,   343,     0,   344,   345,   346,   347,   348,
     772,     0,   349,   350,     0,     0,     0,   773,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   774,   357,   775,
       0,   359,     0,   360,     0,   776,     0,   361,   362,     0,
     363,   777,     0,   364,   365,     0,     0,     0,   778,   367,
     368,   369,   779,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,   780,   374,   375,   376,   781,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,   782,   387,   388,     0,     0,     0,     0,
       0,   783,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,   784,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
     785,   396,   397,   398,   399,   786,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   787,   407,     0,     0,
     788,   409,   789,   410,     0,   411,   790,   791,   792,   793,
     794,   416,   417,   418,   419,   420,     0,   795,   421,   422,
       0,     0,   423,   424,   425,   426,   427,   796,   797,   798,
     428,   429,     0,   799,   800,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,   801,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     802,   803,   451,   804,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   805,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,   806,   807,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   808,     0,   809,   495,
     496,   497,   498,     0,   499,   810,   811,   501,   502,   503,
     504,     0,   812,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,   813,   814,   535,   536,     0,
       0,   537,   538,   815,   540,   541,   542,   816,   817,   543,
     544,   545,   546,   818,   547,   548,     0,     0,   549,   550,
     551,   552,     0,   819,   553,   554,     0,   820,   821,   822,
     823,     0,     0,     0,     0,     0,   559,   560,     0,   824,
     825,   826,   562,   563,     0,   827,   564,   565,   828,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   829,   574,     0,     0,   830,   831,   832,
     575,   833,   576,     0,     0,   577,   834,     0,   835,   578,
       0,   579,   580,   836,   837,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   838,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,   839,   840,     0,   597,
     598,   599,   841,   600,   601,   602,     0,   603,   842,   843,
     604,   844,   605,     0,   845,   846,   847,   848,   849,   606,
     607,     0,   850,   608,   851,   609,   852,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,     0,   853,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   854,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   855,   702,     0,   703,     0,   704,     0,   705,
       0,     0,     0,     0,     0,     0,   856,   857,     0,     0,
       0,     0,   859,     0,   860,     0,     0,     0,   861,     0,
       0,     0,   862,   863,   244,   245,     0,   743,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   744,     0,   254,   255,   256,   257,   745,   259,
       0,   260,     0,     0,   746,   261,   747,   748,   749,   262,
     750,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,   751,   752,   270,   271,     0,   272,   273,
     753,   754,   275,     0,   276,   277,   278,   279,   755,   281,
       0,   756,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,   757,   758,   302,     0,     0,
       0,   759,   303,   760,     0,   304,   761,   762,     0,   305,
     306,   307,   763,   764,   765,     0,     0,     0,     0,   766,
     310,   767,     0,     0,   768,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     769,     0,   337,   338,   339,   340,   341,   770,   771,   342,
     343,     0,   344,   345,   346,   347,   348,   772,     0,   349,
     350,     0,     0,     0,   773,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   774,   357,   775,     0,   359,     0,
     360,     0,   776,     0,   361,   362,     0,   363,   777,     0,
     364,   365,     0,     0,     0,   778,   367,   368,   369,   779,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
     780,   374,   375,   376,   781,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
     782,   387,   388,     0,     0,     0,     0,     0,   783,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,   784,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,   785,   396,   397,
     398,   399,   786,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   787,   407,     0,     0,   788,   409,   789,
     410,     0,   411,   790,   791,   792,   793,   794,   416,   417,
     418,   419,   420,     0,   795,   421,   422,     0,     0,   423,
     424,   425,   426,   427,   796,   797,   798,   428,   429,     0,
     799,   800,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,   801,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   802,   803,   451,
     804,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   805,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   806,   807,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   808,     0,   809,   495,   496,   497,   498,
       0,   499,   810,   811,   501,   502,   503,   504,     0,   812,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,   813,   814,   535,   536,     0,     0,   537,   538,
     815,   540,   541,   542,   816,   817,   543,   544,   545,   546,
     818,   547,   548,     0,     0,   549,   550,   551,   552,     0,
     819,   553,   554,     0,   820,   821,   822,   823,     0,     0,
       0,     0,     0,   559,   560,     0,   824,   825,   826,   562,
     563,     0,   827,   564,   565,   828,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     829,   574,     0,     0,   830,   831,   832,   575,   833,   576,
       0,     0,   577,   834,     0,   835,   578,     0,   579,   580,
     836,   837,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   838,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,   839,   840,     0,   597,   598,   599,   841,
     600,   601,   602,     0,   603,   842,   843,   604,   844,   605,
       0,   845,   846,   847,   848,   849,   606,   607,     0,   850,
     608,   851,   609,   852,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,     0,   853,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   854,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   855,
     702,     0,   703,     0,   704,     0,   705,     0,     0,     0,
       0,     0,     0,   856,   857,     0,     0,     0,     0,   859,
       0,  1254,     0,     0,     0,   861,     0,     0,     0,   862,
     863,   244,   245,     0,   743,   247,   248,   249,   250,  2055,
       0,   251,     0,     0,     0,     0,  2056,     0,     0,   744,
       0,   254,   255,   256,   257,   745,   259,     0,   260,     0,
       0,   746,   261,   747,   748,   749,   262,   750,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
     751,   752,   270,   271,     0,   272,   273,   753,   754,   275,
       0,   276,   277,   278,   279,   755,   281,     0,   756,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,   757,   758,   302,     0,     0,     0,   759,   303,
     760,     0,   304,   761,   762,     0,   305,   306,   307,   763,
     764,   765,     0,     0,     0,     0,   766,   310,   767,     0,
       0,   768,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   769,     0,   337,
     338,   339,   340,   341,   770,   771,   342,   343,     0,   344,
     345,   346,   347,   348,   772,     0,   349,   350,     0,     0,
       0,   773,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   774,   357,   775,     0,   359,     0,   360,     0,   776,
       0,   361,   362,     0,   363,   777,     0,   364,   365,     0,
       0,     0,   778,   367,   368,   369,   779,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,   780,   374,   375,
     376,   781,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,   782,   387,   388,
       0,     0,     0,     0,     0,   783,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,   784,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,   785,   396,   397,   398,   399,   786,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     787,   407,     0,     0,   788,   409,   789,   410,     0,   411,
     790,   791,   792,   793,   794,   416,   417,   418,   419,   420,
       0,   795,   421,   422,     0,     0,   423,   424,   425,   426,
     427,   796,     0,   798,   428,   429,     0,   799,   800,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,   801,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   802,   803,   451,   804,   452,     0,
     453,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   805,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
     806,   807,   480,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     808,     0,   809,   495,   496,   497,   498,     0,   499,   810,
     811,   501,   502,   503,   504,     0,   812,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,   512,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,   813,
     814,   535,   536,     0,     0,   537,   538,   815,   540,   541,
     542,   816,   817,   543,   544,   545,   546,   818,   547,   548,
       0,     0,   549,   550,   551,   552,     0,   819,   553,   554,
       0,   820,   821,   822,   823,     0,     0,     0,     0,     0,
     559,   560,     0,   824,   825,   826,   562,   563,     0,   827,
     564,   565,   828,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   829,   574,     0,
       0,   830,   831,   832,   575,   833,   576,     0,     0,   577,
     834,     0,   835,   578,     0,   579,   580,   836,   837,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   838,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
     839,   840,     0,   597,   598,   599,   841,   600,   601,   602,
       0,   603,   842,   843,   604,   844,   605,     0,   845,   846,
     847,   848,   849,   606,   607,     0,   850,   608,   851,   609,
     852,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
       0,   853,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   854,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   855,   702,     0,   703,
       0,   704,     0,   705,     0,     0,     0,     0,     0,     0,
     856,   857,     0,     0,     0,     0,   859,     0,   860,     0,
       0,     0,   861,     0,     0,     0,   862,   863,   244,   245,
       0,   743,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   744,     0,   254,   255,
     256,   257,   745,   259,     0,   260,     0,     0,   746,   261,
     747,   748,   749,   262,   750,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,   751,   752,   270,
     271,     0,   272,   273,   753,   754,   275,     0,   276,   277,
     278,   279,   755,   281,     0,   756,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,   757,
     758,   302,     0,     0,     0,   759,   303,   760,     0,   304,
     761,   762,     0,   305,   306,   307,   763,   764,   765,     0,
       0,     0,     0,   766,   310,   767,     0,     0,  2318,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   769,     0,   337,   338,   339,   340,
     341,   770,   771,   342,   343,     0,   344,   345,   346,   347,
     348,   772,     0,   349,   350,     0,     0,     0,   773,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   774,   357,
     775,     0,   359,     0,   360,     0,   776,     0,   361,   362,
       0,   363,   777,     0,   364,   365,     0,     0,     0,   778,
     367,   368,   369,   779,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,   780,   374,   375,   376,   781,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,   782,   387,   388,     0,     0,     0,
       0,     0,   783,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,   784,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,   785,   396,   397,   398,   399,   786,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   787,   407,     0,
       0,   788,   409,   789,   410,     0,   411,   790,   791,   792,
     793,   794,   416,   417,   418,   419,   420,     0,   795,   421,
     422,     0,     0,   423,   424,   425,   426,   427,   796,   797,
     798,   428,   429,     0,   799,   800,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,   801,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   802,   803,   451,   804,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   805,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   806,   807,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   808,     0,   809,
     495,   496,   497,   498,     0,   499,   810,   811,   501,   502,
     503,   504,     0,   812,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,   813,   814,   535,   536,
       0,     0,   537,   538,   815,   540,   541,   542,   816,   817,
     543,   544,   545,   546,   818,   547,   548,     0,     0,   549,
     550,   551,   552,     0,   819,   553,   554,     0,   820,   821,
     822,   823,     0,     0,     0,     0,     0,   559,   560,     0,
     824,   825,   826,   562,   563,     0,   827,   564,   565,   828,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   829,   574,     0,     0,   830,   831,
     832,   575,   833,   576,     0,     0,   577,   834,     0,   835,
     578,     0,   579,   580,   836,   837,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   838,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,   839,   840,     0,
     597,   598,   599,   841,   600,   601,   602,     0,   603,   842,
     843,   604,   844,   605,     0,   845,   846,   847,   848,   849,
     606,   607,     0,   850,   608,   851,   609,   852,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,   853,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   854,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   855,   702,     0,   703,     0,   704,     0,
     705,     0,     0,     0,     0,     0,     0,   856,   857,     0,
       0,     0,     0,   859,     0,   860,     0,     0,     0,   861,
       0,     0,     0,   862,   863,   244,   245,     0,   743,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   744,     0,   254,   255,   256,   257,   745,
     259,     0,   260,     0,     0,   746,   261,   747,   748,   749,
     262,   750,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,   751,   752,   270,   271,     0,   272,
     273,   753,   754,   275,     0,   276,   277,   278,   279,   755,
     281,     0,   756,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,   757,   758,   302,     0,
       0,     0,   759,   303,   760,     0,   304,   761,   762,     0,
     305,   306,   307,   763,   764,   765,     0,     0,     0,     0,
     766,   310,   767,     0,     0,   768,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   769,     0,   337,   338,   339,   340,   341,   770,   771,
     342,   343,     0,   344,   345,   346,   347,   348,   772,     0,
     349,   350,     0,     0,     0,   773,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   774,   357,   775,     0,   359,
       0,   360,     0,   776,     0,   361,   362,     0,   363,   777,
       0,   364,   365,     0,     0,     0,   778,   367,   368,   369,
     779,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,   780,   374,   375,   376,  3339,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,   782,   387,   388,     0,     0,     0,     0,     0,   783,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     784,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,   785,   396,
     397,   398,   399,   786,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   787,   407,     0,     0,   788,   409,
     789,   410,     0,   411,   790,   791,   792,   793,   794,   416,
     417,   418,   419,   420,     0,   795,   421,   422,     0,     0,
     423,   424,   425,   426,   427,   796,   797,   798,   428,   429,
       0,   799,   800,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,   801,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   802,   803,
     451,   804,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   805,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,   806,   807,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   808,     0,   809,   495,   496,   497,
     498,     0,   499,   810,   811,   501,   502,   503,   504,     0,
     812,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,   813,   814,   535,   536,     0,     0,   537,
     538,   815,   540,   541,   542,   816,   817,   543,   544,   545,
     546,   818,   547,   548,     0,     0,   549,   550,   551,   552,
       0,   819,   553,   554,     0,   820,   821,   822,   823,     0,
       0,     0,     0,     0,   559,   560,     0,   824,   825,   826,
     562,   563,     0,   827,   564,   565,   828,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   829,   574,     0,     0,   830,   831,   832,   575,   833,
     576,     0,     0,   577,   834,     0,   835,   578,     0,   579,
     580,   836,   837,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   838,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,   839,   840,     0,   597,   598,   599,
     841,   600,   601,   602,     0,   603,   842,   843,   604,   844,
     605,     0,   845,   846,   847,   848,   849,   606,   607,     0,
     850,   608,   851,   609,   852,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,     0,   853,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   854,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     855,   702,     0,   703,     0,   704,     0,   705,     0,     0,
       0,     0,     0,     0,   856,   857,     0,     0,     0,     0,
     859,     0,   860,     0,     0,     0,   861,     0,     0,     0,
     862,   863,   244,   245,     0,   743,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     744,     0,   254,   255,   256,   257,   745,   259,     0,   260,
       0,     0,   746,   261,   747,   748,   749,   262,   750,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,   751,   752,   270,   271,     0,   272,   273,   753,   754,
     275,     0,   276,   277,   278,   279,   755,   281,     0,   756,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,   757,   758,   302,     0,     0,     0,   759,
     303,   760,     0,   304,   761,   762,     0,   305,   306,   307,
     763,   764,   765,     0,     0,     0,     0,   766,   310,   767,
       0,     0,   768,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   769,     0,
     337,   338,   339,   340,   341,   770,   771,   342,   343,     0,
     344,   345,   346,   347,   348,   772,     0,   349,   350,     0,
       0,     0,   773,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   774,   357,   775,     0,   359,     0,   360,     0,
     776,     0,   361,   362,     0,   363,   777,     0,   364,   365,
       0,     0,     0,   778,   367,   368,   369,   779,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,   780,   374,
     375,   376,  3410,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,   782,   387,
     388,     0,     0,     0,     0,     0,   783,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,   784,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,   785,   396,   397,   398,   399,
     786,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   787,   407,     0,     0,   788,   409,   789,   410,     0,
     411,   790,   791,   792,   793,   794,   416,   417,   418,   419,
     420,     0,   795,   421,   422,     0,     0,   423,   424,   425,
     426,   427,   796,   797,   798,   428,   429,     0,   799,   800,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,   801,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   802,   803,   451,   804,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   805,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   806,   807,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   808,     0,   809,   495,   496,   497,   498,     0,   499,
     810,   811,   501,   502,   503,   504,     0,   812,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
     813,   814,   535,   536,     0,     0,   537,   538,   815,   540,
     541,   542,   816,   817,   543,   544,   545,   546,   818,   547,
     548,     0,     0,   549,   550,   551,   552,     0,   819,   553,
     554,     0,   820,   821,   822,   823,     0,     0,     0,     0,
       0,   559,   560,     0,   824,   825,   826,   562,   563,     0,
     827,   564,   565,   828,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   829,   574,
       0,     0,   830,   831,   832,   575,   833,   576,     0,     0,
     577,   834,     0,   835,   578,     0,   579,   580,   836,   837,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   838,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,   839,   840,     0,   597,   598,   599,   841,   600,   601,
     602,     0,   603,   842,   843,   604,   844,   605,     0,   845,
     846,   847,   848,   849,   606,   607,     0,   850,   608,   851,
     609,   852,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,     0,   853,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     854,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   855,   702,     0,
     703,     0,   704,     0,   705,     0,     0,     0,     0,     0,
       0,   856,   857,     0,     0,     0,     0,   859,     0,   860,
       0,     0,     0,   861,     0,     0,     0,   862,   863,   244,
     245,     0,   743,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   744,     0,   254,
     255,   256,   257,   745,   259,     0,   260,     0,     0,   746,
     261,   747,   748,   749,   262,   750,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,   751,   752,
     270,   271,     0,   272,   273,   753,   754,   275,     0,   276,
     277,   278,   279,   755,   281,     0,   756,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
     757,   758,   302,     0,     0,     0,   759,   303,   760,     0,
     304,   761,   762,     0,   305,   306,   307,   763,   764,   765,
       0,     0,     0,     0,   766,   310,   767,     0,     0,   768,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   769,     0,   337,   338,   339,
     340,   341,   770,   771,   342,   343,     0,   344,   345,   346,
     347,   348,   772,     0,   349,   350,     0,     0,     0,   773,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   774,
     357,   775,     0,   359,     0,   360,     0,   776,     0,   361,
     362,     0,   363,   777,     0,   364,   365,     0,     0,     0,
     778,   367,   368,   369,   779,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,   780,   374,   375,   376,   781,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,   782,   387,   388,     0,     0,
       0,     0,     0,   783,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,   784,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,   785,   396,   397,   398,   399,   786,   400,   401,
    5306,     0,     0,     0,   402,   403,   404,   405,   787,   407,
       0,     0,   788,   409,   789,   410,     0,   411,   790,   791,
     792,   793,   794,   416,   417,   418,   419,   420,     0,   795,
     421,   422,     0,     0,   423,   424,   425,   426,   427,   796,
       0,   798,   428,   429,     0,   799,   800,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
     801,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   802,   803,   451,   804,   452,     0,   453,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     805,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,   806,   807,
     480,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   808,     0,
     809,   495,   496,   497,   498,     0,   499,   810,   811,   501,
     502,   503,   504,     0,   812,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
     512,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,   813,   814,   535,
     536,     0,     0,   537,   538,   815,   540,   541,   542,   816,
     817,   543,   544,   545,   546,   818,   547,   548,     0,     0,
     549,   550,   551,   552,     0,   819,   553,   554,     0,   820,
     821,   822,   823,     0,     0,     0,     0,     0,   559,   560,
       0,   824,   825,   826,   562,   563,     0,   827,   564,   565,
     828,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   829,   574,     0,     0,   830,
     831,   832,   575,   833,   576,     0,     0,   577,   834,     0,
     835,   578,     0,   579,   580,   836,   837,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   838,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,   839,   840,
       0,   597,   598,   599,   841,   600,   601,   602,     0,   603,
     842,   843,   604,   844,   605,     0,   845,   846,   847,   848,
     849,   606,   607,     0,   850,   608,   851,   609,   852,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,     0,   853,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   854,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   855,   702,     0,   703,     0,   704,
       0,   705,     0,     0,     0,     0,     0,     0,   856,   857,
       0,     0,     0,     0,   859,     0,   860,     0,     0,     0,
     861,     0,     0,     0,   862,   863,   244,   245,     0,   743,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   744,     0,   254,   255,   256,   257,
     745,   259,     0,   260,     0,     0,   746,   261,   747,   748,
     749,   262,   750,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,   751,   752,   270,   271,     0,
     272,   273,   753,   754,   275,     0,   276,   277,   278,   279,
     755,   281,     0,   756,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,   757,   758,   302,
       0,     0,     0,   759,   303,   760,     0,   304,   761,   762,
       0,   305,   306,   307,   763,   764,   765,     0,     0,     0,
       0,   766,   310,   767,     0,     0,   768,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   769,     0,   337,   338,   339,   340,   341,   770,
     771,   342,   343,     0,   344,   345,   346,   347,   348,   772,
       0,   349,   350,     0,     0,     0,   773,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   774,   357,   775,     0,
     359,     0,   360,     0,   776,     0,   361,   362,     0,   363,
     777,     0,   364,   365,     0,     0,     0,   778,   367,   368,
     369,   779,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,   780,   374,   375,   376,   781,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,   782,   387,   388,     0,     0,     0,     0,     0,
     783,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,   784,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,   785,
     396,   397,   398,   399,   786,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   787,   407,     0,     0,   788,
     409,   789,   410,     0,   411,   790,   791,   792,   793,   794,
     416,   417,   418,   419,   420,     0,   795,   421,   422,     0,
       0,   423,   424,   425,   426,   427,   796,     0,   798,   428,
     429,     0,   799,   800,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,   801,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   802,
     803,   451,   804,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   805,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   806,   807,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   808,     0,   809,   495,   496,
     497,   498,     0,   499,   810,   811,   501,   502,   503,   504,
       0,   812,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,   813,   814,   535,   536,     0,     0,
     537,   538,   815,   540,   541,   542,   816,   817,   543,   544,
     545,   546,   818,   547,   548,     0,     0,   549,   550,   551,
     552,     0,   819,   553,   554,     0,   820,   821,   822,   823,
       0,     0,     0,     0,     0,   559,   560,     0,   824,   825,
     826,   562,   563,     0,   827,   564,   565,   828,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   829,   574,     0,     0,   830,   831,   832,   575,
     833,   576,     0,     0,   577,   834,     0,   835,   578,     0,
     579,   580,   836,   837,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     838,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,   839,   840,     0,   597,   598,
     599,   841,   600,   601,   602,     0,   603,   842,   843,   604,
     844,   605,     0,   845,   846,   847,   848,   849,   606,   607,
       0,   850,   608,   851,   609,   852,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,     0,   853,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   854,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   855,   702,     0,   703,     0,   704,     0,   705,     0,
       0,     0,     0,     0,     0,   856,   857,     0,     0,     0,
       0,   859,     0,   860,     0,     0,     0,   861,     0,     0,
       0,   862,   863,   244,   245,     0,   743,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   744,     0,   254,   255,   256,   257,   745,   259,     0,
     260,     0,     0,   746,   261,   747,   748,   749,   262,   750,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,   751,   752,   270,   271,     0,   272,   273,   753,
     754,   275,     0,   276,   277,   278,   279,   755,   281,     0,
     756,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,   757,   758,   302,     0,     0,     0,
     759,   303,   760,     0,   304,   761,   762,     0,   305,   306,
     307,   763,   764,   765,     0,     0,     0,     0,   766,   310,
     767,     0,     0,   768,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   769,
       0,   337,   338,   339,   340,   341,   770,   771,   342,   343,
       0,   344,   345,   346,   347,   348,   772,     0,   349,   350,
       0,     0,     0,   773,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   774,   357,   775,     0,   359,     0,   360,
       0,   776,     0,   361,   362,     0,   363,   777,     0,   364,
     365,     0,     0,     0,   778,   367,   368,   369,   779,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,   780,
     374,   375,   376,  2073,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,   782,
     387,   388,     0,     0,     0,     0,     0,   783,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,   784,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,   785,   396,   397,   398,
     399,   786,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   787,   407,     0,     0,   788,   409,   789,   410,
       0,   411,   790,   791,   792,   793,   794,   416,   417,   418,
     419,   420,     0,   795,   421,   422,     0,     0,   423,   424,
     425,   426,   427,   796,     0,   798,   428,   429,     0,   799,
     800,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,   801,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   802,   803,   451,   804,
     452,     0,   453,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   805,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
     478,   479,   806,   807,   480,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   808,     0,   809,   495,   496,   497,   498,     0,
     499,   810,   811,   501,   502,   503,   504,     0,   812,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,   512,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,   813,   814,   535,   536,     0,     0,   537,   538,   815,
     540,   541,   542,   816,   817,   543,   544,   545,   546,   818,
     547,   548,     0,     0,   549,   550,   551,   552,     0,   819,
     553,   554,     0,   820,   821,   822,   823,     0,     0,     0,
       0,     0,   559,   560,     0,   824,   825,   826,   562,   563,
       0,   827,   564,   565,   828,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   829,
     574,     0,     0,   830,   831,   832,   575,   833,   576,     0,
       0,   577,   834,     0,   835,   578,     0,   579,   580,   836,
     837,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   838,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,   839,   840,     0,   597,   598,   599,   841,   600,
     601,   602,     0,   603,   842,   843,   604,   844,   605,     0,
     845,   846,   847,   848,   849,   606,   607,     0,   850,   608,
     851,   609,   852,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,   853,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   854,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   855,   702,
       0,   703,     0,   704,     0,   705,     0,     0,     0,     0,
       0,     0,   856,   857,     0,     0,     0,     0,   859,     0,
     860,     0,     0,     0,   861,     0,     0,     0,   862,   863,
     244,   245,     0,   743,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   744,     0,
     254,   255,   256,   257,   745,   259,     0,   260,     0,     0,
     746,   261,   747,   748,   749,   262,   750,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,   751,
     752,   270,   271,     0,   272,   273,   753,   754,   275,     0,
     276,   277,   278,   279,   755,   281,     0,   756,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,   757,   758,   302,     0,     0,     0,   759,   303,   760,
       0,   304,   761,   762,     0,   305,   306,   307,   763,   764,
     765,     0,     0,     0,     0,   766,   310,   767,     0,     0,
     768,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   769,     0,   337,   338,
     339,   340,   341,   770,   771,   342,   343,     0,   344,   345,
     346,   347,   348,   772,     0,   349,   350,     0,     0,     0,
     773,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     774,   357,   775,     0,   359,     0,   360,     0,   776,     0,
     361,   362,     0,   363,   777,     0,   364,   365,     0,     0,
       0,   778,   367,   368,   369,   779,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,   780,   374,   375,   376,
    2075,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,   782,   387,   388,     0,
       0,     0,     0,     0,   783,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,   784,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,   785,   396,   397,   398,   399,   786,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   787,
     407,     0,     0,   788,   409,   789,   410,     0,   411,   790,
     791,   792,   793,   794,   416,   417,   418,   419,   420,     0,
     795,   421,   422,     0,     0,   423,   424,   425,   426,   427,
     796,     0,   798,   428,   429,     0,   799,   800,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,   801,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   802,   803,   451,   804,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   805,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   806,
     807,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   808,
       0,   809,   495,   496,   497,   498,     0,   499,   810,   811,
     501,   502,   503,   504,     0,   812,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,   813,   814,
     535,   536,     0,     0,   537,   538,   815,   540,   541,   542,
     816,   817,   543,   544,   545,   546,   818,   547,   548,     0,
       0,   549,   550,   551,   552,     0,   819,   553,   554,     0,
     820,   821,   822,   823,     0,     0,     0,     0,     0,   559,
     560,     0,   824,   825,   826,   562,   563,     0,   827,   564,
     565,   828,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   829,   574,     0,     0,
     830,   831,   832,   575,   833,   576,     0,     0,   577,   834,
       0,   835,   578,     0,   579,   580,   836,   837,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   838,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,   839,
     840,     0,   597,   598,   599,   841,   600,   601,   602,     0,
     603,   842,   843,   604,   844,   605,     0,   845,   846,   847,
     848,   849,   606,   607,     0,   850,   608,   851,   609,   852,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,     0,
     853,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   854,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   855,   702,     0,   703,     0,
     704,     0,   705,     0,     0,     0,     0,     0,     0,   856,
     857,     0,     0,     0,     0,   859,     0,   860,     0,     0,
       0,   861,     0,     0,     0,   862,   863,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
     428,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,    42,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,    49,   549,   550,
     551,   552,     0,     0,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,    54,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,    55,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,  2876,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,  2877,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   701,   702,     0,   703,     0,   704,     0,   705,
       0,     0,     0,     0,     0,     0,   244,   245,     0,   246,
     247,   248,   249,   250,  2878,     0,   251,     0,     0,     0,
       0,   252,     0,  2879,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,  2875,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,     0,
     396,   397,   398,   399,     0,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   406,   407,     0,     0,   408,
     409,     0,   410,     0,   411,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,     0,     0,   428,
     429,     0,     0,     0,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,     0,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   462,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,     0,     0,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   494,     0,     0,   495,   496,
     497,   498,     0,   499,     0,   500,   501,   502,   503,   504,
       0,   505,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,     0,     0,   535,   536,     0,     0,
     537,   538,   539,   540,   541,   542,     0,     0,   543,   544,
     545,   546,     0,   547,   548,     0,     0,   549,   550,   551,
     552,     0,     0,   553,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,   559,   560,     0,     0,     0,
     561,   562,   563,     0,     0,   564,   565,     0,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   573,   574,     0,     0,     0,     0,     0,   575,
       0,   576,     0,     0,   577,     0,     0,     0,   578,     0,
     579,   580,   581,   582,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     590,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,     0,     0,     0,   597,   598,
     599,     0,   600,   601,   602,     0,   603,     0,     0,   604,
       0,   605,     0,     0,     0,     0,     0,     0,   606,   607,
       0,     0,   608,     0,   609,     0,   610,   611,     0,     0,
    2876,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
    2877,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
       0,     0,     0,     0,     0,   244,   245,     0,   246,   247,
     248,   249,   250,  2878,     0,   251,     0,     0,     0,     0,
     252,     0,  2879,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,  2876,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,  2877,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     701,   702,     0,   703,     0,   704,     0,   705,     0,     0,
       0,     0,     0,   244,   245,     0,   246,   247,   248,   249,
     250,     0,  2878,   251,     0,     0,     0,     0,   252,     0,
       0,  2879,     0,   254,   255,   256,   257,   258,   259,     0,
    -512,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   269,  5140,     0,   270,   271,     0,   272,   273,     0,
       0,     0,     0,   276,   277,   278,  5141,   280,   281,     0,
     282,   283,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,     0,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,     0,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,     0,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,     0,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,     0,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
    5142,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,     0,   362,     0,     0,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,  5143,     0,
     370,     0,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,     0,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,  5144,     0,     0,   382,     0,
     383,     0,     0,     0,   385,     0,     0,   386,  5145,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
    -467,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,     0,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,  5146,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
       0,     0,     0,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
       0,   479,  -467,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,     0,     0,   489,   490,     0,   491,   492,
     493,  5147,   494,     0,     0,     0,   496,   497,   498,     0,
     499,     0,   500,   501,     0,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,     0,     0,     0,   514,     0,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,     0,   531,   532,   533,
     534,     0,     0,     0,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,     0,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,     0,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,     0,     0,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,  -467,     0,     0,     0,   583,   584,   585,
       0,   586,     0,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,     0,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
       0,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   701,   702,
       0,   703,     0,   704,     0,   705,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,  5547,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,   747,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,  2795,     0,     0,     0,
       0,   309,   310,   767,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
     771,   342,   343,     0,   344,   345,   346,   347,   348,   772,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
     777,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,   784,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,     0,
     396,   397,   398,   399,     0,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   406,   407,     0,     0,   408,
     409,     0,   410,     0,   411,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,   795,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,     0,     0,   428,
     429,     0,   799,   800,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,     0,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   462,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,     0,     0,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   494,     0,     0,   495,   496,
     497,   498,     0,   499,     0,   500,   501,   502,   503,   504,
       0,   505,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,     0,     0,   535,   536,     0,     0,
     537,   538,   539,   540,   541,   542,     0,     0,   543,   544,
     545,   546,     0,   547,   548,     0,     0,   549,   550,   551,
     552,     0,   819,   553,   554,     0,  2796,   556,   557,  2797,
       0,     0,     0,     0,     0,   559,   560,     0,     0,   825,
     561,   562,   563,     0,   827,   564,   565,   828,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   573,   574,     0,     0,     0,     0,     0,   575,
       0,   576,     0,     0,   577,     0,     0,     0,   578,     0,
     579,   580,   581,   582,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     590,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,     0,     0,     0,   597,   598,
     599,     0,   600,   601,   602,     0,   603,     0,     0,   604,
       0,   605,     0,     0,     0,     0,     0,     0,   606,   607,
       0,     0,   608,     0,   609,     0,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,  2798,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,   784,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,   800,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,   801,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,   827,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,  2022,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,  1671,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,  1123,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,     0,   396,   397,
     398,   399,     0,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   406,   407,     0,     0,   408,   409,     0,
     410,     0,   411,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,     0,     0,   428,   429,     0,
       0,     0,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
    1672,     0,   437,   438,   439,     0,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   462,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,     0,     0,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   494,     0,     0,   495,   496,   497,   498,
       0,   499,     0,   500,   501,   502,   503,   504,     0,   505,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,     0,     0,   535,   536,     0,     0,   537,   538,
     539,   540,   541,   542,     0,     0,   543,   544,   545,   546,
       0,   547,   548,     0,     0,   549,   550,   551,   552,     0,
     241,   553,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,   559,   560,     0,     0,     0,   561,   562,
     563,     0,     0,   564,   565,     0,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     573,   574,     0,     0,     0,     0,     0,   575,     0,   576,
       0,     0,   577,     0,     0,     0,   578,     0,   579,   580,
     581,   582,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   590,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,     0,     0,     0,   597,   598,   599,     0,
     600,   601,   602,     0,   603,     0,     0,   604,     0,   605,
       0,     0,     0,     0,     0,     0,   606,   607,     0,     0,
     608,     0,   609,     0,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,  1673,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,  1010,  1011,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,  1012,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,  1013,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,  1014,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,     0,   396,   397,   398,   399,     0,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   406,   407,     0,
       0,   408,   409,     0,   410,     0,   411,     0,   412,   413,
     414,   415,   416,   417,  1015,   419,   420,     0,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,     0,
       0,   428,   429,     0,     0,     0,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
     440,     0,   441,     0,   442,   443,  1016,   445,   446,   447,
     448,   449,   450,   451,     0,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   462,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,     0,     0,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   494,     0,     0,
     495,   496,   497,   498,     0,   499,     0,   500,   501,   502,
     503,   504,     0,   505,   506,     0,     0,     0,   507,   508,
    1017,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,     0,     0,   535,   536,
       0,     0,   537,   538,   539,   540,   541,   542,     0,     0,
     543,   544,   545,   546,     0,   547,   548,     0,     0,   549,
     550,   551,   552,     0,     0,   553,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,  1018,   560,     0,
       0,     0,   561,   562,   563,     0,     0,   564,   565,     0,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   573,   574,     0,     0,     0,     0,
       0,   575,     0,   576,     0,     0,   577,     0,     0,     0,
     578,     0,   579,   580,   581,   582,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   590,     0,     0,  1019,  1020,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,     0,     0,     0,
     597,   598,   599,     0,  1021,   601,   602,     0,   603,     0,
       0,   604,     0,   605,     0,     0,     0,     0,     0,     0,
     606,   607,     0,     0,   608,     0,   609,     0,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
    1022,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,  1023,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,  1123,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,     0,     0,   428,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   494,     0,     0,   495,   496,   497,   498,     0,   499,
       0,   500,   501,   502,   503,   504,     0,   505,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
       0,     0,   535,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,   543,   544,   545,   546,     0,   547,
     548,     0,     0,   549,   550,   551,   552,     0,   241,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,   561,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,     0,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,   603,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,  1336,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1123,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,     0,
     396,   397,   398,   399,     0,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   406,   407,     0,     0,   408,
     409,     0,   410,     0,   411,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,     0,     0,   428,
     429,     0,     0,     0,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,     0,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   462,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,     0,     0,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   494,     0,     0,   495,   496,
     497,   498,     0,   499,     0,   500,   501,   502,   503,   504,
       0,   505,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,     0,     0,   535,   536,     0,     0,
     537,   538,   539,   540,   541,   542,     0,     0,   543,   544,
     545,   546,     0,   547,   548,     0,     0,   549,   550,   551,
     552,     0,   241,   553,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,   559,   560,     0,     0,     0,
     561,   562,   563,     0,     0,   564,   565,     0,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   573,   574,     0,     0,     0,     0,     0,   575,
       0,   576,     0,     0,   577,     0,     0,     0,   578,     0,
     579,   580,   581,   582,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     590,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,     0,     0,     0,   597,   598,
     599,     0,   600,   601,   602,     0,   603,     0,     0,   604,
       0,   605,     0,     0,     0,     0,     0,     0,   606,   607,
       0,     0,   608,     0,   609,     0,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,  1510,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,  1010,  1011,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
    1518,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,  1013,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,  1014,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,  1015,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,  1017,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,  1019,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,  1021,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,  1023,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,  1123,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,     0,   396,   397,
     398,   399,     0,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   406,   407,     0,     0,   408,   409,     0,
     410,     0,   411,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,     0,     0,   428,   429,     0,
       0,     0,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,     0,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   462,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,     0,     0,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   494,     0,     0,   495,   496,   497,   498,
       0,   499,     0,   500,   501,   502,   503,   504,     0,   505,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,     0,     0,   535,   536,     0,     0,   537,   538,
     539,   540,   541,   542,     0,     0,   543,   544,   545,   546,
       0,   547,   548,     0,     0,   549,   550,   551,   552,     0,
     241,   553,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,   559,   560,     0,     0,     0,   561,   562,
     563,     0,     0,   564,   565,     0,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     573,   574,     0,     0,     0,     0,     0,   575,     0,   576,
       0,     0,   577,     0,     0,     0,   578,     0,   579,   580,
     581,   582,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   590,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,     0,     0,     0,   597,   598,   599,     0,
     600,   601,   602,     0,   603,     0,     0,   604,     0,   605,
       0,     0,     0,     0,     0,     0,   606,   607,     0,     0,
     608,     0,   609,     0,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,  1673,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,  2133,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,     0,   396,   397,   398,   399,     0,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   406,   407,     0,
       0,   408,   409,     0,   410,     0,   411,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,     0,
       0,   428,   429,     0,     0,     0,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   462,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,     0,     0,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   494,     0,     0,
     495,   496,   497,   498,     0,   499,     0,   500,   501,   502,
     503,   504,     0,   505,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,     0,     0,   535,   536,
       0,     0,   537,   538,   539,   540,   541,   542,     0,     0,
     543,   544,   545,   546,     0,   547,   548,     0,     0,   549,
     550,   551,   552,     0,     0,   553,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,   559,   560,     0,
       0,     0,   561,   562,   563,     0,     0,   564,   565,     0,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   573,   574,     0,     0,     0,     0,
       0,   575,     0,   576,     0,     0,   577,     0,     0,     0,
     578,     0,   579,   580,   581,   582,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   590,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,     0,     0,     0,
     597,   598,   599,     0,   600,   601,   602,     0,   603,     0,
       0,   604,     0,   605,     0,     0,     0,     0,     0,     0,
     606,   607,     0,     0,   608,     0,   609,     0,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,  2134,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,     0,     0,   428,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   494,     0,     0,   495,   496,   497,   498,     0,   499,
       0,   500,   501,   502,   503,   504,     0,   505,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
       0,     0,   535,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,   543,   544,   545,   546,     0,   547,
     548,     0,     0,   549,   550,   551,   552,     0,     0,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,   561,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,     0,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,   603,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
    5553,   252,     0,  5554,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,     0,
     396,   397,   398,   399,     0,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   406,   407,     0,     0,   408,
     409,     0,   410,     0,   411,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,     0,     0,   428,
     429,     0,     0,     0,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,     0,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   462,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,     0,     0,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   494,     0,     0,   495,   496,
     497,   498,     0,   499,     0,   500,   501,   502,   503,   504,
       0,   505,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,     0,     0,   535,   536,     0,     0,
     537,   538,   539,   540,   541,   542,     0,     0,   543,   544,
     545,   546,     0,   547,   548,     0,     0,   549,   550,   551,
     552,     0,     0,   553,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,   559,   560,     0,     0,     0,
     561,   562,   563,     0,     0,   564,   565,     0,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   573,   574,     0,     0,     0,     0,     0,   575,
       0,   576,     0,     0,   577,     0,     0,     0,   578,     0,
     579,   580,   581,   582,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     590,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,     0,     0,     0,   597,   598,
     599,     0,   600,   601,   602,     0,   603,     0,     0,   604,
       0,   605,     0,     0,     0,     0,     0,     0,   606,   607,
       0,     0,   608,     0,   609,     0,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,  2134,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,  5554,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,     0,   396,   397,
     398,   399,     0,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   406,   407,     0,     0,   408,   409,     0,
     410,     0,   411,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,     0,     0,   428,   429,     0,
       0,     0,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,     0,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   462,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,     0,     0,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   494,     0,     0,   495,   496,   497,   498,
       0,   499,     0,   500,   501,   502,   503,   504,     0,   505,
     506,    42,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,     0,     0,   535,   536,     0,     0,   537,   538,
     539,   540,   541,   542,     0,     0,   543,   544,   545,   546,
       0,   547,   548,     0,    49,   549,   550,   551,   552,     0,
       0,   553,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,   559,   560,     0,     0,     0,   561,   562,
     563,     0,     0,   564,   565,     0,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     573,   574,     0,     0,     0,     0,     0,   575,    54,   576,
       0,     0,   577,     0,     0,     0,   578,     0,   579,   580,
     581,   582,     0,     0,     0,    55,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   590,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,     0,     0,     0,   597,   598,   599,     0,
     600,   601,   602,     0,   603,     0,     0,   604,     0,   605,
       0,     0,     0,     0,     0,     0,   606,   607,     0,     0,
     608,     0,   609,     0,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,  1107,  4061,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,     0,   396,   397,   398,   399,     0,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   406,   407,     0,
       0,   408,   409,     0,   410,     0,   411,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,     0,
       0,   428,   429,     0,     0,     0,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   462,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,     0,     0,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   494,     0,     0,
     495,   496,   497,   498,     0,   499,     0,   500,   501,   502,
     503,   504,     0,   505,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,     0,     0,   535,   536,
       0,     0,   537,   538,   539,   540,   541,   542,     0,     0,
     543,   544,   545,   546,     0,   547,   548,     0,     0,   549,
     550,   551,   552,     0,     0,   553,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,   559,   560,     0,
       0,     0,   561,   562,   563,     0,     0,   564,   565,     0,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   573,   574,     0,     0,     0,     0,
       0,   575,     0,   576,     0,     0,   577,     0,     0,     0,
     578,     0,   579,   580,   581,   582,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   590,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,     0,     0,     0,
     597,   598,   599,     0,   600,   601,   602,     0,   603,     0,
       0,   604,     0,   605,     0,     0,     0,     0,     0,     0,
     606,   607,     0,     0,   608,     0,   609,     0,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,  4300,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,     0,     0,   428,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   494,     0,     0,   495,   496,   497,   498,     0,   499,
       0,   500,   501,   502,   503,   504,     0,   505,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
       0,     0,   535,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,   543,   544,   545,   546,     0,   547,
     548,     0,     0,   549,   550,   551,   552,     0,     0,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,   561,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,     0,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,   603,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
    4304,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
    2456,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
    2457,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,  1827,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,  1828,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,  3905,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,     0,
     396,   397,   398,   399,     0,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   406,   407,     0,     0,   408,
     409,     0,   410,     0,   411,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,     0,     0,   428,
     429,     0,     0,     0,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,     0,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   462,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,     0,     0,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   494,     0,     0,   495,   496,
     497,   498,     0,   499,     0,   500,   501,   502,   503,   504,
       0,   505,   506,    42,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,  2459,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,     0,     0,   535,   536,     0,     0,
     537,   538,   539,   540,   541,   542,     0,     0,   543,   544,
     545,   546,     0,   547,   548,     0,    49,   549,   550,   551,
     552,     0,     0,   553,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,   559,   560,     0,     0,     0,
     561,   562,   563,     0,     0,   564,   565,     0,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   573,   574,     0,     0,     0,     0,     0,   575,
      54,   576,     0,     0,   577,     0,     0,     0,   578,     0,
     579,   580,   581,   582,     0,     0,     0,    55,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     590,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,     0,     0,     0,   597,   598,
     599,     0,   600,   601,   602,     0,   603,     0,     0,   604,
       0,   605,     0,     0,     0,     0,     0,     0,   606,   607,
       0,     0,   608,     0,   609,     0,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,  1107,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,   428,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
     512,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,     0,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,   561,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,  2876,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,   621,   622,   623,   624,
     625,   626,   627,  2877,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,  2878,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,     0,     0,   428,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   494,     0,     0,   495,   496,   497,   498,     0,   499,
       0,   500,   501,   502,   503,   504,     0,   505,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
       0,     0,   535,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,   543,   544,   545,   546,     0,   547,
     548,     0,     0,   549,   550,   551,   552,     0,     0,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,   561,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,     0,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,   603,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,  1258,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     701,   702,     0,   703,     0,   704,     0,   705,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,  3100,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,     0,   396,   397,   398,   399,     0,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   406,   407,     0,
       0,   408,   409,     0,   410,     0,   411,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,     0,
       0,   428,   429,     0,     0,     0,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   462,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,     0,     0,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   494,     0,     0,
     495,   496,   497,   498,     0,   499,     0,   500,   501,   502,
     503,   504,     0,   505,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,     0,     0,   535,   536,
       0,     0,   537,   538,   539,   540,   541,   542,     0,     0,
     543,   544,   545,   546,     0,   547,   548,     0,     0,   549,
     550,   551,   552,     0,     0,   553,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,   559,   560,     0,
       0,     0,   561,   562,   563,     0,     0,   564,   565,     0,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   573,   574,     0,     0,     0,     0,
       0,   575,     0,   576,     0,     0,   577,     0,     0,     0,
     578,     0,   579,   580,   581,   582,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   590,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,     0,     0,     0,
     597,   598,   599,     0,   600,   601,   602,     0,   603,     0,
       0,   604,     0,   605,     0,     0,     0,     0,     0,     0,
     606,   607,     0,     0,   608,     0,   609,     0,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,  3435,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,   428,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,     0,
     453,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     494,     0,     0,   495,   496,   497,   498,     0,   499,     0,
     500,   501,   502,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,   512,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,     0,
       0,   535,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,     0,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,   561,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,   603,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   701,   702,     0,   703,
       0,   704,     0,   705,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,  4184,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,     0,   396,   397,
     398,   399,     0,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   406,   407,     0,     0,   408,   409,     0,
     410,     0,   411,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,     0,     0,   428,   429,     0,
       0,     0,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,     0,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   462,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,     0,     0,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   494,     0,     0,   495,   496,   497,   498,
       0,   499,     0,   500,   501,   502,   503,   504,     0,   505,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,     0,     0,   535,   536,     0,     0,   537,   538,
     539,   540,   541,   542,     0,     0,   543,   544,   545,   546,
       0,   547,   548,     0,     0,   549,   550,   551,   552,     0,
       0,   553,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,   559,   560,     0,     0,     0,   561,   562,
     563,     0,     0,   564,   565,     0,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     573,   574,     0,     0,     0,     0,     0,   575,     0,   576,
       0,     0,   577,     0,     0,     0,   578,     0,   579,   580,
     581,   582,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   590,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,     0,     0,     0,   597,   598,   599,     0,
     600,   601,   602,     0,   603,     0,     0,   604,     0,   605,
       0,     0,     0,     0,     0,     0,   606,   607,     0,     0,
     608,     0,   609,     0,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,   244,   245,     0,
     246,   247,   248,   249,   250,  2093,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
     428,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,     0,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   701,   702,     0,   703,     0,   704,     0,   705,
     244,   245,     0,   246,   247,   248,   249,   250,  2811,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,   244,   245,     0,   246,   247,   248,   249,
     250,  3468,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,   428,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,     0,   453,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   494,     0,     0,   495,   496,   497,   498,     0,
     499,     0,   500,   501,   502,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,   512,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,     0,     0,   535,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,     0,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,   561,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,   603,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   701,   702,
       0,   703,     0,   704,     0,   705,   244,   245,     0,   246,
     247,   248,   249,   250,  3658,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,     0,
     396,   397,   398,   399,     0,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   406,   407,     0,     0,   408,
     409,     0,   410,     0,   411,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,     0,     0,   428,
     429,     0,     0,     0,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,     0,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   462,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,     0,     0,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   494,     0,     0,   495,   496,
     497,   498,     0,   499,     0,   500,   501,   502,   503,   504,
       0,   505,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,     0,     0,   535,   536,     0,     0,
     537,   538,   539,   540,   541,   542,     0,     0,   543,   544,
     545,   546,     0,   547,   548,     0,     0,   549,   550,   551,
     552,     0,     0,   553,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,   559,   560,     0,     0,     0,
     561,   562,   563,     0,     0,   564,   565,     0,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   573,   574,     0,     0,     0,     0,     0,   575,
       0,   576,     0,     0,   577,     0,     0,     0,   578,     0,
     579,   580,   581,   582,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     590,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,     0,     0,     0,   597,   598,
     599,     0,   600,   601,   602,     0,   603,     0,     0,   604,
       0,   605,     0,     0,     0,     0,     0,     0,   606,   607,
       0,     0,   608,     0,   609,     0,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
       0,     0,     0,     0,     0,   244,   245,  4039,   246,   247,
     248,   249,   250,   921,   922,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,   923,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
     924,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,   925,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   926,   334,   335,
     927,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   928,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
     929,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,   930,     0,   373,     0,     0,
       0,   931,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,   932,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,   933,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,     0,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     934,   458,   459,   460,   935,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
     936,     0,   470,   471,   472,   473,   474,     0,   937,   476,
       0,   477,   478,   479,     0,     0,   938,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,   939,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,   940,   941,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   942,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,   241,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,   943,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,   944,   572,
     945,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,     0,     0,   620,
       0,     0,     0,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     701,   702,     0,   703,     0,   704,     0,   705,   244,   245,
       0,   246,   247,   248,   249,   250,  1477,   922,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,   923,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,   924,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,   925,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     926,   334,   335,   927,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   928,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,   929,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,   930,     0,
     373,     0,     0,     0,   931,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,   932,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,   933,   393,
     394,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,     0,   396,   397,   398,   399,     0,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   406,   407,     0,
       0,   408,   409,     0,   410,     0,   411,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,     0,     0,   423,   424,   425,   426,     0,     0,     0,
       0,   428,   429,     0,     0,     0,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,     0,   453,   454,   455,
       0,   456,     0,   934,   458,   459,   460,  1478,     0,   462,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,   936,     0,   470,   471,   472,   473,   474,
       0,   937,   476,     0,   477,   478,   479,     0,     0,   938,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   494,     0,     0,
     495,   496,   497,   498,     0,   499,     0,   500,   501,   502,
     503,   504,     0,   505,   506,   939,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,   940,   941,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,     0,     0,   535,   536,
       0,     0,   537,   538,   539,   540,   541,   542,     0,     0,
     942,   544,   545,   546,     0,   547,   548,     0,     0,   549,
     550,   551,   552,     0,   241,   553,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,   559,   560,   943,
       0,     0,   561,   562,   563,     0,     0,   564,   565,     0,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,   944,   572,   945,   573,   574,     0,     0,     0,     0,
       0,   575,     0,   576,     0,     0,   577,     0,     0,     0,
     578,     0,   579,   580,   581,   582,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   590,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,     0,     0,     0,
     597,   598,   599,     0,   600,   601,   602,     0,   603,     0,
       0,   604,     0,   605,     0,     0,     0,     0,     0,     0,
     606,   607,     0,     0,   608,     0,   609,     0,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
       0,     0,   620,     0,     0,     0,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,   244,   245,     0,   246,   247,   248,   249,   250,     0,
     922,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,   923,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,   924,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
     925,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   926,   334,   335,   927,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   928,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,   929,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,   930,     0,   373,     0,     0,     0,   931,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
     932,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,   933,   393,   394,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
       0,     0,     0,     0,   428,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,     0,
     453,   454,   455,     0,   456,     0,   934,   458,   459,   460,
       0,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,   936,     0,   470,   471,
     472,   473,   474,     0,   937,   476,     0,   477,   478,   479,
       0,     0,   938,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     494,     0,     0,   495,   496,   497,   498,     0,   499,     0,
     500,   501,   502,   503,   504,     0,   505,   506,   939,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,   940,   941,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,     0,
       0,   535,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   942,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,   241,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,   943,     0,     0,   561,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,   944,   572,   945,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,   603,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,     0,     0,   620,     0,     0,     0,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   701,   702,     0,   703,
       0,   704,     0,   705,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,  3118,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,  3119,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,  3120,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,  3121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,     0,   396,   397,
     398,   399,     0,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   406,   407,     0,     0,   408,   409,     0,
     410,     0,   411,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,  1366,  1367,     0,   428,   429,     0,
       0,  3122,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,     0,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   462,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,     0,     0,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   494,     0,     0,   495,   496,   497,   498,
       0,   499,     0,   500,   501,   502,   503,   504,     0,   505,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,  5534,
     988,  5535,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,     0,     0,   535,   536,     0,     0,   537,   538,
     539,   540,   541,   542,     0,     0,   543,   544,   545,   546,
       0,   547,   548,     0,     0,   549,   550,   551,   552,     0,
       0,   553,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,   559,   560,     0,     0,     0,   561,   562,
     563,     0,  3123,   564,   565,     0,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     573,   574,     0,     0,     0,     0,     0,   575,     0,   576,
       0,     0,   577,     0,     0,     0,   578,     0,   579,   580,
     581,   582,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   590,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,     0,     0,     0,   597,   598,   599,     0,
     600,   601,   602,     0,   603,     0,     0,   604,     0,   605,
       0,     0,     0,     0,     0,     0,   606,   607,     0,     0,
     608,     0,   609,     0,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
    1340,  1341,   252,  1342,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
     428,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,  1343,     0,
       0,  1344,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,  1345,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,  1346,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   701,   702,     0,   703,     0,   704,     0,   705,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
    1487,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
    1488,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,  1489,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,  1123,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,  1490,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,   241,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,  2456,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,  2457,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,  1827,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,  1828,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,   428,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,     0,   453,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   494,     0,     0,   495,   496,   497,   498,     0,
     499,     0,   500,   501,   502,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,   512,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,  2459,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,     0,     0,   535,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,     0,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,   561,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,   603,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   701,   702,
       0,   703,     0,   704,     0,   705,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,  1512,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  1513,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1123,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,     0,
     396,   397,   398,   399,     0,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   406,   407,     0,     0,   408,
     409,     0,   410,     0,   411,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,     0,     0,   428,
     429,     0,     0,     0,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,     0,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   462,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,     0,     0,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   494,     0,     0,   495,   496,
     497,   498,     0,   499,     0,   500,   501,   502,   503,   504,
       0,   505,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,     0,     0,   535,   536,     0,     0,
     537,   538,   539,   540,   541,   542,     0,     0,   543,   544,
     545,   546,     0,   547,   548,     0,     0,   549,   550,   551,
     552,     0,   241,   553,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,   559,   560,     0,     0,     0,
     561,   562,   563,     0,     0,   564,   565,     0,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   573,   574,     0,     0,     0,     0,     0,   575,
       0,   576,     0,     0,   577,     0,     0,     0,   578,     0,
     579,   580,   581,   582,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     590,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,     0,     0,     0,   597,   598,
     599,     0,   600,   601,   602,     0,   603,     0,     0,   604,
       0,   605,     0,     0,     0,     0,     0,     0,   606,   607,
       0,     0,   608,     0,   609,     0,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,  2280,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,   428,   429,     0,     0,  2281,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
     801,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
     512,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,     0,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,   561,   562,   563,     0,  2282,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,  1487,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,  3777,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,  1123,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,     0,     0,   428,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   494,     0,     0,   495,   496,   497,   498,     0,   499,
       0,   500,   501,   502,   503,   504,     0,   505,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
       0,     0,   535,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,   543,   544,   545,   546,     0,   547,
     548,     0,     0,   549,   550,   551,   552,     0,   241,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,   561,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,     0,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,   603,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,  1122,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,  1123,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,   241,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,  1124,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     701,   702,     0,   703,     0,   704,     0,   705,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,  1122,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,  1123,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,     0,   396,   397,   398,   399,     0,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   406,   407,     0,
       0,   408,   409,     0,   410,     0,   411,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,     0,
       0,   428,   429,     0,     0,     0,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   462,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,     0,     0,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   494,     0,     0,
     495,   496,   497,   498,     0,   499,     0,   500,   501,   502,
     503,   504,     0,   505,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,     0,     0,   535,   536,
       0,     0,   537,   538,   539,   540,   541,   542,     0,     0,
     543,   544,   545,   546,     0,   547,   548,     0,     0,   549,
     550,   551,   552,     0,   241,   553,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,   559,   560,     0,
       0,     0,   561,   562,   563,     0,     0,   564,   565,     0,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   573,   574,     0,     0,     0,     0,
       0,   575,     0,   576,     0,     0,   577,     0,     0,     0,
     578,     0,   579,   580,   581,   582,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   590,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,     0,     0,     0,
     597,   598,   599,     0,   600,   601,   602,     0,   603,     0,
       0,   604,     0,   605,     0,     0,     0,     0,     0,     0,
     606,   607,     0,     0,   608,     0,   609,     0,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,   244,   245,     0,   246,   247,   248,   249,   250,  1543,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
    1123,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,   428,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,     0,
     453,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     494,     0,     0,   495,   496,   497,   498,     0,   499,     0,
     500,   501,   502,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,   512,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,     0,
       0,   535,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,   241,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,   561,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,   603,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   701,   702,     0,   703,
       0,   704,     0,   705,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,  1611,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,  1612,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,     0,   396,   397,
     398,   399,     0,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   406,   407,     0,     0,   408,   409,     0,
     410,     0,   411,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,     0,     0,   428,   429,     0,
       0,     0,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,     0,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   462,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,     0,     0,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   494,     0,     0,   495,   496,   497,   498,
       0,   499,     0,   500,   501,   502,   503,   504,     0,   505,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,     0,     0,   535,   536,     0,     0,   537,   538,
     539,   540,   541,   542,     0,     0,   543,   544,   545,   546,
       0,   547,   548,     0,     0,   549,   550,   551,   552,     0,
    1385,   553,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,   559,   560,     0,     0,     0,   561,   562,
     563,     0,     0,   564,   565,     0,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     573,   574,     0,     0,     0,     0,     0,   575,     0,   576,
       0,     0,   577,     0,     0,     0,   578,     0,   579,   580,
     581,   582,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   590,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,     0,     0,     0,   597,   598,   599,     0,
     600,   601,   602,     0,   603,     0,     0,   604,     0,   605,
       0,     0,     0,     0,     0,     0,   606,   607,     0,     0,
     608,     0,   609,     0,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,  2898,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,  1123,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
     428,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,   241,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   701,   702,     0,   703,     0,   704,     0,   705,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,  1123,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,  3189,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,   241,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,  1487,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,  1123,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,   428,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,     0,   453,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   494,     0,     0,   495,   496,   497,   498,     0,
     499,     0,   500,   501,   502,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,   512,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,     0,     0,   535,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,   241,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,   561,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,   603,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   701,   702,
       0,   703,     0,   704,     0,   705,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1123,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,     0,
     396,   397,   398,   399,     0,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   406,   407,     0,     0,   408,
     409,     0,   410,     0,   411,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,     0,     0,   428,
     429,     0,  4321,     0,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,     0,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   462,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,     0,     0,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   494,     0,     0,   495,   496,
     497,   498,     0,   499,     0,   500,   501,   502,   503,   504,
       0,   505,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,     0,     0,   535,   536,     0,     0,
     537,   538,   539,   540,   541,   542,     0,     0,   543,   544,
     545,   546,     0,   547,   548,     0,     0,   549,   550,   551,
     552,     0,   241,   553,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,   559,   560,     0,     0,     0,
     561,   562,   563,     0,     0,   564,   565,     0,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   573,   574,     0,     0,     0,     0,     0,   575,
       0,   576,     0,     0,   577,     0,     0,     0,   578,     0,
     579,   580,   581,   582,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     590,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,     0,     0,     0,   597,   598,
     599,     0,   600,   601,   602,     0,   603,     0,     0,   604,
       0,   605,     0,     0,     0,     0,     0,     0,   606,   607,
       0,     0,   608,     0,   609,     0,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,  1123,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,   428,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
     512,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,   241,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,   561,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,  5465,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,  5466,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,     0,     0,   428,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   494,     0,     0,   495,   496,   497,   498,     0,   499,
       0,   500,   501,   502,   503,   504,     0,   505,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
       0,     0,   535,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,   543,   544,   545,   546,     0,   547,
     548,     0,     0,   549,   550,   551,   552,     0,     0,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,   561,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,     0,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,   603,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,   988,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     701,   702,     0,   703,     0,   704,     0,   705,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,     0,   396,   397,   398,   399,     0,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   406,   407,     0,
       0,   408,   409,     0,   410,     0,   411,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,     0,
       0,   428,   429,     0,     0,     0,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   462,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,     0,     0,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   494,     0,     0,
     495,   496,   497,   498,     0,   499,     0,   500,   501,   502,
     503,   504,     0,   505,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,     0,     0,   535,   536,
       0,     0,   537,   538,   539,   540,   541,   542,     0,     0,
     543,   544,   545,   546,     0,   547,   548,     0,     0,   549,
     550,   551,   552,     0,     0,   553,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,   559,   560,     0,
       0,     0,   561,   562,   563,     0,     0,   564,   565,     0,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   573,   574,     0,     0,     0,     0,
       0,   575,     0,   576,     0,     0,   577,     0,     0,     0,
     578,     0,   579,   580,   581,   582,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   590,     0,     0,   591,   592,   593,   594,   595,
       0,   596,  1090,     0,     0,     0,     0,     0,     0,     0,
     597,   598,   599,     0,   600,   601,   602,     0,   603,     0,
       0,   604,     0,   605,     0,     0,     0,     0,     0,     0,
     606,   607,     0,     0,   608,     0,   609,     0,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,  1157,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,  1158,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,   428,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,     0,
     453,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     494,     0,     0,   495,   496,   497,   498,     0,   499,     0,
     500,   501,   502,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,   512,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,     0,
       0,   535,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,     0,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,   561,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,   603,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   701,   702,     0,   703,
       0,   704,     0,   705,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,     0,   396,   397,
     398,   399,     0,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   406,   407,     0,     0,   408,   409,     0,
     410,     0,   411,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,     0,     0,   428,   429,     0,
       0,     0,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,     0,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   462,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,     0,     0,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   494,     0,     0,   495,   496,   497,   498,
       0,   499,     0,   500,   501,   502,   503,   504,     0,   505,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,     0,     0,   535,   536,     0,     0,   537,   538,
     539,   540,   541,   542,     0,     0,   543,   544,   545,   546,
       0,   547,   548,     0,     0,   549,   550,   551,   552,     0,
    1345,   553,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,   559,   560,     0,     0,     0,   561,   562,
     563,     0,     0,   564,   565,     0,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     573,   574,     0,     0,     0,     0,     0,   575,     0,   576,
       0,     0,   577,     0,     0,     0,   578,     0,   579,   580,
     581,   582,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   590,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,     0,     0,     0,   597,   598,   599,     0,
     600,   601,   602,     0,   603,     0,     0,   604,     0,   605,
       0,     0,     0,     0,     0,     0,   606,   607,     0,     0,
     608,     0,   609,     0,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,  2185,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
     428,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,     0,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   701,   702,     0,   703,     0,   704,     0,   705,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,  2410,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,  2556,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,   428,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,     0,   453,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   494,     0,     0,   495,   496,   497,   498,     0,
     499,     0,   500,   501,   502,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,   512,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,     0,     0,   535,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,     0,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,   561,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,   603,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   701,   702,
       0,   703,     0,   704,     0,   705,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  3102,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,     0,
     396,   397,   398,   399,     0,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   406,   407,     0,     0,   408,
     409,     0,   410,     0,   411,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,     0,     0,   428,
     429,     0,     0,     0,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,     0,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   462,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,     0,     0,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   494,     0,     0,   495,   496,
     497,   498,     0,   499,     0,   500,   501,   502,   503,   504,
       0,   505,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,     0,     0,   535,   536,     0,     0,
     537,   538,   539,   540,   541,   542,     0,     0,   543,   544,
     545,   546,     0,   547,   548,     0,     0,   549,   550,   551,
     552,     0,     0,   553,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,   559,   560,     0,     0,     0,
     561,   562,   563,     0,     0,   564,   565,     0,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   573,   574,     0,     0,     0,     0,     0,   575,
       0,   576,     0,     0,   577,     0,     0,     0,   578,     0,
     579,   580,   581,   582,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     590,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,     0,     0,     0,   597,   598,
     599,     0,   600,   601,   602,     0,   603,     0,     0,   604,
       0,   605,     0,     0,     0,     0,     0,     0,   606,   607,
       0,     0,   608,     0,   609,     0,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,   244,
     245,     0,   246,   247,   248,   249,   250,  3125,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,   428,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
     512,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,     0,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,   561,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,  3154,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,     0,     0,   428,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   494,     0,     0,   495,   496,   497,   498,     0,   499,
       0,   500,   501,   502,   503,   504,     0,   505,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
       0,     0,   535,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,   543,   544,   545,   546,     0,   547,
     548,     0,     0,   549,   550,   551,   552,     0,     0,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,   561,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,     0,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,   603,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,  3220,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     701,   702,     0,   703,     0,   704,     0,   705,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,     0,   396,   397,   398,   399,     0,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   406,   407,     0,
       0,   408,   409,     0,   410,     0,   411,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,     0,
       0,   428,   429,     0,     0,     0,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   462,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,     0,     0,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   494,     0,     0,
     495,   496,   497,   498,     0,   499,     0,   500,   501,   502,
     503,   504,     0,   505,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,  3665,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,     0,     0,   535,   536,
       0,     0,   537,   538,   539,   540,   541,   542,     0,     0,
     543,   544,   545,   546,     0,   547,   548,     0,     0,   549,
     550,   551,   552,     0,     0,   553,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,   559,   560,     0,
       0,     0,   561,   562,   563,     0,     0,   564,   565,     0,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   573,   574,     0,     0,     0,     0,
       0,   575,     0,   576,     0,     0,   577,     0,     0,     0,
     578,     0,   579,   580,   581,   582,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   590,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,     0,     0,     0,
     597,   598,   599,     0,   600,   601,   602,     0,   603,     0,
       0,   604,     0,   605,     0,     0,     0,     0,     0,     0,
     606,   607,     0,     0,   608,     0,   609,     0,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,   428,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,     0,
     453,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     494,     0,     0,   495,   496,   497,   498,     0,   499,     0,
     500,   501,   502,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,   512,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,     0,
       0,   535,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,     0,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,   561,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,   603,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   701,   702,     0,   703,
       0,   704,     0,   705,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,  2155,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,     0,   396,   397,
     398,   399,     0,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   406,   407,     0,     0,   408,   409,     0,
     410,     0,   411,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,     0,     0,   423,
     424,  2156,   426,   427,     0,     0,     0,   428,   429,     0,
       0,     0,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,     0,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   462,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,     0,     0,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   494,     0,     0,   495,   496,   497,   498,
       0,   499,     0,   500,   501,   502,   503,   504,     0,   505,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,     0,     0,   535,   536,     0,     0,   537,   538,
     539,   540,   541,   542,     0,     0,   543,   544,   545,   546,
       0,   547,   548,     0,     0,   549,   550,   551,   552,     0,
       0,   553,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,   559,   560,     0,     0,     0,   561,   562,
     563,     0,     0,   564,   565,     0,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     573,   574,     0,     0,     0,     0,     0,   575,     0,   576,
       0,     0,   577,     0,     0,     0,   578,     0,   579,   580,
     581,   582,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   590,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,     0,     0,     0,   597,   598,   599,     0,
     600,   601,   602,     0,   603,     0,     0,   604,     0,   605,
       0,     0,     0,     0,     0,     0,   606,   607,     0,     0,
     608,     0,   609,     0,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
     428,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,     0,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,  5205,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   701,   702,     0,   703,     0,   704,     0,   705,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
    1518,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,     0,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,     0,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,     0,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,  1519,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,     0,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,     0,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,  1518,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,     0,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
       0,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,   428,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,     0,   453,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   494,     0,     0,   495,   496,   497,   498,     0,
     499,     0,   500,   501,   502,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,     0,   510,     0,     0,     0,
     511,     0,     0,     0,   512,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,     0,     0,   535,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,     0,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,   561,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   590,     0,     0,
       0,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,     0,
     601,   602,     0,   603,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   701,   702,
       0,   703,     0,   704,     0,   705,   244,   245,     0,   246,
     247,   248,   249,   250,  1503,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  1504,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,     0,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,   932,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,     0,
     396,   397,   398,   399,     0,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   406,   407,     0,     0,   408,
     409,     0,   410,     0,   411,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,     0,
       0,   423,   424,   425,   426,  1505,     0,     0,     0,   428,
     429,     0,     0,     0,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,     0,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,     0,   453,   454,   455,     0,   456,
       0,     0,   458,   459,   460,     0,     0,   462,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,     0,
     476,     0,   477,   478,   479,     0,     0,     0,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   494,     0,     0,   495,   496,
     497,   498,     0,   499,     0,   500,   501,   502,   503,   504,
       0,   505,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,     0,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,     0,     0,   535,   536,     0,     0,
     537,   538,   539,   540,   541,   542,     0,     0,     0,   544,
     545,   546,     0,   547,   548,     0,     0,   549,   550,   551,
     552,     0,   241,   553,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,   559,   560,     0,     0,     0,
     561,   562,   563,     0,     0,   564,   565,     0,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   573,   574,     0,     0,     0,     0,     0,   575,
       0,   576,     0,     0,   577,     0,     0,     0,   578,     0,
     579,   580,   581,   582,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     590,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,     0,     0,     0,   597,   598,
     599,     0,   600,   601,   602,     0,   603,     0,     0,   604,
       0,   605,     0,     0,     0,     0,     0,     0,   606,   607,
       0,     0,   608,     0,   609,     0,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,     0,     0,
     620,     0,     0,     0,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,   244,
     245,     0,   246,   247,   248,   249,   250,  5286,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,  5287,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,     0,   334,   335,     0,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,     0,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,   932,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,  5288,     0,
       0,     0,   428,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,     0,   456,     0,     0,   458,   459,   460,     0,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,     0,   476,     0,   477,   478,   479,     0,     0,
       0,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
       0,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,     0,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,   241,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,   561,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,     0,     0,   620,     0,     0,     0,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,   244,   245,     0,   246,   247,   248,   249,   250,
    2217,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,     0,   334,   335,     0,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
       0,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,   932,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,  2218,     0,     0,     0,   428,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
       0,   453,   454,   455,     0,   456,     0,     0,   458,   459,
     460,     0,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,     0,   476,     0,   477,   478,
     479,     0,     0,     0,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   494,     0,     0,   495,   496,   497,   498,     0,   499,
       0,   500,   501,   502,   503,   504,     0,   505,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,     0,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
       0,     0,   535,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,     0,   544,   545,   546,     0,   547,
     548,     0,     0,   549,   550,   551,   552,     0,   241,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,   561,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,     0,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,   603,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,     0,     0,   620,     0,     0,     0,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,   244,   245,     0,   246,   247,
     248,   249,   250,  2979,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,     0,   334,   335,
       0,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,     0,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,   932,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,  2980,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
       0,   458,   459,   460,     0,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,     0,   476,
       0,   477,   478,   479,     0,     0,     0,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,     0,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,     0,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,   241,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,     0,     0,   620,
       0,     0,     0,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     701,   702,     0,   703,     0,   704,     0,   705,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
       0,   334,   335,     0,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,     0,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,   932,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,     0,   396,   397,   398,   399,     0,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   406,   407,     0,
       0,   408,   409,     0,   410,     0,   411,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,     0,     0,   423,   424,   425,   426,     0,     0,     0,
       0,   428,   429,     0,     0,     0,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,     0,   453,   454,   455,
       0,   456,     0,     0,   458,   459,   460,     0,     0,   462,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,     0,   476,     0,   477,   478,   479,     0,     0,     0,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   494,     0,     0,
     495,   496,   497,   498,     0,   499,     0,   500,   501,   502,
     503,   504,     0,   505,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,     0,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,     0,     0,   535,   536,
       0,     0,   537,   538,   539,   540,   541,   542,     0,     0,
       0,   544,   545,   546,     0,   547,   548,     0,     0,   549,
     550,   551,   552,     0,   241,   553,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,   559,   560,     0,
       0,     0,   561,   562,   563,     0,     0,   564,   565,     0,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   573,   574,     0,     0,     0,     0,
       0,   575,     0,   576,     0,     0,   577,     0,     0,     0,
     578,     0,   579,   580,   581,   582,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   590,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,     0,     0,     0,
     597,   598,   599,     0,   600,   601,   602,     0,   603,     0,
       0,   604,     0,   605,     0,     0,     0,     0,     0,     0,
     606,   607,     0,     0,   608,     0,   609,     0,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
       0,     0,   620,     0,     0,     0,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,     0,
       0,   254,   255,   256,   257,   258,   259,     0,  -512,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   269,
    5140,     0,   270,   271,     0,   272,   273,     0,     0,     0,
       0,   276,   277,   278,  5141,   280,   281,     0,   282,   283,
       0,   284,   285,     0,   287,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,     0,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,     0,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,     0,
       0,     0,   320,   321,   322,     0,  -482,  -482,   323,     0,
    -482,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,     0,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,  5142,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,     0,   362,     0,     0,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,  5143,     0,   370,     0,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
       0,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,  5144,     0,     0,   382,     0,   383,     0,
       0,     0,   385,     0,     0,   386,  5145,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,  -467,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,     0,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,  5146,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,     0,     0,
       0,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,     0,   479,
    -467,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,     0,     0,   489,   490,     0,   491,   492,   493,  5147,
     494,     0,     0,     0,   496,   497,   498,     0,   499,     0,
     500,   501,     0,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,     0,     0,     0,   514,     0,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,     0,   531,   532,   533,   534,     0,
       0,     0,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,     0,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,     0,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,     0,     0,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,  -467,     0,     0,     0,   583,   584,   585,     0,   586,
       0,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,     0,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,     0,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   701,   702,     0,   703,
       0,   704,     0,   705,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,     0,     0,   254,   255,   256,   257,   258,   259,
       0,  -512,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   269,  5140,     0,   270,   271,     0,   272,   273,
       0,     0,     0,     0,   276,   277,   278,  5141,   280,   281,
       0,   282,   283,     0,   284,   285,     0,   287,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,     0,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
       0,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,     0,     0,     0,   320,   321,   322,     0,  -503,
       0,   323,     0,  -503,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,     0,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,  5142,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,     0,   362,     0,     0,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,  5143,
       0,   370,     0,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,     0,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,  5144,     0,     0,   382,
       0,   383,     0,     0,     0,   385,     0,     0,   386,  5145,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,  -467,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,     0,   396,   397,
     398,   399,     0,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   406,   407,     0,     0,   408,   409,     0,
     410,     0,   411,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,     0,     0,     0,   429,     0,
       0,     0,   430,     0,   431,   432,     0,   433,   434,  5146,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,     0,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,     0,     0,     0,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   462,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,     0,   479,  -467,     0,   480,   481,   482,   483,   484,
     485,   486,   487,     0,     0,     0,   489,   490,     0,   491,
     492,   493,  5147,   494,     0,     0,     0,   496,   497,   498,
       0,   499,     0,   500,   501,     0,   503,   504,     0,   505,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,     0,     0,     0,   514,     0,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,     0,   531,   532,
     533,   534,     0,     0,     0,   536,     0,     0,   537,   538,
     539,   540,   541,   542,     0,     0,   543,   544,   545,   546,
       0,   547,   548,     0,     0,   549,   550,   551,   552,     0,
       0,   553,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,   559,   560,     0,     0,     0,     0,   562,
     563,     0,     0,   564,   565,     0,   566,   567,     0,     0,
       0,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     573,   574,     0,     0,     0,     0,     0,   575,     0,   576,
       0,     0,   577,     0,     0,     0,   578,     0,   579,   580,
     581,   582,  -503,     0,  -467,     0,     0,     0,   583,   584,
     585,     0,   586,     0,   588,   589,     0,     0,   590,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,     0,     0,     0,   597,   598,   599,     0,
     600,   601,   602,     0,     0,     0,     0,   604,     0,   605,
       0,     0,     0,     0,     0,     0,   606,   607,     0,     0,
     608,     0,   609,     0,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,     0,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,     0,     0,   254,   255,   256,
     257,   258,   259,     0,  -512,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   269,  5140,     0,   270,   271,
       0,   272,   273,     0,     0,     0,     0,   276,   277,   278,
    5141,   280,   281,     0,   282,   283,     0,   284,   285,     0,
     287,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,     0,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,     0,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,     0,     0,     0,   320,   321,
     322,     0,  -500,     0,   323,     0,  -500,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,  5142,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,     0,   362,     0,
       0,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,  5143,     0,   370,     0,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,     0,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,  5144,
       0,     0,   382,     0,   383,     0,     0,     0,   385,     0,
       0,   386,  5145,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,  -467,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
       0,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,  5146,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,     0,     0,     0,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,     0,   479,  -467,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,     0,     0,   489,
     490,     0,   491,   492,   493,  5147,   494,     0,     0,     0,
     496,   497,   498,     0,   499,     0,   500,   501,     0,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,     0,     0,
       0,   514,     0,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
       0,   531,   532,   533,   534,     0,     0,     0,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,     0,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,     0,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,     0,     0,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,  -500,     0,  -467,     0,     0,
       0,   583,   584,   585,     0,   586,     0,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,     0,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,     0,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   701,   702,     0,   703,     0,   704,     0,   705,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,     0,     0,
     254,   255,   256,   257,   258,   259,     0,  -512,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   269,  5140,
       0,   270,   271,     0,   272,   273,     0,     0,     0,     0,
     276,   277,   278,  5141,   280,   281,     0,   282,   283,     0,
     284,   285,     0,   287,     0,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,     0,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,     0,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,     0,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,  5402,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,     0,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,  5142,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
       0,   362,     0,     0,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,  5143,     0,   370,     0,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,     0,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,  5144,     0,     0,   382,     0,   383,     0,     0,
       0,   385,     0,     0,   386,  5145,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,  -467,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,     0,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,  5146,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,     0,     0,     0,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,     0,   479,  -467,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
       0,     0,   489,   490,     0,   491,   492,   493,  5147,   494,
       0,     0,     0,   496,   497,   498,     0,   499,     0,   500,
     501,     0,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,     0,     0,     0,   514,     0,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,     0,   531,   532,   533,   534,     0,     0,
       0,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,     0,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,     0,     0,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
    -467,     0,     0,     0,   583,   584,   585,     0,   586,     0,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
       0,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,     0,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,  5413,
       0,     0,     0,   254,   255,   256,   257,   258,   259,     0,
    -512,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   269,  5140,     0,   270,   271,     0,   272,   273,     0,
       0,     0,     0,   276,   277,   278,  5141,   280,   281,     0,
     282,   283,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,     0,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,     0,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,     0,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,     0,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,     0,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
    5142,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,     0,   362,     0,     0,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,  5143,     0,
     370,     0,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,     0,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,  5144,     0,     0,   382,     0,
     383,     0,     0,     0,   385,     0,     0,   386,  5145,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
    -467,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,     0,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,  5146,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
       0,     0,     0,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
       0,   479,  -467,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,     0,     0,   489,   490,     0,   491,   492,
     493,  5147,   494,     0,     0,     0,   496,   497,   498,     0,
     499,     0,   500,   501,     0,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,     0,     0,     0,   514,     0,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,     0,   531,   532,   533,
     534,     0,     0,     0,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,     0,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,     0,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,     0,     0,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,  -467,     0,     0,     0,   583,   584,   585,
       0,   586,     0,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,     0,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
       0,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   701,   702,
       0,   703,     0,   704,     0,   705,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -512,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5140,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5141,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,  -505,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5142,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5143,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5144,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5145,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -467,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,     0,
     396,   397,   398,   399,     0,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   406,   407,     0,     0,   408,
     409,     0,   410,     0,   411,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,     0,     0,     0,
     429,     0,     0,     0,   430,     0,   431,   432,     0,   433,
     434,  5146,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,     0,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     0,     0,     0,     0,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   462,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,     0,   479,  -467,     0,   480,   481,   482,
     483,   484,   485,   486,   487,     0,     0,     0,   489,   490,
       0,   491,   492,   493,  5147,   494,     0,     0,     0,   496,
     497,   498,     0,   499,     0,   500,   501,     0,   503,   504,
       0,   505,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,     0,     0,     0,
     514,     0,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,     0,
     531,   532,   533,   534,     0,     0,     0,   536,     0,     0,
     537,   538,   539,   540,   541,   542,     0,     0,   543,   544,
     545,   546,     0,   547,   548,     0,     0,   549,   550,   551,
     552,     0,     0,   553,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,   559,   560,     0,     0,     0,
       0,   562,   563,     0,     0,   564,   565,     0,   566,   567,
       0,     0,     0,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   573,   574,     0,     0,     0,     0,     0,   575,
       0,   576,     0,     0,   577,     0,     0,     0,   578,     0,
     579,   580,   581,   582,     0,     0,  -467,     0,     0,     0,
     583,   584,   585,     0,   586,     0,   588,   589,     0,     0,
     590,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,     0,     0,     0,   597,   598,
     599,     0,   600,   601,   602,     0,     0,     0,     0,   604,
       0,   605,     0,     0,     0,     0,     0,     0,   606,   607,
       0,     0,   608,     0,   609,     0,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,     0,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,     0,     0,   254,
     255,   256,   257,   258,   259,     0,  -512,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   269,  5140,     0,
     270,   271,     0,   272,   273,     0,     0,     0,     0,   276,
     277,   278,  5141,   280,   281,     0,   282,   283,     0,   284,
     285,     0,   287,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,     0,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,     0,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,     0,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,  5470,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,     0,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,  5142,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,     0,
     362,     0,     0,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,  5143,     0,   370,     0,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,     0,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,  5144,     0,     0,   382,     0,   383,     0,     0,     0,
     385,     0,     0,   386,  5145,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,  -467,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,     0,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,  5146,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,     0,     0,     0,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,     0,   479,  -467,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,     0,
       0,   489,   490,     0,   491,   492,   493,  5147,   494,     0,
       0,     0,   496,   497,   498,     0,   499,     0,   500,   501,
       0,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
       0,     0,     0,   514,     0,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,     0,   531,   532,   533,   534,     0,     0,     0,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,     0,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,     0,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,     0,     0,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,  -467,
       0,     0,     0,   583,   584,   585,     0,   586,     0,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,     0,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,     0,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
       0,     0,   254,   255,   256,   257,   258,   259,     0,  -512,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     269,  5140,     0,   270,   271,     0,   272,   273,     0,     0,
       0,     0,   276,   277,   278,  5141,   280,   281,     0,   282,
     283,     0,   284,   285,     0,   287,     0,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
       0,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,     0,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
       0,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,  5504,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,     0,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,  5142,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,     0,   362,     0,     0,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,  5143,     0,   370,
       0,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,     0,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,  5144,     0,     0,   382,     0,   383,
       0,     0,     0,   385,     0,     0,   386,  5145,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,  -467,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,     0,     0,     0,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,  5146,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,     0,
       0,     0,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,     0,
     479,  -467,     0,   480,   481,   482,   483,   484,   485,   486,
     487,     0,     0,     0,   489,   490,     0,   491,   492,   493,
    5147,   494,     0,     0,     0,   496,   497,   498,     0,   499,
       0,   500,   501,     0,   503,   504,     0,   505,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,     0,     0,     0,   514,     0,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,     0,   531,   532,   533,   534,
       0,     0,     0,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,   543,   544,   545,   546,     0,   547,
     548,     0,     0,   549,   550,   551,   552,     0,     0,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,     0,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,     0,     0,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,     0,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,  -467,     0,     0,     0,   583,   584,   585,     0,
     586,     0,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,     0,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,     0,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,     0,     0,   254,   255,   256,   257,   258,
     259,     0,  -512,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   269,  5140,     0,   270,   271,     0,   272,
     273,     0,     0,     0,     0,   276,   277,   278,  5141,   280,
     281,     0,   282,   283,     0,   284,   285,     0,   287,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,     0,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,     0,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,     0,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,  -486,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
       0,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,  5142,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,     0,   362,     0,     0,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
    5143,     0,   370,     0,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,     0,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,  5144,     0,     0,
     382,     0,   383,     0,     0,     0,   385,     0,     0,   386,
    5145,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,  -467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,     0,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
    5146,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,     0,     0,     0,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,     0,   479,  -467,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,     0,     0,   489,   490,     0,
     491,   492,   493,  5147,   494,     0,     0,     0,   496,   497,
     498,     0,   499,     0,   500,   501,     0,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,     0,     0,     0,   514,
       0,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,     0,   531,
     532,   533,   534,     0,     0,     0,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,     0,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
       0,     0,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,  -467,     0,     0,     0,   583,
     584,   585,     0,   586,     0,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,     0,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,     0,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     701,   702,     0,   703,     0,   704,     0,   705,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,     0,     0,   254,   255,
     256,   257,   258,   259,     0,  -512,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   269,  5140,     0,   270,
     271,     0,   272,   273,     0,     0,     0,     0,   276,   277,
     278,  5141,   280,   281,     0,   282,   283,     0,   284,   285,
       0,   287,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,     0,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,     0,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,     0,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,     0,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,     0,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,  5142,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,     0,   362,
       0,     0,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,  5143,     0,   370,     0,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,     0,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
    5144,     0,     0,   382,     0,   383,     0,     0,     0,   385,
       0,     0,   386,  5145,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,  -467,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,     0,   396,   397,   398,   399,     0,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   406,   407,     0,
       0,   408,   409,     0,   410,     0,   411,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,     0,
       0,     0,   429,     0,     0,     0,   430,     0,   431,   432,
       0,   433,   434,  5146,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,     0,     0,     0,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   462,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,     0,   479,  -467,     0,   480,
     481,   482,   483,   484,   485,   486,   487,     0,     0,     0,
     489,   490,     0,   491,   492,   493,  5147,   494,     0,     0,
       0,   496,   497,   498,     0,   499,     0,   500,   501,     0,
     503,   504,     0,   505,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,     0,
       0,     0,   514,     0,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,     0,   531,   532,   533,   534,     0,     0,     0,   536,
       0,     0,   537,   538,   539,   540,   541,   542,     0,     0,
     543,   544,   545,   546,     0,   547,   548,     0,     0,   549,
     550,   551,   552,     0,     0,   553,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,   559,   560,     0,
       0,     0,     0,   562,   563,     0,     0,   564,   565,     0,
     566,   567,     0,     0,     0,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   573,   574,     0,     0,     0,     0,
       0,   575,     0,   576,     0,     0,   577,     0,     0,     0,
     578,     0,   579,   580,   581,   582,     0,     0,  -467,     0,
       0,     0,   583,   584,   585,     0,   586,     0,   588,   589,
       0,     0,   590,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,     0,     0,     0,
     597,   598,   599,     0,   600,   601,   602,     0,     0,     0,
       0,   604,     0,   605,     0,     0,     0,     0,     0,     0,
     606,   607,     0,     0,   608,     0,   609,     0,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,     0,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,     0,
       0,   254,   255,   256,   257,   258,   259,     0,  -512,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   269,
    5140,     0,   270,   271,     0,   272,   273,     0,     0,     0,
       0,   276,   277,   278,  5141,   280,   281,     0,   282,   283,
       0,   284,   285,     0,   287,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,     0,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,     0,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,     0,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
       0,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,     0,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,  5142,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,     0,   362,     0,     0,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,  5143,     0,   370,     0,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
       0,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,  5144,     0,     0,   382,     0,   383,     0,
       0,     0,   385,     0,     0,   386,  5145,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,  -467,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,     0,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,  5146,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,     0,     0,
       0,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,     0,   479,
    -467,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,     0,     0,   489,   490,     0,   491,   492,   493,  5147,
     494,     0,     0,     0,   496,   497,   498,     0,   499,     0,
     500,   501,     0,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,     0,     0,     0,   514,     0,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,     0,   531,   532,   533,   534,     0,
       0,     0,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,     0,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,     0,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,     0,     0,     0,     0,
     570,     0,     0,  5405,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,  -467,     0,     0,     0,   583,   584,   585,     0,   586,
       0,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,     0,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,     0,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   701,   702,     0,   703,
       0,   704,     0,   705,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,     0,     0,   254,   255,   256,   257,   258,   259,
       0,     0,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
       0,     0,     0,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,     0,   287,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,     0,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
       0,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,     0,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,     0,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,     0,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,     0,   362,     0,     0,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,     0,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,     0,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,     0,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,     0,   396,   397,
     398,   399,     0,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   406,   407,     0,     0,   408,   409,     0,
     410,     0,   411,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,     0,     0,     0,   429,     0,
       0,     0,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,     0,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,     0,     0,     0,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   462,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,     0,   479,     0,     0,   480,   481,   482,   483,   484,
     485,   486,   487,     0,     0,     0,   489,   490,     0,   491,
     492,   493,     0,   494,     0,     0,     0,   496,   497,   498,
       0,   499,     0,   500,   501,     0,   503,   504,     0,   505,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,     0,     0,     0,   514,     0,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,     0,   531,   532,
     533,   534,     0,     0,     0,   536,     0,     0,   537,   538,
     539,   540,   541,   542,     0,     0,   543,   544,   545,   546,
       0,   547,   548,     0,     0,   549,   550,   551,   552,     0,
       0,   553,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,   559,   560,     0,     0,     0,     0,   562,
     563,     0,     0,   564,   565,     0,   566,   567,     0,     0,
       0,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     573,   574,     0,     0,     0,     0,     0,   575,     0,   576,
       0,     0,   577,     0,     0,     0,   578,     0,   579,   580,
     581,   582,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,     0,   588,   589,     0,     0,   590,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,     0,     0,     0,   597,   598,   599,     0,
     600,   601,   602,     0,     0,     0,     0,   604,     0,   605,
       0,     0,     0,     0,     0,     0,   606,   607,     0,     0,
     608,     0,   609,     0,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,     0,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,  3197,   704,     0,   705,     0,  1743,     0,
    1744,     0,     0,     0,     0,     0,     0,     0,     0,  3711,
    3712,     0,  1722,  1746,  1747,  3713,     0,  3714,     0,  3715,
    3716,     0,     0,     0,  3711,  3712,     0,     0,     0,     0,
    3713,     0,  3714,     0,  3715,  3716,     0,  3717,     0,     0,
       0,     0,     0,     0,  1748,     0,     0,     0,     0,  1749,
       0,     0,  3717,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1752,     0,     0,     0,     0,     0,  1753,
    1754,     0,     0,  1755,     0,     0,     0,     0,     0,     0,
       0,     0,  1756,     0,     0,     0,     0,  3718,     0,     0,
    3719,     0,     0,     0,     0,     0,     0,  1757,  3720,     0,
       0,     0,  3718,     0,     0,  3719,     0,     0,     0,     0,
       0,  1758,     0,  3720,     0,  1759,     0,  3356,     0,     0,
       0,     0,     0,  1760,     0,     0,     0,     0,     0,     0,
    3198,     0,  3356,     0,  3721,     0,     0,     0,  1763,     0,
       0,     0,     0,     0,  1764,     0,     0,     0,     0,  3721,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3722,     0,  3723,     0,     0,     0,     0,  5294,
       0,     0,     0,     0,     0,     0,     0,  3722,  1766,  3723,
    3724,  3725,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3724,  3725,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1768,  3726,     0,     0,     0,     0,     0,  1769,     0,
       0,     0,     0,     0,     0,  3727,     0,  3726,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1770,     0,
    3727,     0,     0,     0,  3728,     0,     0,     0,     0,     0,
       0,     0,     0,  3729,  3730,     0,  3731,     0,     0,  3728,
       0,  1771,     0,     0,     0,     0,     0,     0,  3729,  3730,
       0,  3731,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3732,  3733,  3734,     0,     0,  1772,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3732,  3733,  3734,
       0,  3735,  3736,  3737,     0,  1773,     0,     0,  3738,  1774,
       0,  3739,     0,     0,     0,     0,  3735,  3736,  3737,     0,
       0,     0,     0,  3738,     0,     0,  3739,     0,     0,  3740,
    3741,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3740,  3741,     0,     0,     0,     0,
       0,     0,     0,  1776,     0,     0,     0,     0,     0,     0,
    1777,     0,     0,  3742,  3743,     0,     0,     0,     0,  1778,
       0,     0,     0,     0,     0,     0,     0,     0,  3742,  3743,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3368,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3368,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1780,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1783,     0,
       0,  3744,     0,     0,     0,  3745,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3744,  3746,     0,     0,
    3745,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3746,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1784,  1785,  1786,  1787,     0,     0,
       0,     0,  1788,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3747,     0,  1789,
    3748,     0,  1790,  3749,  3750,  3751,  3752,     0,     0,     0,
       0,     0,  3747,     0,     0,  3748,     0,     0,  3749,  3750,
    3751,  3752,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1792,     0,
       0,     0,     0,     0,     0,     0,  3753,  3754,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3753,  3754,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1793,     0,  3755,  1794,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3755,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1795,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1798,  1799
};

static const yytype_int16 yycheck[] =
{
       6,     0,    43,    44,    44,   885,  1065,   871,  1161,    15,
    1306,  1306,    18,  1703,     0,  1672,    22,  1322,  1015,  1016,
    1255,  1154,  1797,  1130,     0,    31,  1062,   785,  2448,  2449,
    1600,  1435,    38,  2732,  1209,    41,    57,  1399,  1035,  1399,
      46,  1801,  2950,    49,  1176,   746,  1742,    53,    60,    55,
    2170,  2214,  1176,  2445,  2536,  2537,  2448,  2449,    43,    60,
       6,  2588,  1125,  1125,  1831,    64,  1762,  1130,  1130,  3107,
    1033,  1360,  2133,  2610,    19,  2133,  2489,  2633,  2930,  2931,
      59,  2637,  3019,  3163,  1780,    30,  1228,  1229,    64,  3216,
      35,    97,  2015,  2016,  3370,    21,  1644,  1710,  2724,  3757,
    1744,  1175,  1248,  1710,  1748,  2028,  2029,  2030,    97,  2359,
     121,  1710,  3609,  3194,  2364,  1257,  1152,    43,  1762,  3660,
    2591,  1742,  2250,  1322,  1130,  2591,  2591,  1269,  1270,  1271,
    1774,  2638,    22,  1275,  2591,  2591,  1130,  1647,    21,  2456,
    1650,  1130,  1652,  2630,  2868,   121,  2158,  2106,  2873,  2800,
    2209,  2638,  2946,  2520,  2521,   856,   857,  3280,   859,    49,
    3280,  2607,   231,  4462,     9,  4462,  3822,  3757,  1145,   718,
     719,   872,  1314,  4072,    21,  4314,    35,  1664,  1665,  1666,
      68,  1042,    71,  1724,    29,  2630,   192,  3777,  3778,    34,
       5,    22,    21,  2638,  2415,    52,  2588,  1221,  1222,  1223,
      35,    73,  2214,   125,  2471,  1066,    73,    71,  1232,    11,
      71,  1213,  1214,  2582,   158,   221,   176,   223,  2878,  2718,
     226,   227,   228,   229,    18,    19,    77,   144,  1656,  1404,
    1658,  1659,  1660,  2500,    48,  2502,  2503,   243,   156,  1263,
    2459,  1546,  1266,  2770,  1557,  3659,   249,    18,    19,   176,
    4291,   125,  4726,  2623,  2624,  2625,    18,    19,   197,    48,
    1573,  1285,  1286,   156,   231,  1289,  3159,  1580,   197,   160,
    2640,   194,   156,  1586,   236,   156,   125,   223,   156,   194,
     226,   197,   156,  1307,  1308,    62,    19,   125,  1312,  1313,
      18,    19,    73,    21,  1145,  2665,  2350,   125,  2352,  2669,
     131,    37,   192,  1327,    18,    19,   130,    31,   100,   174,
    1485,  2365,  3846,   156,  2368,  2685,  2686,  2371,   156,   732,
     733,  2691,   204,  2860,  1865,    18,    19,   156,   156,   326,
     246,   239,    18,    19,  1198,   246,    59,  2707,  2708,   229,
    4233,   249,   236,  2593,   163,   156,  2716,    18,    19,   372,
     162,   156,   230,   243,    23,   156,    78,    18,    19,    21,
     464,   156,   158,    81,  2734,   275,    35,  2782,   483,    21,
      18,    19,    18,    19,  4126,   160,    18,    19,  2770,   200,
      49,    18,    19,    23,   500,    21,   144,    18,    19,   235,
      87,    43,    61,    62,   239,   276,   282,    71,   455,   125,
     125,   209,   492,   197,   455,  2473,    18,    19,  4491,  2184,
      21,   332,    18,    19,  2482,   406,   287,    18,    19,   510,
     571,    61,    62,   103,    21,   432,    18,    19,   204,    21,
      18,    19,   258,    25,    19,    18,    19,  3564,   377,   634,
    3551,  3552,  3718,  3558,  2484,   455,   238,    37,   571,   406,
    3561,  3562,   191,   176,  2522,  3011,  2496,   180,  2526,    73,
      19,    85,   125,  3730,  3731,   276,   258,  3734,   428,   611,
     109,   194,  3748,  3749,   282,   565,   139,    74,   349,   271,
      25,  5272,    22,   219,   392,  3752,  1244,  2527,    18,    19,
     111,   165,  1356,    18,    19,    18,    19,    18,    19,   388,
    1258,   428,   456,   137,  4045,   591,    65,  1387,  1388,    73,
    1723,    23,  1725,  1726,  1511,   287,  3207,  1730,   152,    18,
      19,  2561,   502,    35,   388,  1522,   739,   388,   614,   619,
    1743,  2914,   212,  1746,  1747,   194,  1749,    49,   249,  1752,
    1753,  1754,  1755,   368,   432,   156,  1759,   365,   366,    61,
      62,  1764,   125,    73,  4693,   387,  1769,  1770,  1771,  1772,
    1773,   272,   354,   160,  1777,  1778,   708,   130,    70,   231,
    1783,   571,  1785,  1786,  1787,    65,  1789,  1790,  3134,  1792,
    2963,    70,  1795,   376,  3055,  1798,  1799,   103,   403,  4247,
    5064,   131,   386,  1473,   432,   389,    18,    19,   419,   464,
      67,    21,   546,   150,   150,   194,  4061,   330,   150,   231,
     501,   243,   469,  3304,   235,   386,  4596,  4516,   389,   122,
    3003,  3004,   447,   168,   386,  1326,   285,   389,   608,   219,
     209,  1482,   827,  4130,  1183,   642,    18,    19,   235,  3195,
     235,   372,   401,   228,   470,  2713,   371,   798,   569,  1529,
     282,   130,   612,  1689,  5445,  1632,   372,  2878,   386,  2926,
    3927,   389,   753,  1364,  2827,   276,   263,   658,   331,   293,
     727,   542,   386,   412,   595,   389,   727,  2225,   198,  2227,
      52,    18,    19,  1384,   476,   188,    18,    19,   368,   497,
    1551,   608,   578,   386,  1555,  4778,   389,   256,  1559,   822,
     386,   658,   584,   389,  1681,   428,   432,   822,  5182,    18,
      19,   827,   718,   719,   388,   386,   501,   727,   389,  3757,
     726,   192,   728,   827,   634,   386,  1587,  1588,   389,  3144,
     427,  2894,   822,  3771,  5208,    18,    19,  2099,   386,  2099,
     386,   389,   500,   389,   565,  4159,  3129,  2109,  2807,   386,
     546,  4644,   389,   634,  3281,   386,   548,   769,   389,  3172,
     231,  2457,   241,  2459,  4903,  4904,   256,  3492,   769,   487,
    1912,  3088,  2892,  3090,   386,   259,   387,   389,  3191,   785,
     386,  1632,  3319,   389,   608,   386,   160,   290,   389,   400,
     571,  3328,  3329,   455,   386,  3332,   432,   389,   386,  1212,
     823,   389,  3023,   386,  2208,  2728,   389,  2868,   227,  3280,
    2868,   630,  1954,  2426,  2773,  2827,   126,  3710,  3444,  2426,
    3446,  1823,   636,   634,   827,   822,    21,  2426,   718,   719,
     492,   900,   901,   902,   796,   571,   905,   906,   703,   704,
     909,   803,   911,   912,   913,   622,   740,   636,  2902,   582,
    2610,    43,   614,   647,  1403,   861,   386,   863,   582,   389,
     827,   386,   868,   386,   389,   386,   389,   827,   389,   372,
     716,   753,   594,   722,  1898,  3094,   647,    18,    19,  1868,
    3773,  4922,  2894,   827,   860,   647,   698,   386,   827,  3281,
     389,  3551,  1894,   396,  4793,  2037,   747,   903,   827,  2967,
     827,  3021,   908,   565,   827,   827,  1455,   825,  3277,   827,
     827,   827,   827,   574,  1463,   823,   827,   986,   753,   647,
      18,    19,  4674,   738,   739,  2353,  2354,  2995,  2996,  2997,
    2998,   600,   825,   647,   827,  4202,  3435,   828,   827,   741,
     828,   825,  1966,   827,   825,  4212,  1970,   825,   562,  4076,
     822,   825,   958,  4220,   647,   822,   625,   619,   964,   823,
     600,   647,   823,   822,   386,  3502,  4077,   389,  1992,  2582,
     827,  3341,   978,   979,   636,  2582,   647,   753,  4093,  4094,
     827,   571,   825,  2582,   827,   582,   647,   825,   627,  4256,
     979,   822,  3060,   552,  5468,   827,   825,   825,   562,   647,
    1006,   647,  1215,  2573,   386,   647,   642,   389,  2032,  1015,
     647,  3381,   122,  3383,   825,   695,   647,  1023,  1024,   535,
     825,  3958,   827,   634,   825,   646,   827,  3397,   800,  3399,
     825,   823,   827,   827,   827,   647,  5016,  1043,  5177,  4695,
     542,   647,   562,   510,  3414,   608,   647,   636,  1033,   386,
    4505,  2592,   389,   542,   386,   647,  2831,   389,  2035,   647,
    2235,   832,   552,   822,   647,   827,  1065,  4966,   994,  3109,
     915,   693,   492,   652,  2841,  1081,  1082,   386,   141,  1065,
     389,  3451,   655,   656,  1090,   282,   633,   633,   600,  1065,
     593,   633,   614,   403,  1020,   823,   827,   469,   814,   827,
      44,  4635,  4636,   386,   827,  1116,   389,  1033,  4188,   823,
     432,   994,   571,   827,    64,  1121,  2891,   647,    77,   760,
    3160,  1534,   647,   571,   647,   219,   647,   501,  3168,   608,
     975,  1107,  2345,  3173,   827,  1083,   981,  1143,   377,   231,
    1116,   827,   613,    53,   128,   565,   634,  4254,   647,  4230,
    4257,   379,   823,   822,    64,  1161,   827,   128,   139,  1165,
     822,  1167,  1168,   371,  1170,   708,  1172,   651,   640,   292,
     547,  1177,   239,  1179,  1180,  2328,  1165,  1183,  5477,   827,
     290,   827,   249,   400,  1190,  2360,   823,   446,   285,   830,
     827,  1081,   823,  1199,  1200,  1201,   827,   565,  1204,   619,
    5497,  1207,  1208,  4850,  1210,  1211,  1964,   125,   582,  4247,
    2506,  2506,   186,   536,   825,   827,   636,   823,   111,  1208,
    2790,   827,   823,   472,   197,   647,   827,  2224,   746,  2591,
     148,  2591,   449,  4227,  1180,   823,   220,   652,  1244,   827,
    1085,  2454,    86,   193,   827,   386,  4369,   570,   389,  4369,
     366,   628,  1258,   500,   486,  1276,    47,  3640,  3704,  3705,
     185,   105,   372,  2299,   807,   647,   784,    52,  2481,   187,
      18,    19,  4266,  4920,   533,  2382,   249,   112,  1254,   366,
     115,   344,  2245,  1209,   732,  2498,    18,    19,   386,    71,
    2253,   389,   266,  1183,  3661,  2865,   160,   827,   823,   415,
    1306,   611,   827,   262,   827,   827,   827,   726,  3691,   293,
     647,  2968,    18,    19,   636,   647,  1322,    18,    19,  2382,
    2382,  4115,   293,   826,   823,   392,  2539,  2540,   827,    71,
     194,   454,  3291,  1339,  2547,  4925,  1342,  1406,   647,   827,
    1361,  1362,   994,   582,  1365,  4069,  4071,  1368,  1369,  1370,
     331,  1363,  1373,  1374,  1375,  1376,  1377,  1378,  1379,  1380,
      18,    19,  1363,   455,   647,   141,   176,   826,  1020,  2443,
    3329,    57,   282,  2447,   571,  2133,  2382,  1383,  3695,  2453,
     243,  1033,  2083,  4034,  1390,  1391,  1392,  1393,  2382,  1395,
    1396,  1397,  2605,  2382,  1400,  1401,  1402,  1403,  3094,  1405,
    3813,  3814,   822,  1409,  3100,   827,  2810,    18,    19,  2771,
     354,  2771,  2544,  2545,   642,  1421,  4950,  2722,  1424,   122,
    2544,  2545,  3893,   165,  3544,   216,  1432,  3893,  3893,  1435,
    3593,  2292,  3653,  1439,  1440,  1424,  3893,  3893,  3945,  3199,
      77,  2302,   861,  3563,  2305,   827,  1392,  2308,  1454,  1455,
    1396,  1864,  2939,  3581,  1400,  3838,  1462,  1463,  3945,  1465,
    1466,  2750,   122,  1876,  1877,  1878,  1879,   417,    18,    19,
    3890,  3891,   379,  2983,  1887,  2903,  2904,   571,  1404,  3538,
    1486,  1122,  1523,   593,  3867,   188,   823,    77,  1494,   158,
     827,    18,    19,  3656,  1442,   827,    18,    19,  3890,  3891,
    3945,  3197,  3198,  1509,  4611,  1494,   647,  4014,   605,  3892,
    1436,  1517,   635,  1403,  2656,   723,   219,  2591,   827,  3442,
    2755,  2756,  3445,  2722,  4061,    18,    19,  4014,  2932,  1535,
    1536,  1537,  1538,  1539,  1540,  1541,  3604,  5071,  1523,   958,
    1546,  2683,  5083,   352,   827,   742,  1552,   123,  1554,   647,
    1556,  1540,  1558,  1436,  3198,  2256,   179,  1209,  2986,  1485,
    2988,  2989,  5096,  1408,  1454,  1455,  2115,  1556,   344,  4014,
    3624,   464,  1462,  1463,  4655,  1465,  3197,   122,    21,   828,
     827,  3593,  3849,   368,    18,    19,   125,   290,   827,  1535,
    1536,  1537,   517,  1539,  4502,  5185,  1015,  1523,   237,  4866,
     237,  4868,  1608,  1609,  1023,  1024,   388,  5104,  1554,    18,
      19,   158,  1558,   122,  3997,    18,    19,  1623,   428,  2765,
    3579,    12,  1628,   162,  1043,  2930,  2931,  3323,  2941,  2942,
     290,  4001,   591,    18,    19,    18,    19,   501,   386,  1628,
    1646,   389,   729,   188,  3656,  3895,   388,  4203,  1538,    18,
      19,  1541,  4779,   603,   386,   614,  1662,   389,   582,    18,
      19,    11,  5144,  5145,  3277,  1114,  5324,  1673,   198,   372,
    3277,   247,   262,  1662,  1685,  1686,  1687,   492,  3277,   188,
     386,  5271,   368,   389,   469,   386,   827,  1693,   389,   278,
     237,  2715,  1698,  3055,   485,  3055,   655,   656,  1147,   562,
     369,  4172,   565,  3273,  1703,  5295,   638,  1713,  1714,  1685,
    1686,  1687,   372,   156,  4241,   500,  3675,  1703,   582,    65,
    2895,  2896,  2897,   571,  1143,  4108,   363,  1703,   386,   827,
     369,   389,   369,    18,    19,   642,   125,    18,    19,  3506,
     575,   231,   369,   578,  5278,   290,  4129,   156,   371,   238,
     565,  1170,  1404,   816,   817,   818,   819,   429,  4141,   571,
     194,    21,   653,  4146,  1805,  3833,  4233,   571,  3836,    18,
      19,  4851,  3840,  3841,   230,   386,  3844,  3845,   389,   255,
     197,   290,   271,  3851,  1436,  3853,  3854,   565,   231,   748,
     749,  5067,   212,  2829,  3862,    18,    19,  4264,  3866,   994,
     377,   438,   612,   293,   619,  4742,   636,    18,    19,   481,
     127,     9,   197,    18,    19,   167,   125,   167,  4517,  1825,
    1826,   636,   369,    18,    19,  1020,  3039,   372,  3041,  1808,
    4456,   371,   371,  1485,   138,  1841,   386,   137,   258,   389,
     153,  1033,   179,  3802,   209,  3207,    18,    19,   200,  4241,
     200,   164,   152,   162,  3511,  4392,   245,  3551,   434,   386,
     500,   355,   389,   372,   386,   243,  3560,   389,  1874,   399,
     636,  1523,  2835,   574,   235,    18,    19,   546,    40,  3654,
     636,   614,   483,  4133,  1333,    18,    19,    18,    19,  4139,
     593,  2927,   481,   386,   285,   827,   389,  5487,  4369,   647,
     421,  2937,   263,   827,   713,   714,   715,   546,  3352,   546,
     256,   373,    18,    19,    33,   647,  3875,   282,  3280,   546,
    3280,    18,    19,  2920,   228,   614,  5408,  5409,   822,  3373,
     368,   248,  4000,   593,   828,   571,  1826,   828,   428,    18,
      19,   647,  3304,   203,  5024,   362,   647,  4367,  4368,    18,
      19,  1841,   386,    18,    19,   389,   432,   400,  1964,  1965,
     629,   598,    18,    19,  1383,   588,   822,   387,  4505,    18,
      19,   360,   828,   549,   822,  4367,  4368,   386,  1397,   509,
     389,   604,  4509,   386,  1874,   625,   389,   476,   186,   647,
     629,  4458,   629,   696,  4157,  4158,  3209,   827,   127,   546,
    4163,   386,   629,   386,   389,   822,   389,   822,  4069,   681,
     822,  4069,   455,  1432,  1209,   614,  2022,   386,   364,   823,
     389,  3591,   484,  3571,  3572,  2726,   194,   386,   365,   366,
     389,   571,   571,  2102,   371,  2041,   647,   636,   814,   815,
     816,   817,   818,   819,    18,    19,  2058,  2068,   593,   492,
    5242,  2752,  4608,  2754,    18,    19,  4426,  2058,    18,    19,
    2081,   827,   371,  2084,   585,   655,   656,   419,   372,   419,
    2082,   827,   385,  3286,  3287,  3288,  3289,   571,   240,   827,
     614,  2082,   629,  2089,   593,  2061,   571,  4010,   400,  4012,
     823,   197,  2098,  3497,   827,   827,   534,   647,   400,    18,
      19,   386,   596,  5109,   389,   386,  5112,   743,   389,  2115,
    2868,  3621,   444,   445,  3476,  3625,   282,  4509,     0,   248,
     647,   827,   565,    18,    19,   647,  2132,  2133,  2134,   542,
     249,     9,   497,   277,  3309,  3539,   280,   386,   827,   828,
     389,   186,    64,  2149,  4996,  4157,  4158,  2153,   448,  3909,
    4687,  4163,    74,    31,   647,  2161,   275,   194,   748,   749,
    2166,    18,    19,   386,   741,   742,   389,    89,  2174,   827,
    4652,  4653,  2178,  2179,  3463,   386,   619,   387,   389,   479,
     532,   386,   532,   400,   389,    23,    18,    19,   534,  2178,
    2179,   386,    35,   636,   389,    18,    19,    35,  2611,    22,
     368,  2207,  2208,   156,   370,  2211,   552,  2213,  2098,  1404,
     623,    49,  2213,   647,   386,  2221,   827,   389,  2207,    62,
     797,   266,   235,    61,    62,  2115,  3522,  1646,   827,  3525,
    3525,  2237,  5424,  5425,   586,   414,   586,   137,   647,   276,
      13,  1436,  2132,   386,   647,   160,   389,   732,   285,  4317,
     263,   588,   152,   386,  1673,   386,   389,   570,   389,    13,
    2245,   563,   647,  2269,   647,    18,    19,   604,  2253,   160,
    3714,  2161,   100,    13,    18,    19,  2166,   827,   647,  1698,
     386,    18,    19,   389,  4051,   429,  5324,   652,   647,   386,
    1485,    13,   389,   827,   828,   508,   823,   643,   563,  5305,
    2306,  2307,   216,  3747,    13,   827,   671,   386,   131,  2235,
     389,  3755,  2238,   235,    13,  2327,  3458,   386,  3762,  2245,
     389,   386,   441,   368,   389,  4488,  2327,  2253,    18,    19,
     386,  1523,   212,   389,   827,    18,    19,   386,    18,    19,
     389,  3473,    13,    18,    19,  3832,   563,  3834,  3472,   263,
     387,    18,    19,   241,  4908,  3842,   216,  2363,  2399,  4913,
    3847,  3848,   647,  3850,  3660,  3852,   647,   140,  3855,  3856,
    3857,  3858,  3859,  3860,  3861,  4233,  3863,  3864,  3865,   822,
      87,   227,   825,   229,   827,  2391,   140,   400,  4801,   823,
    4803,  2432,   602,   606,    21,  2401,   194,   667,   647,   669,
     140,   108,   562,   263,  2410,   565,  4264,    18,    19,  2415,
     238,  2417,   386,  2419,  2415,   389,  2306,  2307,   140,   823,
     823,    48,   386,   827,   647,   389,   386,    18,    19,   389,
     258,   140,   764,   765,  2360,   212,   647,   650,   823,  2480,
     823,   140,   647,   271,  2450,    18,    19,   657,   246,   127,
    2456,   611,   647,  2391,   823,   167,  2462,  2463,  2464,  2465,
    2466,  2467,  2468,  3499,   823,     7,  2472,   386,  2474,   140,
     389,  4758,  2410,    18,    19,   647,  4488,   822,  2484,   562,
    2486,  2487,   565,  2489,   828,  2491,  2492,   285,  2494,  2495,
    2496,   386,  3788,  3788,   389,  2501,  4192,  3871,  2504,    19,
    2506,  5055,    18,    19,   647,  2511,  3503,  3095,  2514,  2515,
     234,   235,  3886,  2458,   647,   230,   647,  3105,  3106,  2525,
    2410,  2527,  4809,  4810,  2469,  2531,   354,  5054,   815,   386,
    2475,  3893,   389,  3893,   235,   680,   823,   261,   823,  5021,
    5022,   647,   823,    18,    19,  2551,   691,    18,    19,   212,
     647,    77,    18,    19,   386,  2561,  2562,   389,   680,   563,
    2505,    18,    19,   386,  2509,   602,   389,   455,   647,   691,
    3450,  2516,  2517,  4801,   823,  4803,   680,  2583,   647,    18,
      19,  2587,   647,  2235,   794,   455,  2238,   691,   680,  5116,
    5117,   647,  5291,  2245,   717,   718,   138,  2603,   647,   691,
     823,  2253,   144,  2022,   492,   212,  2612,  2613,  2614,  2615,
    2616,   815,   823,   936,  2603,   492,   939,    26,   823,   823,
     657,   944,  2041,    61,    62,  2515,   949,  2633,   823,    61,
      62,  2637,  4392,   386,  2610,   235,   389,   822,    38,    71,
    2661,   826,   386,    18,    19,   389,    46,   622,   476,   386,
     625,   823,   389,    18,    19,    18,    19,    18,    19,  3872,
    3873,  2551,  5054,  5571,    18,    19,  2612,   565,  2614,  2615,
    4074,    18,    19,   647,   432,    84,    12,   565,  4106,  4107,
     823,    18,    19,   647,  3919,   822,   228,   647,   565,  4757,
     823,   636,   823,  2583,   639,   453,   386,  2587,   823,   389,
      18,    19,   827,   386,   655,   656,   389,   798,  2360,    19,
     822,   386,  2718,   822,   389,  2134,  2722,  3952,  3953,   386,
     548,   822,   389,   822,  5116,  5117,   823,   818,   647,   822,
     141,   619,   822,  3594,   823,  5118,   262,   495,   827,   827,
     831,   832,   619,  3978,   823,   822,    61,    62,   636,  4045,
     822,   823,   647,  5452,   823,  2174,    71,   794,   823,   636,
    2766,  2767,   600,   822,  3465,  3645,  3646,   823,   823,    84,
    2776,    19,   827,   716,   823,   386,   108,  2783,   389,   805,
     806,   822,  2758,   621,   622,   120,   823,  2776,   822,  3896,
     647,   822,  2798,  4258,  2800,   386,  4261,  4262,   389,  2805,
    4174,   343,  2221,  2809,  2810,  4179,  3959,    64,   822,  4183,
    4172,   822,  4172,   386,   822,   647,   389,    74,  2237,  3893,
    1096,  1097,  3964,  1099,   647,  1101,   444,   445,   237,   150,
     151,   141,    89,  3896,  3896,   167,  4532,  4533,  4906,  2845,
    4763,   386,     7,   822,   389,   822,  2852,  2853,   492,   823,
    2835,   822,   319,   320,    26,  2861,  2862,   324,   325,   823,
     197,    26,  2868,   823,   822,  2877,   822,  2873,   200,   571,
     386,   823,  2878,   389,   823,   827,  2877,  2878,   827,   197,
     822,  4023,  2923,   822,  2860,   822,  4373,  4374,  4375,  4376,
     822,   226,   122,   141,   647,   125,   823,   823,  1293,  1294,
     827,   827,  2878,   647,   823,   523,   524,   525,   828,  2835,
     647,   386,    84,   322,   389,   386,   822,  5300,   389,    84,
     386,   565,   212,   389,  2930,  2931,  2932,   823,   823,   386,
     822,   827,   389,   344,   822,  4705,   193,    77,  2923,  2960,
    4710,  2962,   199,   822,  2363,   822,  2952,   386,   822,   122,
     389,  2957,  5020,    93,   822,  2845,   822,   647,   188,   822,
     369,   141,  2852,  2853,   647,   563,   823,   122,  5088,  2895,
    2896,  2897,   647,   823,   822,   619,   620,   827,   235,   144,
     647,   823,  2401,   822,   122,   827,   158,   125,   822,   219,
     212,   823,   636,   822,    32,     7,   822,  2923,  2417,   334,
    2419,  1584,  1585,   338,   823,  3011,   263,  4369,   827,  4369,
     345,   386,  2544,  2545,   389,   188,  4390,  3023,  3024,  3025,
     822,   386,  3023,   386,   389,   386,   389,   823,   389,  4242,
    4243,   827,   386,   188,   344,   389,   647,   822,  3044,   386,
    2235,    79,   389,  2238,   823,  3051,   219,   823,   827,   386,
     188,   827,   389,  2245,   823,  4208,   647,   822,   827,   822,
     290,  2253,   822,  4060,   219,   237,  4219,   822,   386,   135,
     823,   389,   237,  4843,   647,  2494,   822,  4847,  3084,   823,
    4484,   219,  3088,   108,  3090,   823,   823,   419,   822,   827,
    3096,   426,   503,   504,  3100,   823,   344,   823,   418,   827,
     823,   827,   647,  3109,   827,   823,  1150,  1151,  4512,   827,
     636,  3117,  2531,   125,   480,   823,   154,   290,    59,   827,
     823,   653,   384,   823,   827,   265,   138,   827,  3134,   655,
     656,   647,   144,   823,  3140,   290,   822,   546,   822,  4909,
     823,   822,   372,   400,  4914,    21,   764,   765,   823,   823,
     322,   377,   290,   827,  3160,   490,   823,   322,  5578,   823,
     417,   822,  3168,   827,   344,  2360,  3172,  3173,   562,   823,
     823,   823,   647,   827,   827,   827,   647,   822,   822,    33,
     823,   647,  3188,  2835,   827,  3191,  5578,   823,  3194,  3195,
     647,   827,   822,   503,   504,   380,   221,   369,   822,   372,
      26,   822,   342,   823,   369,  4501,    13,   827,   647,   823,
    4506,  4506,   823,   827,  2633,   197,   228,   372,  2637,  3225,
     629,   822,   748,   749,   100,    33,   823,   823,   368,   822,
     827,   827,   823,   565,   372,   176,    43,   823,    80,   180,
      82,   827,   822,  2895,  2896,  2897,    12,   231,   823,   103,
     823,    77,   827,   194,   586,   503,   504,   822,    84,   823,
     822,   518,   823,   827,    64,   823,   827,   822,   122,   827,
     822,  2923,   647,   823,    74,   822,  3282,   827,   823,   611,
     156,   822,   647,   125,   647,   450,   647,    94,   823,    89,
     430,    98,   827,   647,   822,   627,   631,   822,  3188,   823,
     647,   823,   246,   827,   823,   827,   148,   823,   827,   823,
     647,  4069,  3318,   827,   649,  3321,   192,  3323,   194,   822,
     822,   194,   823,   503,   504,   141,   827,  3333,   822,   647,
     822,   343,    37,   141,   188,   822,   212,   822,   822,   748,
     156,   217,   108,  3319,   822,   187,   603,  3323,   823,   197,
     823,   177,  3328,  3329,   827,   231,  3332,   823,   184,   822,
     372,   127,   238,   593,  2783,   823,   823,   822,   393,   827,
     246,    15,   141,   822,   546,   822,   414,    21,   403,  2798,
     822,   546,   258,  3309,   823,   410,   822,   822,   822,   330,
    4794,   245,   532,   193,   822,   271,   822,   822,   436,    43,
     276,   812,   813,   814,   815,   816,   817,   818,   819,   285,
     115,   237,   823,    57,    58,   822,  4986,   122,   823,    63,
     593,   823,   827,  4576,  4577,   827,  4579,   822,  3318,  3435,
     822,  3321,    35,   823,   200,   235,   290,   827,   593,   477,
    5508,   249,   246,   620,   122,  4680,   253,   125,   823,  3455,
     500,    13,  5520,  4586,  4587,   593,   171,   629,   823,   500,
     823,   823,   823,   263,   629,   827,   212,   275,   828,   823,
     787,   788,    26,   790,   179,   827,   823,   243,   354,  5547,
     160,   161,   166,   188,   822,   276,  3492,   428,   194,   514,
    3496,  3497,   666,   667,   562,   669,   322,   166,   542,  3505,
     538,   377,   812,   813,   814,   815,   816,   817,   818,   819,
     188,   387,  3518,   122,   219,  5290,  3522,   157,   372,  3525,
     286,   201,    64,    77,   331,   542,  3502,   141,   344,  3518,
      84,    12,    74,  3539,   214,   828,   344,   363,   822,  4419,
     827,   219,   396,   369,   827,  3551,  3552,    89,   822,  3525,
    3551,  3552,    96,   828,  3560,  3561,  3562,   365,   366,  3560,
    3561,  3562,   141,  5220,   812,   813,   814,   815,   816,   817,
     818,   819,   822,    48,   254,   344,   748,   197,   140,   188,
     141,   156,   122,   748,   156,   290,   611,   267,   395,   111,
     823,    37,  3011,  3614,   823,   823,   160,   439,   825,   822,
     476,  3607,   826,  3609,   158,   160,   827,   160,   249,    48,
     219,   293,   290,   195,   294,  3505,   141,   417,   227,   160,
     229,   246,   383,   177,   500,   141,   194,   108,    37,   532,
     184,   582,   518,   441,   814,   815,   816,   817,   818,   819,
    4853,  4854,  4855,  2835,   193,  4950,   127,  3653,   188,  3655,
     355,   193,  3653,   419,  3660,   708,   141,  3309,   220,     7,
     100,    71,   367,    13,   633,  3084,   371,   372,   140,   115,
     823,   823,   548,    10,   828,   823,   122,   827,   358,   219,
     823,   290,  4835,   237,  4837,  4838,   823,   503,   504,  3695,
     823,  4996,   103,   235,   372,   503,   504,  3703,   823,   823,
    2895,  2896,  2897,   100,   823,   501,   115,   822,   516,   275,
     517,   122,   666,   122,  4867,  3134,   377,   708,   199,   614,
     546,   263,   562,   515,   249,    50,   602,   197,    30,   287,
     344,  2923,   498,   179,   503,   504,   827,   613,   614,   593,
     287,  4777,   188,   582,   827,   377,   486,   480,    71,   732,
     290,   571,   559,   273,   235,   827,   827,   657,   634,   826,
     636,   542,   827,   372,   249,   344,  5071,   828,   322,  3775,
     179,   122,   249,   219,    77,  3194,  3195,   188,   252,   188,
     816,   657,  3788,   344,   560,  3791,  3792,  5083,   181,   194,
    5003,  5096,   827,  5006,  5007,  5008,  5009,   563,   238,   565,
     194,    88,    27,   629,   827,   286,   827,  3813,  3814,   363,
     219,  3817,   827,  3819,    21,   369,  3822,   827,   258,   344,
     558,   697,   378,   645,   136,   156,   823,   728,   344,  3835,
     563,   271,   372,   599,   245,   568,  5526,   188,    48,    64,
     786,   238,   696,   455,   290,   611,    71,   653,   372,   728,
      75,   636,    77,   727,   571,   158,   827,   502,   400,   344,
     826,   258,   315,  3282,    89,  3871,   571,     7,   219,    77,
     575,   110,   822,   578,   271,   417,   158,   400,   611,   290,
    3886,   290,  3888,   588,   582,    74,   400,   400,   593,   503,
     504,   596,  5105,   582,   627,   136,   261,   261,   400,  3905,
     125,  5114,  5115,   111,   136,   400,    48,   400,   389,   355,
    5123,   400,   400,   721,   354,   593,  4796,   584,   794,   618,
     653,   232,   748,   618,   503,   504,   372,   400,   804,   400,
     827,   827,   808,   500,   237,   709,   627,   377,   822,   290,
     491,   707,   503,   504,   822,   827,   355,   823,   823,   825,
     158,   827,   609,    57,   171,   447,   832,   354,   377,     7,
    5195,   372,   371,   372,   526,   527,   716,   529,   530,   531,
     111,   377,     7,  5278,   613,   591,  5260,   200,   503,   504,
     377,   521,   823,   197,   593,   396,   548,   503,   504,   823,
     823,   823,   546,   823,   823,   823,   812,   813,   814,   815,
     816,   817,   818,   819,   812,   813,   814,   815,   816,   817,
     818,   819,   823,   827,  4894,  3905,   815,   498,   503,   504,
     822,   372,   122,   689,   827,   125,  5201,   235,  4034,  3355,
     823,  3357,   827,   823,   823,   823,   476,   518,   263,  4045,
     823,  5276,   828,   812,   813,   814,   815,   816,   817,   818,
     819,   823,   823,   593,   823,   823,   823,   160,   828,   823,
     363,   823,   827,  4069,   822,  4071,   369,   819,  4074,   828,
     823,  4077,   827,   822,   822,   629,  4077,   828,   192,   476,
     827,   826,   563,   186,   565,  4061,   287,   568,   188,   287,
     287,   287,  5151,   287,   287,   827,   827,   160,   201,   377,
     582,   634,   746,   282,   827,   827,   827,   751,   548,   814,
     815,   214,  5396,   321,  3309,   582,   828,   822,   599,   219,
     828,    19,   603,    13,  4130,   571,   827,   160,   197,   575,
     611,   339,   578,   444,   445,   438,   255,   781,   582,   827,
     365,   366,   588,    35,   582,   194,   371,   593,   432,   828,
     596,   548,   377,   797,   828,   363,   828,  4198,   828,   197,
     828,   427,   571,   266,   267,   827,   575,   823,  4174,   578,
    4176,   614,   653,  4179,   614,    60,   607,  4183,  5462,   588,
    5464,   513,   593,   404,   593,   823,  4192,   596,   194,   401,
     290,   294,   417,   827,   748,   789,  5480,  4203,   812,   813,
     814,   815,   816,   817,   818,   819,   829,   228,   403,   823,
     144,   789,   856,   857,   103,   859,   860,   614,   403,   571,
    4226,   668,   571,   341,  4230,   571,   707,   827,   872,   794,
    5514,  5515,   828,   812,   813,   814,   815,   816,   817,   818,
     819,   379,   593,   546,   823,    60,   477,   263,   263,  5545,
    5545,   812,   813,   814,   815,   816,   817,   818,   819,   362,
     263,   597,  5558,  5558,  4270,  4271,   158,  5563,  5563,   402,
     162,   496,   372,   706,  5570,  5570,   457,   458,   459,   460,
     461,   462,   463,   822,   822,   696,  4292,   812,   813,   814,
     815,   816,   817,   818,   819,   598,   377,   813,   814,   815,
     816,   817,   818,   819,   672,   672,   249,   160,  4314,   160,
     202,   160,   160,   416,   160,   160,   160,   708,   286,   641,
      19,   546,   791,   653,   968,   464,   629,   812,   813,   814,
     815,   816,   817,   818,   819,   377,  4226,   823,   546,   823,
     154,   245,   245,   823,   823,   828,  4292,   823,   582,   827,
     994,   571,   571,   571,    64,   563,   654,  5510,   823,   823,
     823,   827,  1006,   822,    74,   801,   828,   828,   814,   815,
     828,   828,   827,   582,   210,   377,  1020,   197,   603,    89,
    4270,   822,   827,   730,  4390,   212,  3712,  3713,   732,  1033,
    4396,  3717,   432,   372,    35,   287,   611,   827,   335,   156,
     822,   822,   554,    12,   822,   814,   815,   403,  5272,   500,
       7,   343,   403,   822,   492,   827,  4392,    73,   491,   532,
     731,   532,   500,   532,   735,   532,   737,  3753,    15,   740,
     655,   656,   377,  3759,  3760,  3761,   822,   263,  3764,   750,
     263,   822,   614,   591,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   366,   827,   563,   636,    63,   563,  4484,   372,
     705,   582,   793,   193,  4490,   827,   582,   565,   450,   199,
     382,   377,   827,   593,   377,  4501,  5376,   823,   160,   823,
    4506,   822,   822,   822,   729,   822,  4512,   160,   160,   160,
     160,   160,    56,   160,   160,   160,   160,   158,   160,   212,
     160,   162,    66,   748,   749,   235,   418,   160,   160,  4505,
     160,   160,    76,  5413,   160,   160,   160,   160,  4544,   160,
     160,   619,   620,   160,  1188,   160,    90,    91,    92,   160,
     442,   822,  4558,   263,   160,   160,   160,   160,   636,   160,
     160,   202,   106,   822,   160,  1209,    21,   160,   160,  5566,
     160,   160,   160,  1217,  1218,   467,    19,   822,   822,   785,
     822,  5445,  1226,  1227,  1228,  1229,  1230,  1231,   413,   822,
    4596,    62,   247,   247,  4600,  1239,  1240,  5477,  1242,  1243,
     720,    21,  4608,  1247,  1248,   751,    48,  1251,  1252,  1253,
    1254,   822,  1256,  1257,   494,   687,   687,   571,   823,   511,
    1264,  1265,   285,  1267,  1268,  1269,  1270,  1271,   827,    12,
    1274,  1275,  1276,  1277,  1278,  1279,  1280,  1281,  1282,   823,
    1284,   823,   160,  1287,  1288,   100,   287,   823,  1292,  4655,
     542,   546,  1296,  1297,  1298,   823,  5520,   827,   827,   816,
     384,   231,   822,   282,   160,  1309,  1310,  1311,   384,   604,
    1314,   197,   827,  1317,  1318,  1319,  1320,  1321,   823,   823,
     823,   258,  1326,  5547,  1328,   258,   823,  4693,   823,  4695,
    4696,    48,   492,   390,  1338,  1339,   217,   160,   160,   827,
     500,   156,  1346,   160,  1348,  1349,    48,   417,   403,  4715,
     822,  4687,   160,   228,    21,   792,  1360,  1361,  1362,   103,
    1364,  1365,   245,  4729,  1368,  1369,  1370,   822,   278,  1373,
    1374,  1375,  1376,  1377,  1378,  1379,  1380,   111,   828,   194,
    1384,   382,    77,   111,   822,  1389,   368,   162,   822,   729,
     440,   582,   400,   125,   822,   822,   822,   212,    93,   565,
    1404,   822,   217,   822,   814,   565,   823,   823,   822,  4775,
     383,   822,   228,   372,   472,   377,   822,   418,   823,   245,
     823,   636,   823,   238,  4203,   197,  4775,   823,  4794,   333,
     400,   246,  1436,   100,   823,  4801,   823,  4803,   432,   134,
     582,   442,   210,   258,    21,  4845,   350,   827,   518,   377,
     269,  4230,   582,   827,   611,   197,   271,   258,   258,   619,
     620,   276,    56,   832,   832,   832,   467,   258,   697,   160,
     285,   126,    66,   277,    48,    21,   636,   403,    48,  4729,
      48,  1485,    76,   153,    48,   816,   477,   822,  1492,   156,
      35,    35,   625,  5335,   729,   608,    90,    91,    92,   125,
     263,    64,   203,   263,  4870,    35,    35,   372,  5350,    21,
     511,   822,   106,   372,   372,    27,   415,   377,    77,  1523,
     377,  1525,  5364,   822,    21,   823,  1530,   194,   828,   487,
     377,   827,    62,   603,   823,   823,   823,  4903,  4904,   354,
     823,   542,   823,   515,   823,   212,   823,   341,   427,   265,
     217,   827,    64,    48,   387,   823,   377,   175,  4924,    71,
     285,   562,   377,    75,   565,    77,   384,  4933,   210,    21,
     265,   238,   387,   249,   147,  5417,   372,    89,   197,   246,
     258,   823,   112,   258,   488,   115,   822,   808,  5430,   822,
     822,   258,   822,   123,   804,   160,   405,   823,  5440,   827,
     120,  1605,   120,    48,   271,    48,  4987,    48,   387,   276,
     108,  5011,   142,   125,   372,  4981,   377,   367,   285,   822,
    1624,   619,    15,   620,    21,   827,    81,   143,   111,   827,
    4996,  5473,   372,   822,   827,   228,   372,    21,   515,   823,
    5482,   823,  5484,   341,   823,   173,   550,   342,    48,   384,
    5016,   377,   263,   417,   194,    21,   827,   160,  5500,   189,
     822,   476,   822,   567,   276,   823,   162,   318,   822,   167,
     365,   366,   608,   368,   673,   205,   608,   397,  1682,    48,
      21,   636,   823,   827,   194,   500,   823,   354,   112,  5531,
    5532,   203,   823,   827,  5536,   162,   636,   608,   246,   822,
     822,   263,   200,   823,   823,   823,   822,   822,   822,   136,
     377,   822,   822,   136,   136,   822,   158,  5083,   573,   377,
     387,  5087,   823,   537,   827,   472,   483,   387,  5094,  5095,
     260,   149,   678,   548,   653,   430,   565,   235,  5104,   333,
     691,    48,    48,   822,   534,   155,   691,   691,   554,   279,
      32,   263,   829,  5119,    64,   384,   350,   633,   823,    64,
     483,    19,   823,   702,   553,  5131,     4,   823,   197,   633,
      32,   384,   823,   143,   384,  5141,   691,   483,   701,   688,
    5146,   464,     6,    21,   246,   377,   377,   602,   286,   154,
     825,   134,  5151,   171,   130,   608,   633,   154,   230,   614,
     292,   825,   829,   124,   751,  5151,    83,   702,    54,   476,
     143,  5177,   574,   160,   154,  5151,   346,   347,   348,   634,
     481,   636,   825,   353,   215,   574,   356,   228,    54,  4608,
     825,   827,   154,   500,   781,   194,   194,   532,  5204,   194,
      48,   574,   657,   635,  5225,   454,   125,   372,  5214,   231,
     797,   377,   698,   365,   366,   822,   500,   196,   160,   371,
     802,   331,   160,   372,    12,   377,   160,  3480,   795,  3234,
    5236,  3228,  3230,  5239,  4695,  4698,  4655,   471,   408,   409,
    3232,   548,   697,  3868,   827,  4709,  5252,  3688,  4906,  3884,
    1214,  5057,  4722,  5181,   488,  5358,  1900,  5411,  4924,  1719,
    1904,  5547,  5508,  5063,   434,   417,    46,  1072,  1912,  2805,
    1914,  4034,  5312,   860,  5038,  5201,   414,  2867,  5038,  5516,
    5427,   419,  5038,  5038,  5038,  5038,  5038,  5293,  5038,  5038,
    5038,  5328,  5427,  5038,  5038,   602,  4715,  5409,  5038,  5354,
    5353,  3893,  2447,  3476,  1175,    18,    19,   614,  4369,  2453,
    1954,  4172,  2584,  4392,  5204,  3332,   550,  3329,  3328,  4125,
    4826,  5302,  4593,  5385,  5314,  5312,  5011,   634,  2426,   636,
    2544,  4193,  4394,   567,  5375,  3323,  4244,  4192,   508,   794,
    3764,  3731,  3763,  4622,   496,  4247,  5324,  5375,  5015,   804,
     657,  3431,  4843,  4909,  1998,  1999,  2000,  4914,  1873,  4857,
     498,  5367,  4847,  3096,  5385,  4600,  4219,   822,   823,  4388,
     825,  3006,   827,  3898,  2999,  3311,  2545,   832,  4672,  2545,
     518,   968,  2544,  2314,  1667,  1695,  5038,  2316,  1077,  3794,
     697,  3126,  2852,  2037,   546,  1851,  2858,  1826,  2042,  4052,
    3225,  2841,  3505,   116,   117,   118,   119,   120,   578,    64,
    4417,  2216,  2089,  1007,  2394,  1339,  2764,  2061,  2020,  1006,
    2722,  4950,  4980,  5278,  2068,   563,  5432,  2878,  1006,  2073,
     568,  2075,  2878,  5439,  2878,  2878,   606,  2081,  5477,  2083,
    2084,  1258,  5376,  5293,  4805,  5497,  4535,  5094,   586,  3817,
    5095,   603,  1232,  4105,  4819,  1608,  4546,  4981,  3788,  3567,
    4841,   599,  1090,  4945,  2401,    16,  2099,  2771,  1703,  3502,
    1444,  4508,  3502,   611,  1703,  5481,  1606,  4065,  3500,   649,
    5486,  4489,  1156,  4501,  1572,  2300,  1157,   794,  2301,   627,
    1703,  1694,  5144,  5145,  2792,  3188,  2190,   804,  4783,  1703,
    5494,  5476,  4153,   655,   656,  4583,  5570,  5563,  4506,  4458,
     223,   224,   225,   226,  5520,   653,   823,  4264,   825,  4812,
     827,  4567,  2238,  5286,  3024,   832,  1342,  5526,  3835,  1521,
    2923,    43,    43,  2253,  1519,  2231,  2233,  2845,  2994,  5545,
    1436,  5547,   994,  2603,  1477,  1662,  2595,  2604,  5554,  5201,
    5526,  4772,  5558,   705,  4955,  1130,   995,  5563,    11,  1481,
      11,  5473,  5303,  3504,  5570,  3901,  4282,  4389,  4717,   707,
    3807,    -1,    -1,    -1,    -1,    -1,    -1,   729,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1214,    -1,    -1,
      -1,  2235,    -1,    -1,  2238,    -1,   748,   749,  1214,    -1,
    1214,  2245,  2246,    -1,    -1,    -1,  2250,  5259,  5260,  2253,
      -1,    -1,  2256,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   334,    -1,   336,   337,   338,    -1,    -1,    -1,    -1,
    1217,  1218,   345,    -1,    -1,    -1,    -1,    -1,    -1,  1226,
    1227,    -1,    -1,  1230,  1231,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1239,  1240,    -1,  1242,  1243,    -1,    -1,    -1,
    1247,    -1,    -1,    -1,  1251,  1252,  1253,  1254,    -1,  1256,
      -1,    -1,    -1,   386,    -1,    -1,   389,  1264,  1265,    -1,
    1267,  1268,    -1,  5335,    -1,    -1,    -1,  1274,    -1,    -1,
    1277,  1278,  1279,  1280,  1281,  1282,    -1,  1284,  5350,    -1,
    1287,  1288,    -1,    -1,    -1,  1292,    -1,    -1,    -1,  1296,
    1297,  1298,  5364,   426,    -1,    -1,  2360,    -1,    -1,    -1,
      -1,    -1,  1309,  1310,  1311,    -1,    -1,    -1,    -1,    -1,
    1317,  1318,  1319,  1320,  1321,    -1,    -1,    -1,    -1,    -1,
      -1,  1328,    -1,    -1,  5396,    -1,    -1,    -1,    -1,    -1,
      -1,  1338,  1339,    -1,    -1,    -1,  5408,  5409,    -1,  1346,
      -1,  1348,  1349,    -1,    -1,  5417,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   489,   490,  5430,   116,
     117,   118,   119,   120,    -1,    -1,    -1,    -1,  5440,    -1,
      -1,    -1,    -1,    -1,    -1,  5214,    -1,    -1,    -1,    -1,
      -1,  2445,  1389,    -1,  2448,  2449,    -1,    -1,    -1,    -1,
    5462,    -1,  5464,    -1,    -1,    -1,    -1,  5236,    -1,    -1,
    5239,  5473,    -1,    -1,    -1,    -1,    -1,    -1,  5480,    -1,
    5482,    -1,  5484,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5038,    -1,    -1,  5038,    -1,  5500,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5514,  5515,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5531,
    5532,    -1,    -1,    -1,  5536,    -1,   223,   224,   225,   226,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   631,    -1,
      -1,  2565,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   647,   648,   649,    -1,  1525,    -1,
      -1,    -1,    -1,  1530,    -1,    -1,    -1,    -1,  5367,  5144,
    5145,    -1,  5144,  5145,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2618,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2627,  2628,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   334,    -1,   336,
     337,   338,    -1,    -1,  2648,  2649,  5201,  2651,   345,    -1,
    2654,  2655,  2656,  2657,  2658,    -1,    -1,  2661,  1605,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2670,    -1,    -1,    -1,
      -1,  2675,    -1,  2677,    -1,  2679,  2680,  1624,  2682,  2683,
      -1,    -1,    -1,  2687,  2688,  2689,    -1,    -1,    -1,  2693,
    2694,  2695,    -1,  2697,    -1,  2699,    -1,  2701,    -1,  2703,
      -1,  2705,    -1,    -1,  5259,  5260,  2710,  5259,  5260,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2726,    -1,    -1,    -1,    -1,   965,    -1,   426,
      -1,    -1,  2736,    -1,    -1,  1682,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2750,    -1,  2752,    -1,
    2754,    -1,    -1,    -1,  2758,    -1,   994,    -1,    -1,    -1,
    2764,  2765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5554,    -1,    -1,    -1,    -1,
    5335,    -1,  1020,  5335,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   489,   490,    -1,  5350,    -1,    -1,  5350,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5364,
      -1,    -1,  5364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2835,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5396,    -1,  2847,  5396,  1083,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5408,  5409,    -1,  5408,  5409,    -1,    -1,
      -1,    -1,  5417,    -1,    -1,  5417,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5430,    -1,    -1,  5430,    -1,
      -1,    -1,    -1,    -1,    -1,  5440,    -1,    -1,  5440,    -1,
      -1,  2895,  2896,  2897,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5462,    -1,  5464,
    5462,    -1,  5464,    -1,    -1,    -1,    -1,    -1,  5473,  2923,
      -1,  5473,    -1,    -1,    -1,  5480,    -1,  5482,  5480,  5484,
    5482,    -1,  5484,    -1,   631,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5500,  2950,    -1,  5500,    -1,
      -1,   648,   649,  1900,    -1,    -1,  2960,  1904,  2962,  5514,
    5515,    -1,  5514,  5515,    -1,    -1,    -1,  1914,    -1,    -1,
      -1,  1209,    -1,    -1,    -1,    -1,  5531,  5532,    -1,  5531,
    5532,  5536,    -1,    -1,  5536,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3019,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    34,    35,    -1,    -1,    -1,
      -1,    40,    -1,    42,    -1,    44,    45,    -1,    -1,    -1,
      -1,  1998,  1999,  2000,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    62,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2042,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   112,  2061,    -1,   115,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   123,    -1,  2073,    -1,  2075,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     159,    -1,    -1,    -1,    -1,    -1,  1404,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1436,    -1,
      -1,    -1,    -1,    -1,  1442,    -1,   205,   206,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1456,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1485,   247,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   260,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,
     289,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,  2246,
      -1,    -1,    -1,  2250,    -1,  3309,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   327,   328,
     329,    -1,    -1,    -1,    -1,  3339,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3347,    -1,    -1,    -1,   346,   347,   348,
      -1,    -1,    -1,    -1,   353,    -1,    -1,   356,    -1,    -1,
      -1,    -1,    -1,    -1,    14,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   374,   375,    -1,    -1,    -1,
    3384,  3385,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      50,    51,    -1,    -1,    -1,    -1,  3410,    -1,    58,   408,
     409,    -1,    -1,    63,    64,    -1,  3420,    -1,  3422,    -1,
    3424,    -1,    -1,    -1,    -1,    -1,  1664,  1665,  1666,    79,
      -1,    -1,    -1,    -1,    -1,   434,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,    -1,    -1,  3458,    -1,    -1,    -1,    -1,  3463,
      -1,  3465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   131,   132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   143,   144,    -1,  3500,   496,    -1,    -1,
      -1,   500,    -1,    -1,    -1,    -1,   156,    -1,    -1,    -1,
      -1,    -1,    -1,   512,    -1,    -1,    -1,    -1,    -1,    -1,
     170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3543,
     190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,   218,    -1,
      -1,    -1,    -1,   572,    -1,    -1,   575,  3581,    -1,   578,
     579,   580,   581,   233,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3614,    -1,    -1,    -1,   264,    -1,    -1,    -1,  2565,    -1,
      -1,    -1,   621,   622,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   281,    -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     649,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2618,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2627,  2628,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3694,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2648,  2649,    -1,  2651,    -1,    -1,  2654,  2655,  2656,
    2657,  2658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2670,    -1,    -1,    -1,    -1,  2675,    -1,
    2677,   381,  2679,  2680,    -1,  2682,    -1,    -1,    -1,    -1,
    2687,  2688,  2689,    -1,    -1,    -1,  2693,  2694,  2695,    -1,
    2697,    -1,  2699,    -1,  2701,    -1,  2703,    -1,  2705,    -1,
      -1,    -1,    -1,  2710,   414,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   425,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2736,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   447,    -1,    -1,
     450,    -1,   452,    -1,    -1,   455,    -1,    -1,    -1,    -1,
      -1,  2758,    -1,    -1,    -1,   465,   466,  2764,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   475,    -1,   477,   827,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,    -1,    -1,
      -1,    -1,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3890,  3891,   538,    -1,
      -1,    -1,    26,    27,    28,   545,    -1,    -1,    -1,    -1,
    2847,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,    -1,  3923,
      -1,    -1,    -1,    -1,  2162,    -1,  2164,    61,    62,    63,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    71,    -1,   589,
      -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,
      84,   601,  3956,    87,  3958,   605,    -1,  3961,  3962,    -1,
    3964,    -1,    -1,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,  3975,    -1,    -1,    -1,    -1,  3980,   111,    -1,  3983,
      -1,    -1,  3986,  3987,    -1,    -1,   636,    -1,    -1,    -1,
      -1,   125,    -1,    -1,   644,   129,    -1,  2235,    -1,    -1,
    2238,    -1,    -1,  2950,  4008,    -1,    -1,    -1,    -1,    -1,
     660,   661,   662,   663,    -1,    -1,    -1,    -1,    -1,  4023,
      -1,    -1,    -1,    -1,   158,   675,  2264,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4048,    -1,    -1,    -1,    -1,    -1,
      -1,  4055,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4065,   712,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3019,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4102,  4103,
      -1,   235,   752,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2360,    -1,    -1,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    14,    -1,    -1,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    36,    -1,
      -1,    -1,   822,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4184,    -1,    50,    51,    -1,    -1,    -1,   321,    -1,    -1,
      58,    -1,    -1,    -1,    -1,    63,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2442,   339,    -1,    -1,  2446,    -1,
      -1,    79,    -1,  2451,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,  2476,  2477,
    2478,  2479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,
     394,    -1,    -1,   131,   132,    -1,    -1,    -1,    -1,   403,
    2508,    -1,    -1,    -1,    -1,   143,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4289,  4290,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2536,  2537,
      -1,    -1,   170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    35,
      36,    -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,   210,    -1,    -1,    61,    62,   215,   482,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    72,    73,    -1,    -1,
      -1,    -1,    -1,  4367,  4368,   233,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,
      -1,    97,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3339,   109,    -1,    -1,   264,    -1,    -1,    -1,
    3347,    -1,    -1,    -1,   538,   539,   540,   541,    -1,    -1,
      -1,    -1,   546,   281,    -1,    -1,    -1,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   563,
      -1,    -1,   566,    -1,    -1,    -1,    -1,  3384,  3385,    -1,
      -1,   157,   158,    -1,    -1,    -1,    -1,   163,    -1,    -1,
     166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     176,    -1,    -1,  3410,    -1,    -1,    -1,    -1,   602,    -1,
      -1,    -1,    -1,  3420,    -1,  3422,    -1,  3424,    -1,    -1,
      -1,    -1,   198,    -1,   200,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   209,    -1,   211,    -1,    -1,  4502,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4526,    -1,  4528,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   414,    -1,    -1,    -1,
      -1,    -1,    -1,  3500,    -1,    -1,    -1,   425,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   447,
      -1,    -1,   450,    -1,   452,    -1,    -1,   455,    -1,    -1,
     724,    -1,    -1,    -1,    -1,    -1,  3543,   465,   466,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,    -1,   477,
    2848,    -1,    -1,    -1,   748,   749,    -1,    -1,   486,    -1,
      -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   500,  4637,  3581,    -1,    -1,   505,   506,   507,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2895,  2896,  2897,
      -1,    -1,    -1,    -1,   380,  4669,    -1,    -1,    -1,    -1,
     538,    -1,    -1,    -1,    -1,    -1,    -1,   545,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   407,    -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,
      -1,  2939,   418,   419,    -1,   421,   422,   423,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   589,    -1,    -1,    -1,    -1,    -1,   443,    -1,    -1,
      -1,    -1,    -1,   601,    -1,    -1,    -1,   605,  4742,    -1,
      -1,  4745,    -1,    -1,    -1,   613,    -1,  3694,    -1,    -1,
      -1,   619,    -1,    -1,  4758,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   636,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   644,    26,    27,    28,
      -1,   497,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    21,    -1,    -1,    -1,    -1,    26,    27,    28,    -1,
      -1,    -1,    -1,    -1,  3042,  4809,  4810,   675,  4812,    -1,
      -1,    -1,    -1,  4817,    63,    -1,  3054,    -1,  3056,  3057,
    3058,  3059,    -1,  3061,  3062,    -1,   542,    -1,    77,    -1,
     546,    -1,    -1,    63,    83,    84,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    -1,   712,    -1,   562,    77,    -1,   565,
      -1,    -1,    -1,    83,    84,    -1,    -1,    87,    -1,    -1,
      -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,   585,
      -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,
     129,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   125,    -1,  3135,    -1,   129,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   623,    -1,   158,
    3148,    -1,    -1,    -1,   630,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   156,    -1,   158,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4945,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   822,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3923,    -1,    -1,    -1,
      -1,    -1,    -1,  4987,    -1,    -1,   235,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,  3956,
      -1,  3958,   242,   262,  3961,  3962,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3975,  5033,
      -1,    -1,   262,  3980,  5038,    -1,  3983,   753,   754,  3986,
    3987,    -1,    -1,    -1,  5048,   275,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4008,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5073,
      -1,  3309,   321,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   799,    -1,    -1,    -1,    -1,    -1,    -1,
     339,   321,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4048,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   339,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4065,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      21,    -1,    -1,    -1,  5138,    26,    27,    28,    -1,    -1,
    5144,  5145,    -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   403,  4102,  4103,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,    -1,
     400,    -1,    63,   403,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5188,    -1,    77,    -1,    -1,    -1,
      -1,    -1,    83,    84,    -1,    -1,    87,  5201,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     111,  5225,    -1,    -1,    -1,   455,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   482,   125,    -1,    -1,  4184,   129,    -1,
      -1,  5245,    -1,  5247,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   482,  5257,    -1,  5259,  5260,    -1,    -1,    -1,
      -1,    -1,   492,    -1,    -1,   156,    -1,   158,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   538,
     539,   540,   541,    -1,    -1,    -1,    -1,   546,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   538,   539,
     540,   541,    -1,    -1,   563,    -1,   546,   566,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5333,
      -1,  5335,    -1,   563,    -1,   565,   566,    -1,    -1,    -1,
     231,    -1,  4289,  4290,   235,    -1,  5350,  5351,    -1,    -1,
      -1,   242,    -1,   602,    -1,    -1,    -1,    -1,    -1,    -1,
    5364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   262,   602,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5385,    -1,    -1,    -1,  3623,    -1,    -1,    -1,   619,
      -1,  5395,  5396,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5408,  5409,   636,    -1,    -1,    -1,
      -1,    -1,    -1,  5417,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3662,    -1,  5430,    -1,    -1,    -1,
     321,    -1,    -1,  5437,    -1,    -1,  5440,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   339,    -1,
      -1,  5455,    -1,    -1,    -1,    -1,    -1,    -1,  5462,    -1,
    5464,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5473,
      -1,    -1,    -1,    -1,    -1,   724,  5480,    -1,  5482,    -1,
    5484,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   724,    -1,  5500,    -1,    -1,   748,
     749,    -1,    -1,   394,    -1,    -1,    -1,    -1,    -1,   400,
    5514,  5515,   403,    -1,    -1,    -1,    -1,  5521,   748,   749,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5531,  5532,    -1,
      -1,    -1,  5536,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4502,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   455,    -1,    -1,  5571,    -1,    -1,
      -1,    -1,    -1,    -1,  5578,    -1,    -1,    -1,    -1,  4526,
      -1,  4528,    -1,    -1,    -1,    -1,    -1,  3825,    -1,    -1,
      -1,   482,   822,    -1,  3832,   825,  3834,    -1,    -1,    -1,
      -1,   492,    -1,    -1,  3842,  3843,    -1,    -1,    -1,  3847,
    3848,    -1,  3850,    -1,  3852,    -1,    -1,  3855,  3856,  3857,
    3858,  3859,  3860,  3861,    -1,  3863,  3864,  3865,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   538,   539,   540,
     541,  3889,    -1,    -1,    -1,   546,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   563,    -1,   565,   566,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4637,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   602,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4669,    -1,    -1,    -1,    -1,    -1,   619,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     7,    -1,    -1,
      -1,    -1,    12,    -1,    14,   636,    -1,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    26,    27,    28,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,
      -1,    61,    62,    63,    64,  4742,    -1,    -1,  4745,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,
      -1,  4758,    -1,    83,    84,    -1,    -1,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    96,    -1,    -1,    -1,
      -1,    -1,    -1,   724,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   125,    -1,   748,   749,   129,
      -1,    -1,  4809,  4810,    -1,  4812,    -1,   137,   138,    -1,
    4817,    -1,    -1,    -1,   144,  4113,  4114,    -1,  4116,    -1,
      -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,   158,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   822,    -1,    -1,   825,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   233,    -1,   235,    -1,    -1,    -1,    -1,
      -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,  4232,    -1,    -1,    -1,  4945,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     7,    -1,    -1,    -1,    -1,    12,    -1,
      14,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    26,    27,    28,    -1,    -1,    -1,    -1,    -1,
      -1,   321,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   339,
      -1,    -1,    -1,   343,    58,    -1,    -1,    -1,    -1,    63,
      64,    -1,    -1,    -1,    -1,    69,  5033,    -1,    -1,    -1,
      -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,
      84,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   381,    96,    -1,    -1,    -1,    -1,   387,    -1,    -1,
      -1,    -1,    -1,    -1,   394,    -1,  5073,   111,    -1,    -1,
      -1,    -1,    -1,   403,    -1,  4373,  4374,  4375,  4376,    -1,
      -1,   125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   137,   138,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,   435,    -1,    -1,   152,    -1,
      -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,
     450,   451,   452,    -1,    -1,   169,    -1,    -1,    -1,    -1,
      -1,  5138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,
      -1,    -1,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5188,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
      -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   538,   539,
     540,   541,    -1,    -1,    -1,    -1,   546,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   563,    -1,    -1,   566,    -1,  5245,    -1,
    5247,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5257,    -1,    -1,    -1,    -1,    -1,  4554,    -1,    -1,   589,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4566,  4567,
      -1,    -1,   602,    -1,    -1,    -1,    -1,   321,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   339,    -1,    -1,    -1,   343,
      -1,    -1,    -1,    -1,    -1,    -1,   636,    -1,    -1,   639,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5333,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,   387,  5351,    -1,    -1,    -1,    -1,    -1,
     394,    -1,    -1,    -1,  4652,  4653,    -1,    -1,    -1,   403,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4685,  5395,    -1,
      -1,   435,    -1,    -1,   724,   725,   726,    -1,    -1,    -1,
    4698,    -1,    -1,    -1,    -1,    -1,   450,   451,   452,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   748,   749,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4727,
    5437,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5455,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   538,   539,   540,   541,    -1,    -1,
      -1,    -1,   546,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5521,    -1,    -1,    -1,    -1,   563,
      -1,    -1,   566,  4821,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   589,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4852,    -1,    -1,    -1,   602,    -1,
      -1,    -1,    -1,    -1,  5571,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   636,    -1,    -1,   639,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4921,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     724,   725,   726,    -1,    -1,    -1,    -1,  4985,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   748,   749,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5021,  5022,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,  5113,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,  5201,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,  5230,  5231,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,  5474,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,   492,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,   636,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
      -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,   807,
      -1,    -1,    -1,    -1,    -1,    -1,   814,   815,    -1,    -1,
      -1,    -1,   820,    -1,   822,    -1,    -1,    -1,   826,    -1,
      -1,    -1,   830,   831,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    46,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,   268,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,   583,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,   799,   800,
     801,    -1,   803,    -1,   805,    -1,   807,    -1,    -1,    -1,
      -1,    -1,    -1,   814,   815,    -1,    -1,    -1,    -1,   820,
      -1,   822,    -1,    -1,    -1,   826,    -1,    -1,    -1,   830,
     831,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,    -1,    -1,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,    -1,   799,   800,   801,    -1,   803,
      -1,   805,    -1,   807,    -1,    -1,    -1,    -1,    -1,    -1,
     814,   815,    -1,    -1,    -1,    -1,   820,    -1,   822,    -1,
      -1,    -1,   826,    -1,    -1,    -1,   830,   831,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,
     807,    -1,    -1,    -1,    -1,    -1,    -1,   814,   815,   816,
      -1,    -1,    -1,   820,    -1,   822,    -1,    -1,    -1,   826,
      -1,    -1,    -1,   830,   831,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,    -1,   799,
     800,   801,    -1,   803,    -1,   805,    -1,   807,    -1,    -1,
      -1,    -1,    -1,    -1,   814,   815,   816,    -1,    -1,    -1,
     820,    -1,   822,    -1,    -1,    -1,   826,    -1,    -1,    -1,
     830,   831,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,   799,   800,   801,    -1,
     803,    -1,   805,    -1,   807,    -1,    -1,    -1,    -1,    -1,
      -1,   814,   815,    -1,    -1,    -1,    -1,   820,    -1,   822,
      -1,    -1,    -1,   826,    -1,    -1,    -1,   830,   831,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,    -1,   799,   800,   801,    -1,   803,    -1,   805,
      -1,   807,    -1,    -1,    -1,    -1,    -1,    -1,   814,   815,
      -1,    -1,    -1,    -1,   820,    -1,   822,    -1,    -1,    -1,
     826,    -1,    -1,    -1,   830,   831,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
     799,   800,   801,    -1,   803,    -1,   805,    -1,   807,    -1,
      -1,    -1,    -1,    -1,    -1,   814,   815,    -1,    -1,    -1,
      -1,   820,    -1,   822,    -1,    -1,    -1,   826,    -1,    -1,
      -1,   830,   831,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,    -1,   799,   800,   801,
      -1,   803,    -1,   805,    -1,   807,    -1,    -1,    -1,    -1,
      -1,    -1,   814,   815,    -1,    -1,    -1,    -1,   820,    -1,
     822,    -1,    -1,    -1,   826,    -1,    -1,    -1,   830,   831,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,   101,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,   799,   800,   801,    -1,   803,    -1,
     805,    -1,   807,    -1,    -1,    -1,    -1,    -1,    -1,   814,
     815,    -1,    -1,    -1,    -1,   820,    -1,   822,    -1,    -1,
      -1,   826,    -1,    -1,    -1,   830,   831,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
      -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,   807,
      -1,    -1,    -1,    -1,    -1,    -1,   814,   815,    -1,    -1,
      -1,    -1,   820,    -1,   822,    -1,    -1,    -1,   826,    -1,
      -1,    -1,   830,   831,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,   799,   800,
     801,    -1,   803,    -1,   805,    -1,   807,    -1,    -1,    -1,
      -1,    -1,    -1,   814,   815,    -1,    -1,    -1,    -1,   820,
      -1,   822,    -1,    -1,    -1,   826,    -1,    -1,    -1,   830,
     831,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,    -1,   799,   800,   801,    -1,   803,
      -1,   805,    -1,   807,    -1,    -1,    -1,    -1,    -1,    -1,
     814,   815,    -1,    -1,    -1,    -1,   820,    -1,   822,    -1,
      -1,    -1,   826,    -1,    -1,    -1,   830,   831,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,
     807,    -1,    -1,    -1,    -1,    -1,    -1,   814,   815,    -1,
      -1,    -1,    -1,   820,    -1,   822,    -1,    -1,    -1,   826,
      -1,    -1,    -1,   830,   831,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,    -1,   799,
     800,   801,    -1,   803,    -1,   805,    -1,   807,    -1,    -1,
      -1,    -1,    -1,    -1,   814,   815,    -1,    -1,    -1,    -1,
     820,    -1,   822,    -1,    -1,    -1,   826,    -1,    -1,    -1,
     830,   831,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,   799,   800,   801,    -1,
     803,    -1,   805,    -1,   807,    -1,    -1,    -1,    -1,    -1,
      -1,   814,   815,    -1,    -1,    -1,    -1,   820,    -1,   822,
      -1,    -1,    -1,   826,    -1,    -1,    -1,   830,   831,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,    -1,   799,   800,   801,    -1,   803,    -1,   805,
      -1,   807,    -1,    -1,    -1,    -1,    -1,    -1,   814,   815,
      -1,    -1,    -1,    -1,   820,    -1,   822,    -1,    -1,    -1,
     826,    -1,    -1,    -1,   830,   831,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
     799,   800,   801,    -1,   803,    -1,   805,    -1,   807,    -1,
      -1,    -1,    -1,    -1,    -1,   814,   815,    -1,    -1,    -1,
      -1,   820,    -1,   822,    -1,    -1,    -1,   826,    -1,    -1,
      -1,   830,   831,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,    -1,   799,   800,   801,
      -1,   803,    -1,   805,    -1,   807,    -1,    -1,    -1,    -1,
      -1,    -1,   814,   815,    -1,    -1,    -1,    -1,   820,    -1,
     822,    -1,    -1,    -1,   826,    -1,    -1,    -1,   830,   831,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,   799,   800,   801,    -1,   803,    -1,
     805,    -1,   807,    -1,    -1,    -1,    -1,    -1,    -1,   814,
     815,    -1,    -1,    -1,    -1,   820,    -1,   822,    -1,    -1,
      -1,   826,    -1,    -1,    -1,   830,   831,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,   492,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,   565,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,   619,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,   636,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,   699,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
      -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,   807,
      -1,    -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,   822,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   831,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,   145,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
     699,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
     799,   800,   801,    -1,   803,    -1,   805,    -1,   807,    -1,
      -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,   822,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   831,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,   699,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,    -1,   799,
     800,   801,    -1,   803,    -1,   805,    -1,   807,    -1,    -1,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,   822,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,   831,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,   454,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,   473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,    -1,   799,   800,   801,
      -1,   803,    -1,   805,    -1,   807,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,   827,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
     799,   800,   801,    -1,   803,    -1,   805,    -1,   807,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   826,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,   593,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,   799,   800,   801,    -1,   803,    -1,
     805,    -1,   807,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   826,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     391,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,   799,   800,
     801,    -1,   803,    -1,   805,    -1,   807,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   826,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,
     807,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   826,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,   799,   800,   801,    -1,
     803,    -1,   805,    -1,   807,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   826,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
     799,   800,   801,    -1,   803,    -1,   805,    -1,   807,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   826,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,   799,   800,   801,    -1,   803,    -1,
     805,    -1,   807,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   826,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,   799,   800,
     801,    -1,   803,    -1,   805,    -1,   807,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   826,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,
     807,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   826,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,   799,   800,   801,    -1,
     803,    -1,   805,    -1,   807,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     823,    20,    -1,   826,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
     799,   800,   801,    -1,   803,    -1,   805,    -1,   807,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   826,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,   799,   800,   801,    -1,   803,    -1,
     805,    -1,   807,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   826,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,   492,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,   565,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,   619,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,   636,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,   799,   800,
     801,    -1,   803,    -1,   805,    -1,   807,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,   822,   823,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,
     807,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,   823,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,   799,   800,   801,    -1,
     803,    -1,   805,    -1,   807,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     823,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
     199,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,   263,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,   275,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,   565,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
     619,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,   636,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
     799,   800,   801,    -1,   803,    -1,   805,    -1,   807,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,   822,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,   699,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,    -1,   799,   800,   801,    -1,   803,    -1,   805,
      -1,   807,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,   822,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,   799,   800,   801,    -1,
     803,    -1,   805,    -1,   807,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   822,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,    -1,   799,
     800,   801,    -1,   803,    -1,   805,    -1,   807,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,   822,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,
     807,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,   822,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,    -1,   799,   800,   801,    -1,   803,
      -1,   805,    -1,   807,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   822,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,   799,   800,
     801,    -1,   803,    -1,   805,    -1,   807,     5,     6,    -1,
       8,     9,    10,    11,    12,   816,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
      -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,   807,
       5,     6,    -1,     8,     9,    10,    11,    12,   816,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,   799,   800,   801,    -1,   803,    -1,
     805,    -1,   807,     5,     6,    -1,     8,     9,    10,    11,
      12,   816,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,    -1,   799,   800,   801,
      -1,   803,    -1,   805,    -1,   807,     5,     6,    -1,     8,
       9,    10,    11,    12,   816,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
     799,   800,   801,    -1,   803,    -1,   805,    -1,   807,    -1,
      -1,    -1,    -1,    -1,    -1,     5,     6,   816,     8,     9,
      10,    11,    12,    13,    14,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    99,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
     130,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,   144,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
     210,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,   285,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
     440,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,   492,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,   505,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,   586,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,   608,   609,
     610,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,    -1,    -1,   709,
      -1,    -1,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,    -1,   799,
     800,   801,    -1,   803,    -1,   805,    -1,   807,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    14,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,    -1,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,   492,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,   505,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,   586,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,   608,   609,   610,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
      -1,    -1,   709,    -1,    -1,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,
     807,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
     144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,   210,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
      -1,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,   440,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,   505,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,   586,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,   608,   609,   610,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,    -1,    -1,   709,    -1,    -1,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,    -1,   799,   800,   801,    -1,   803,
      -1,   805,    -1,   807,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,    -1,
      -1,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,   520,
     521,   522,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,   593,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,   799,   800,
     801,    -1,   803,    -1,   805,    -1,   807,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      18,    19,    20,    21,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,   386,    -1,
      -1,   389,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,   647,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
      -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,   807,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,   501,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,   799,   800,   801,    -1,   803,    -1,
     805,    -1,   807,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,   199,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,    -1,   799,   800,   801,
      -1,   803,    -1,   805,    -1,   807,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
     799,   800,   801,    -1,   803,    -1,   805,    -1,   807,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,   593,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,    -1,   799,   800,   801,    -1,   803,    -1,   805,
      -1,   807,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,   799,   800,   801,    -1,
     803,    -1,   805,    -1,   807,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,   104,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,    -1,   799,
     800,   801,    -1,   803,    -1,   805,    -1,   807,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,   104,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,
     807,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,    -1,   799,   800,   801,    -1,   803,
      -1,   805,    -1,   807,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    37,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,   799,   800,
     801,    -1,   803,    -1,   805,    -1,   807,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
      -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,   807,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,   371,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,   799,   800,   801,    -1,   803,    -1,
     805,    -1,   807,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,    -1,   799,   800,   801,
      -1,   803,    -1,   805,    -1,   807,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,   371,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
     799,   800,   801,    -1,   803,    -1,   805,    -1,   807,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,    -1,   799,   800,   801,    -1,   803,    -1,   805,
      -1,   807,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    95,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,   799,   800,   801,    -1,
     803,    -1,   805,    -1,   807,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,   521,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,    -1,   799,
     800,   801,    -1,   803,    -1,   805,    -1,   807,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,
     807,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,    -1,   799,   800,   801,    -1,   803,
      -1,   805,    -1,   807,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,   799,   800,
     801,    -1,   803,    -1,   805,    -1,   807,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
      -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,   807,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,   799,   800,   801,    -1,   803,    -1,
     805,    -1,   807,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,    -1,   799,   800,   801,
      -1,   803,    -1,   805,    -1,   807,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
     799,   800,   801,    -1,   803,    -1,   805,    -1,   807,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,    -1,   799,   800,   801,    -1,   803,    -1,   805,
      -1,   807,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,   799,   800,   801,    -1,
     803,    -1,   805,    -1,   807,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,    -1,   799,
     800,   801,    -1,   803,    -1,   805,    -1,   807,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,   532,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,
     807,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,    -1,   799,   800,   801,    -1,   803,
      -1,   805,    -1,   807,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,   799,   800,
     801,    -1,   803,    -1,   805,    -1,   807,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
      -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,   807,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,    -1,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,    -1,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,    -1,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,    -1,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,    -1,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,   799,   800,   801,    -1,   803,    -1,
     805,    -1,   807,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,    -1,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
      -1,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,    -1,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
      -1,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,    -1,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,    -1,   799,   800,   801,
      -1,   803,    -1,   805,    -1,   807,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,    -1,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,    -1,   421,   422,   423,    -1,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,
     449,    -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,    -1,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,    -1,    -1,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
     799,   800,   801,    -1,   803,    -1,   805,    -1,   807,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,    -1,   421,   422,   423,    -1,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,    -1,   449,    -1,   451,   452,   453,    -1,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
      -1,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,    -1,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,    -1,    -1,   709,    -1,    -1,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,    -1,   799,   800,   801,    -1,   803,    -1,   805,
      -1,   807,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
      -1,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,    -1,   421,   422,
     423,    -1,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,   451,   452,
     453,    -1,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,    -1,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,    -1,    -1,   709,    -1,    -1,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,   799,   800,   801,    -1,
     803,    -1,   805,    -1,   807,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
      -1,   421,   422,   423,    -1,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,   449,
      -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,    -1,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,    -1,    -1,   709,
      -1,    -1,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,    -1,   799,
     800,   801,    -1,   803,    -1,   805,    -1,   807,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
      -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,    -1,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,    -1,   421,   422,   423,    -1,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,    -1,   449,    -1,   451,   452,   453,    -1,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
      -1,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
      -1,    -1,   709,    -1,    -1,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,
     807,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,   150,   151,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
     454,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,   473,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,    -1,   799,   800,   801,    -1,   803,
      -1,   805,    -1,   807,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,   150,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,    -1,   453,   454,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,   472,   473,   474,    -1,    -1,    -1,   478,   479,   480,
      -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
      -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,   633,    -1,   635,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,   799,   800,
     801,    -1,   803,    -1,   805,    -1,   807,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,    -1,   453,   454,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,
     478,   479,   480,    -1,   482,    -1,   484,   485,    -1,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
      -1,   509,    -1,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,   633,    -1,   635,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,    -1,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,   795,   796,   797,
      -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,   807,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,    -1,   453,   454,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,   472,   473,   474,
      -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,
     485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,
      -1,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
     635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
      -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
     795,   796,   797,    -1,   799,   800,   801,    -1,   803,    -1,
     805,    -1,   807,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    21,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,   454,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,   473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,   795,   796,   797,    -1,   799,   800,   801,
      -1,   803,    -1,   805,    -1,   807,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,   795,   796,   797,    -1,
     799,   800,   801,    -1,   803,    -1,   805,    -1,   807,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,   472,   473,   474,    -1,
      -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,   485,
      -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
      -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,    -1,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,   795,
     796,   797,    -1,   799,   800,   801,    -1,   803,    -1,   805,
      -1,   807,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,    -1,
     453,   454,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,
     473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,
      -1,   484,   485,    -1,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
      -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,   795,   796,   797,    -1,   799,   800,   801,    -1,
     803,    -1,   805,    -1,   807,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,    -1,   453,   454,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,   472,   473,   474,    -1,    -1,    -1,   478,   479,
     480,    -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
      -1,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,
     540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
      -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,   795,   796,   797,    -1,   799,
     800,   801,    -1,   803,    -1,   805,    -1,   807,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,   472,   473,   474,    -1,    -1,
      -1,   478,   479,   480,    -1,   482,    -1,   484,   485,    -1,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,   795,   796,
     797,    -1,   799,   800,   801,    -1,   803,    -1,   805,    -1,
     807,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
     454,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,   473,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,   795,   796,   797,    -1,   799,   800,   801,    -1,   803,
      -1,   805,    -1,   807,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,    -1,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,    -1,   478,   479,   480,
      -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
      -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,   795,   796,   797,    -1,   799,   800,
     801,    -1,   803,     7,   805,    -1,   807,    -1,    12,    -1,
      14,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    34,
      35,    -1,    26,    27,    28,    40,    -1,    42,    -1,    44,
      45,    -1,    -1,    -1,    34,    35,    -1,    -1,    -1,    -1,
      40,    -1,    42,    -1,    44,    45,    -1,    62,    -1,    -1,
      -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    63,
      -1,    -1,    62,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,
      84,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    96,    -1,    -1,    -1,    -1,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,    -1,   111,   123,    -1,
      -1,    -1,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
      -1,   125,    -1,   123,    -1,   129,    -1,   142,    -1,    -1,
      -1,    -1,    -1,   137,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,   142,    -1,   159,    -1,    -1,    -1,   152,    -1,
      -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,   159,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   187,    -1,   189,    -1,    -1,    -1,    -1,   194,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   187,   192,   189,
     205,   206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   205,   206,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   235,   247,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,   260,    -1,   247,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,
     260,    -1,    -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   288,   289,    -1,   291,    -1,    -1,   279,
      -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,   288,   289,
      -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   327,   328,   329,    -1,    -1,   321,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   327,   328,   329,
      -1,   346,   347,   348,    -1,   339,    -1,    -1,   353,   343,
      -1,   356,    -1,    -1,    -1,    -1,   346,   347,   348,    -1,
      -1,    -1,    -1,   353,    -1,    -1,   356,    -1,    -1,   374,
     375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   374,   375,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   387,    -1,    -1,    -1,    -1,    -1,    -1,
     394,    -1,    -1,   408,   409,    -1,    -1,    -1,    -1,   403,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,   409,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   434,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   434,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   450,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,
      -1,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   496,   512,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   512,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   538,   539,   540,   541,    -1,    -1,
      -1,    -1,   546,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   572,    -1,   563,
     575,    -1,   566,   578,   579,   580,   581,    -1,    -1,    -1,
      -1,    -1,   572,    -1,    -1,   575,    -1,    -1,   578,   579,
     580,   581,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   602,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   621,   622,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   621,   622,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   636,    -1,   649,   639,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   649,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     724,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   748,   749
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_int16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     381,   414,   425,   447,   450,   452,   455,   465,   466,   475,
     477,   486,   492,   500,   505,   506,   507,   538,   545,   565,
     589,   601,   605,   613,   619,   636,   644,   660,   661,   662,
     663,   675,   712,   752,   822,   834,   835,   838,   839,   840,
     841,   842,   844,   849,   851,   877,   878,   879,   880,   882,
     885,   907,   929,   936,   937,  1172,  1173,  1175,  1177,  1179,
    1182,  1184,  1185,  1186,  1187,  1188,  1190,  1191,  1226,  1227,
    1234,  1235,  1238,  1251,  1253,  1257,  1262,  1263,  1267,  1269,
    1274,  1278,  1284,  1285,  1286,  1287,  1288,  1289,  1290,  1295,
    1296,  1426,  1459,  1460,  1461,  1462,  1463,  1464,  1465,  1466,
    1467,  1468,  1469,  1470,  1471,  1472,  1473,  1474,  1475,  1484,
    1485,  1506,  1507,  1511,  1515,  1521,  1522,  1523,  1524,  1525,
    1526,  1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,  1535,
    1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,  1544,  1545,
    1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,
    1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,
    1576,  1577,  1579,  1585,  1594,  1604,  1608,  1610,  1611,  1689,
    1691,  1693,  1716,  1722,  1724,  1725,  1726,  1728,  1732,  1734,
    1771,  1777,  1778,  1779,  1780,  1818,  1830,  1831,  1833,  1834,
      12,   108,   127,   200,   243,   286,   419,   498,   563,   565,
     599,   611,   707,  1790,  1791,  1792,  1795,   282,   370,  1268,
    1772,   571,  1664,   235,     5,     6,     8,     9,    10,    11,
      12,    15,    20,    23,    25,    26,    27,    28,    29,    30,
      32,    36,    40,    43,    44,    45,    47,    49,    50,    53,
      56,    57,    59,    60,    61,    63,    65,    66,    67,    68,
      69,    70,    72,    73,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    87,    88,    90,    91,    92,
      93,    94,    98,   103,   106,   110,   111,   112,   115,   120,
     121,   126,   127,   129,   135,   136,   137,   138,   139,   143,
     146,   147,   148,   152,   154,   155,   157,   158,   159,   162,
     163,   165,   166,   167,   168,   169,   170,   173,   174,   175,
     176,   177,   180,   181,   183,   184,   185,   186,   187,   190,
     191,   195,   196,   198,   202,   204,   205,   206,   207,   209,
     211,   215,   216,   218,   221,   222,   226,   227,   228,   229,
     232,   233,   234,   237,   242,   243,   244,   248,   252,   253,
     255,   256,   260,   262,   265,   266,   269,   272,   273,   279,
     280,   282,   284,   286,   287,   315,   319,   320,   321,   322,
     324,   325,   330,   331,   332,   333,   334,   335,   338,   339,
     341,   343,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   356,   357,   360,   361,   362,   363,   364,   368,   369,
     373,   375,   376,   378,   379,   380,   383,   393,   394,   395,
     397,   399,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   412,   414,   415,   416,   418,   420,   421,   422,
     423,   424,   426,   427,   428,   431,   435,   436,   438,   439,
     442,   443,   444,   445,   446,   448,   449,   451,   452,   453,
     456,   457,   458,   459,   460,   461,   462,   463,   465,   467,
     468,   470,   471,   472,   474,   477,   478,   479,   480,   482,
     484,   485,   486,   487,   488,   490,   491,   495,   496,   497,
     498,   502,   506,   508,   509,   510,   511,   513,   514,   515,
     516,   517,   523,   524,   525,   527,   530,   533,   535,   537,
     538,   539,   540,   541,   542,   545,   546,   549,   550,   551,
     552,   553,   554,   557,   558,   559,   560,   562,   563,   566,
     567,   568,   569,   572,   573,   575,   576,   577,   578,   584,
     585,   589,   590,   591,   594,   595,   597,   598,   600,   601,
     604,   607,   609,   611,   612,   618,   620,   623,   627,   629,
     630,   631,   632,   639,   640,   641,   643,   644,   645,   646,
     649,   652,   653,   654,   655,   656,   658,   667,   668,   669,
     671,   672,   673,   675,   678,   680,   687,   688,   691,   693,
     695,   696,   700,   701,   702,   703,   704,   705,   706,   707,
     709,   712,   713,   714,   715,   716,   717,   718,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   735,   737,   738,   739,   740,   741,   742,   743,   745,
     746,   747,   748,   749,   750,   751,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,   795,   796,   797,
     799,   800,   801,   803,   805,   807,   901,  1661,  1670,  1680,
    1681,  1682,  1684,  1685,  1688,   456,   562,   565,  1718,  1718,
     640,  1773,   108,   199,   286,   389,   498,   518,   563,   568,
     599,   603,   611,   653,   707,  1150,  1480,  1787,  1791,  1792,
    1793,  1794,  1795,     8,    23,    29,    35,    37,    38,    39,
      41,    54,    55,    61,    62,    69,    72,    96,    97,   102,
     104,   107,   108,   113,   114,   115,   120,   122,   125,   171,
     178,   179,   188,   195,   205,   207,   213,   219,   226,   230,
     241,   245,   271,   279,   290,   318,   323,   334,   338,   340,
     344,   345,   346,   347,   348,   355,   365,   366,   367,   371,
     372,   396,   408,   409,   411,   426,   454,   455,   474,   476,
     483,   484,   490,   543,   544,   551,   555,   556,   561,   571,
     575,   576,   577,   578,   587,   588,   589,   593,   596,   611,
     615,   616,   617,   619,   624,   626,   631,   632,   649,   664,
     665,   670,   676,   677,   679,   682,   683,   684,   685,   686,
     690,   692,   694,   745,   783,   800,   814,   815,   816,   820,
     822,   826,   830,   831,  1123,  1288,  1306,  1307,  1310,  1311,
    1312,  1314,  1318,  1321,  1323,  1324,  1326,  1327,  1328,  1335,
    1336,  1340,  1363,  1364,  1365,  1640,  1642,  1645,  1646,  1647,
    1648,  1649,  1650,  1653,  1656,  1658,  1661,  1670,  1782,  1784,
     108,   167,   200,   235,   286,   419,   498,   518,   563,   586,
     599,   611,   627,   653,   707,  1480,  1670,  1268,   103,   535,
     938,    13,    14,    99,   130,   144,   167,   170,   183,   210,
     235,   241,   274,   285,   420,   424,   440,   448,   456,   492,
     505,   506,   557,   586,   608,   610,  1661,  1664,  1671,  1675,
    1682,  1685,  1686,  1688,  1738,  1739,  1659,  1670,   850,   565,
     128,   220,   293,  1486,   406,   658,    87,   427,  1609,   111,
     235,   646,  1612,   243,  1718,  1268,  1670,  1605,   486,   611,
    1718,  1268,   128,   293,  1487,  1510,   652,  1595,   521,   926,
     930,   931,  1670,   230,  1478,  1773,  1670,    13,   140,   220,
     526,   527,   529,   530,   531,   548,  1297,  1298,  1299,  1785,
      61,    62,   125,   209,   282,   351,   403,   497,   584,   652,
     653,   671,   707,   826,  1125,  1661,  1673,  1681,  1682,  1684,
    1685,  1687,  1690,  1700,  1705,  1706,    35,    36,    61,    72,
      97,    99,   109,   158,   163,   166,   176,   198,   200,   209,
     211,   282,   380,   407,   418,   419,   422,   423,   443,   497,
     546,   565,   630,   753,   754,   799,  1125,  1567,  1569,  1570,
    1571,  1701,   930,   204,   584,   753,   204,   753,  1659,  1670,
     565,  1516,   406,   658,   243,  1723,  1670,   483,  1496,  1500,
     659,  1427,  1428,  1670,    32,    79,   154,   414,   436,   477,
     538,  1821,  1314,  1670,  1661,   400,  1042,   822,  1783,  1784,
     243,   282,  1310,  1285,  1286,  1288,  1426,  1493,     0,   156,
     836,   414,   104,   274,   611,  1199,  1664,  1670,  1674,  1676,
    1677,  1760,  1763,   126,   403,   611,  1228,  1229,  1230,  1231,
    1232,  1233,   194,   246,   285,  1300,  1301,  1457,   387,   602,
     657,   794,  1439,  1440,  1287,   130,   608,    17,   195,  1580,
    1581,  1659,   160,  1203,  1670,   160,   901,   137,   152,   448,
     479,  1727,   212,   901,  1674,  1670,  1659,   563,  1478,   212,
     167,  1181,  1790,  1718,  1773,  1275,  1276,  1659,   822,   908,
     828,   185,   517,  1476,  1659,  1476,    19,  1774,   230,  1073,
     235,   212,   455,  1674,   235,   716,  1670,   563,  1073,  1073,
     212,   235,   565,  1786,  1786,  1790,  1795,   822,   822,   822,
    1321,   822,   822,   822,  1310,  1376,   822,   822,   822,   822,
     822,   822,   822,   822,  1309,  1309,   822,  1111,   822,   822,
     822,   571,   822,   822,   822,  1783,   822,   822,   822,   822,
     822,   822,   822,   822,   822,  1310,   822,   822,   822,  1374,
    1375,  1656,  1670,   822,   822,   822,   822,   822,   822,   822,
     822,   822,  1310,  1111,   822,   822,   822,   822,   822,   822,
     822,   822,   822,   822,   822,   822,   822,   822,   822,   822,
    1111,   571,   822,   822,   822,   571,   822,   822,   822,    37,
     219,   571,   822,  1309,  1111,  1111,   822,   822,   822,   822,
     822,   822,   822,   822,   822,   822,   822,   822,   822,   822,
     822,   822,   822,   822,   822,   822,   822,   822,   822,  1321,
    1321,  1321,   619,  1286,  1288,  1310,   826,  1674,  1670,   827,
      18,    19,    21,   386,   389,   571,   647,  1308,  1315,  1316,
    1669,  1670,   160,   161,   201,   214,   254,   267,   294,   358,
    1319,    33,   141,   249,   275,   344,   365,   366,   441,   503,
     504,   516,   721,   812,   813,   814,   815,   816,   817,   818,
     819,  1317,  1321,    71,   388,   571,  1665,   259,   651,   822,
     828,  1478,  1478,  1478,  1670,   212,  1478,  1478,   716,  1670,
    1478,   563,  1478,  1478,  1478,   212,  1718,   845,  1586,   135,
     418,  1737,   480,   480,   563,   568,   611,   627,   653,   653,
     384,   822,  1764,   562,   377,  1764,    67,   510,  1764,   109,
     627,  1764,   826,  1764,   377,   582,   827,   380,    68,   432,
     828,  1674,   197,   231,  1222,  1670,  1664,  1832,  1310,   246,
      85,   293,  1615,   194,  1717,  1718,   197,    35,  1606,  1670,
    1271,  1677,  1270,  1718,   246,  1488,  1478,  1597,    35,   753,
    1596,  1599,   620,   927,   500,   932,   171,    13,   424,  1738,
     582,  1774,  1306,  1299,   500,   653,   828,    35,   125,   160,
     501,  1126,  1497,  1674,   194,   582,  1497,   255,   432,  1708,
    1709,  1711,  1713,    13,   125,   364,  1675,  1678,  1746,   212,
     826,  1674,    35,   125,  1128,  1129,  1674,   828,   125,   584,
    1696,  1704,  1706,   827,  1697,  1497,   287,   800,   166,   275,
     634,  1423,  1575,   822,   108,   167,   200,   419,   565,   586,
     611,   627,  1575,    13,  1566,  1674,   276,  1444,  1445,   197,
     249,  1568,  1572,   198,    70,   542,   194,   562,    70,   542,
      13,    43,    94,    98,   253,   331,   395,   517,   559,  1517,
    1518,  1519,   166,   542,  1444,   542,   839,  1575,   157,   421,
     585,   234,   235,   261,  1149,    73,   562,   542,   623,   932,
     432,   636,  1239,  1240,  1241,   446,   533,  1246,  1247,  1248,
    1246,  1659,  1670,  1832,  1718,   822,   827,  1427,   827,   822,
    1429,    37,   219,  1641,  1665,  1820,  1820,  1820,    96,  1819,
    1820,  1820,   156,   828,   822,    48,   156,   156,   197,   111,
     156,   823,  1300,   823,   823,   825,  1670,  1309,   822,   138,
     228,   372,  1749,  1753,  1754,  1761,   826,     7,   125,   138,
     144,   228,   343,  1748,  1749,  1753,  1754,  1755,  1756,  1757,
    1758,   464,   827,  1766,   160,   160,   160,   827,   502,   608,
    1302,   146,   391,   826,  1455,  1456,  1458,  1674,   249,  1301,
    1457,  1300,    48,    13,   140,  1781,  1781,  1781,  1444,  1439,
     231,   293,   428,  1513,  1514,  1510,   195,  1580,   160,   246,
    1582,   194,  1578,  1583,  1584,  1641,  1670,   332,   569,   595,
    1174,  1677,  1178,  1670,  1670,   746,   784,  1674,  1670,  1176,
     383,     7,    26,    84,   144,   237,   322,   369,   450,   629,
     748,  1009,  1010,  1023,  1024,  1025,  1026,  1032,  1034,  1035,
    1036,  1567,     7,    12,    14,    17,    27,    28,    58,    63,
      64,    69,    77,    83,    84,    87,    96,   111,   125,   129,
     137,   138,   144,   152,   158,   169,   192,   233,   235,   242,
     262,   285,   321,   339,   343,   381,   387,   394,   403,   435,
     450,   451,   452,   482,   538,   539,   540,   541,   546,   563,
     566,   589,   602,   636,   639,   724,   725,   726,   748,   749,
    1025,  1074,  1077,  1079,  1080,  1132,  1204,  1205,  1207,  1208,
    1210,  1212,  1213,  1214,  1215,  1217,  1219,  1670,  1670,   901,
     532,  1796,  1797,  1180,  1476,   249,   827,   235,   263,   400,
    1147,  1281,  1282,  1310,  1372,  1373,  1670,   853,   582,   176,
     428,   827,  1252,    59,   176,   180,   194,   330,   428,  1264,
    1265,  1266,    57,   368,   368,   447,  1775,  1317,  1670,  1670,
    1670,   518,   193,  1670,   708,     7,  1003,  1670,  1677,  1750,
    1762,  1746,  1670,  1670,  1073,    11,   167,   200,   419,   586,
     888,  1789,  1797,  1803,  1805,  1806,  1813,   200,   888,  1788,
    1797,  1803,  1806,  1813,  1786,  1310,  1310,    13,   140,  1370,
    1421,  1370,  1370,  1370,   633,  1378,  1310,  1310,  1373,  1373,
    1310,  1310,   140,  1370,  1421,   823,   372,   823,   823,  1310,
    1310,  1310,  1310,  1656,   116,   117,   118,   119,   120,   223,
     224,   225,   226,   334,   336,   337,   338,   345,   426,   489,
     490,   631,   648,   649,  1416,  1417,  1310,  1372,   112,   115,
     575,   578,  1418,   140,  1366,  1310,  1310,  1310,  1310,  1416,
    1310,  1373,  1375,    10,   827,   828,   140,  1370,  1310,  1310,
     140,  1370,  1310,  1310,  1373,  1373,  1373,  1310,  1373,  1314,
    1310,  1310,  1310,  1310,  1310,  1310,   823,  1310,  1370,  1370,
    1310,  1310,   140,  1370,  1310,  1417,  1417,  1310,    46,   268,
     583,  1310,  1310,   823,  1657,  1658,  1670,  1370,  1370,  1310,
    1310,  1310,  1370,  1370,  1373,   823,   823,  1310,  1310,  1310,
    1310,  1310,   826,  1342,  1343,  1642,  1649,  1670,   823,   823,
     823,  1321,   140,  1370,  1310,  1300,   823,   827,   209,   282,
     497,  1702,   501,  1310,  1307,  1669,  1670,  1310,  1310,  1310,
     179,   371,   588,   604,  1317,    13,    20,  1312,  1320,  1314,
    1314,   822,  1783,  1321,  1314,  1314,  1314,  1314,   275,   666,
    1313,  1314,  1314,   245,  1314,   245,  1314,  1314,  1314,  1314,
    1314,    33,   249,   275,   441,  1674,  1321,  1665,  1665,  1310,
    1332,  1333,  1334,   816,  1670,  1670,   901,  1670,   377,  1670,
     901,  1674,   708,  1032,  1034,  1481,  1482,  1483,   901,  1670,
    1677,  1745,  1476,  1746,  1670,  1478,   614,   846,    35,   158,
     162,   202,   287,   382,   418,   442,   467,   511,   542,  1587,
    1591,  1592,  1718,    86,   826,   939,   940,   941,   942,  1670,
    1735,   562,  1670,  1765,  1677,  1674,   200,   419,   565,  1736,
    1745,  1739,    21,  1419,  1420,   186,   362,  1670,  1729,  1670,
    1832,  1488,   515,   500,   827,  1829,    50,   197,  1614,    30,
    1659,  1719,  1720,  1476,   826,   843,  1664,   287,   827,   582,
    1272,  1273,  1659,  1476,  1659,   125,  1598,  1670,   287,  1600,
     827,  1665,    56,    66,    76,    90,    91,    92,   106,   333,
     350,   488,   550,   567,   933,   935,  1737,   377,   197,   377,
     486,  1776,  1775,   197,  1291,  1292,  1457,    13,   364,  1746,
    1670,    71,  1131,  1310,  1677,   732,   571,  1667,   273,   379,
     642,   827,  1712,   827,  1710,   657,  1692,   826,   827,  1670,
     209,   282,   497,   652,   671,  1703,  1497,  1670,  1708,  1697,
    1497,  1698,  1699,  1700,  1705,    13,    35,   125,   377,   483,
     708,  1310,  1715,   542,   249,  1573,  1665,  1310,   816,  1073,
     901,   901,   901,  1659,   901,  1677,  1659,   287,   349,   542,
     290,   372,   593,  1446,  1447,  1642,  1670,  1575,  1670,   901,
    1575,  1677,  1568,   901,  1575,   252,   560,   181,   194,  1520,
     827,  1573,  1568,   194,   876,  1568,  1572,  1572,  1568,  1575,
    1575,   379,   642,    88,   827,  1236,   827,   876,   125,  1310,
    1501,  1502,  1503,  1500,  1428,  1430,  1670,    21,   827,   378,
    1823,   558,  1824,   645,   258,   470,  1822,  1670,  1310,   277,
     280,   429,  1043,  1044,  1677,   136,   156,   837,   823,   728,
      48,   786,   455,  1189,  1189,   787,   788,   790,  1674,  1761,
     653,   728,  1761,   636,  1761,   455,   727,  1747,   455,  1747,
    1747,   455,  1747,  1747,    65,   256,   364,   534,   552,   643,
    1742,  1743,  1677,  1760,   636,  1196,  1662,  1664,  1662,  1662,
    1230,   666,   667,   669,  1303,  1304,  1305,   571,  1666,  1666,
    1674,   827,   502,  1310,  1441,  1654,  1287,  1287,  1287,  1444,
     197,  1477,  1660,  1670,  1513,  1222,  1674,   826,    87,   108,
    1284,  1484,  1485,  1506,  1511,   432,  1068,  1069,  1072,  1079,
    1080,  1081,  1132,   902,  1670,  1670,   194,   368,   315,     7,
     902,   822,   110,  1020,  1497,  1498,  1498,  1020,  1498,  1498,
     582,  1498,   827,  1076,   158,    74,    89,   199,   400,   518,
    1089,  1091,  1147,  1221,  1498,    64,    89,   235,  1221,   400,
    1498,  1498,  1221,  1498,   400,   400,  1498,  1498,  1498,  1498,
     582,   136,  1498,   261,   400,   563,    64,    89,   193,   400,
     417,  1147,  1221,   261,  1498,   400,   400,   563,   136,  1498,
    1498,  1498,  1498,  1498,  1221,   400,    48,  1498,  1498,   400,
      21,    74,   160,   582,  1147,  1225,   400,   400,  1498,   584,
    1498,  1498,  1498,   139,   331,  1498,  1498,   400,  1498,   618,
     618,  1498,   400,  1387,  1388,  1387,  1498,  1498,  1077,    71,
    1125,   449,  1042,  1206,   827,   827,   500,   709,  1838,  1183,
     491,   627,  1797,   144,   608,  1261,   125,  1277,  1670,  1276,
    1659,   822,   822,  1282,   823,   827,   457,   458,   459,   460,
     461,   462,   463,   854,   855,   852,  1659,   609,  1265,    57,
     447,   171,   881,   377,     7,   716,   111,   377,  1073,  1020,
     613,  1004,     7,    19,  1751,  1752,  1753,  1754,  1755,  1756,
    1757,  1758,   125,   827,   884,   591,   591,   614,  1162,  1163,
    1659,   200,  1073,  1073,  1073,  1073,  1073,  1797,   827,   823,
    1370,   823,  1310,   823,   823,   823,  1310,   150,   633,  1377,
      21,    25,   823,   614,   823,   823,   823,   614,   827,  1373,
     823,   816,   823,   827,   827,   823,   823,   823,   197,   827,
     823,   827,  1373,   823,   827,   827,   827,   815,   827,   823,
     823,   822,  1656,  1670,  1370,   823,   823,   823,  1370,   823,
     827,   823,   823,   823,   823,   827,   823,   249,   823,   827,
     827,   823,   827,   827,   823,   823,   823,   827,   197,   827,
    1370,   823,   823,   827,   827,   827,   823,   197,  1310,   197,
    1310,   197,  1310,   197,   823,   827,   823,   823,   823,   823,
     827,    21,   823,   827,   823,   827,   823,   823,   689,  1348,
    1348,   823,   827,  1341,   823,  1341,   827,  1674,   823,  1348,
    1348,  1348,   827,  1370,   823,   823,   827,  1373,   828,   828,
     828,  1674,  1707,  1310,   832,   179,   371,   588,   604,  1783,
      19,  1310,   165,  1314,   822,  1310,  1310,  1314,   822,  1783,
    1321,  1314,  1308,   823,   827,   822,   828,   828,  1659,  1481,
    1478,  1076,  1011,  1012,  1013,  1032,   827,    52,   469,  1223,
     192,  1844,  1476,   826,   847,   848,   287,   287,   287,   287,
     287,   287,   827,  1476,  1593,   115,   575,   578,   826,   934,
     944,  1365,  1647,  1656,  1674,   827,   160,   377,   823,   827,
     582,   816,  1670,  1679,  1744,   636,  1740,  1670,   160,   186,
     201,   214,   266,   267,   294,   362,   416,  1730,  1731,  1422,
    1423,  1659,  1664,   209,   652,  1825,  1827,  1828,  1664,  1279,
    1280,  1659,   282,  1613,  1420,   827,  1674,    31,   582,  1607,
    1677,  1677,   827,   582,   176,   428,   612,  1254,  1255,  1256,
    1387,   828,   828,    19,    13,  1602,  1599,   827,   160,   827,
    1733,  1677,  1745,  1736,  1670,   145,   699,   719,   822,   831,
    1293,  1294,  1379,  1381,  1389,  1390,  1391,  1392,  1393,  1394,
    1395,  1659,  1783,  1422,  1291,   582,   582,   582,    35,  1130,
    1674,   582,  1497,  1189,  1189,   432,   453,   495,  1714,  1711,
    1709,  1746,  1674,  1678,   194,   828,   828,   828,   828,   828,
    1706,  1310,  1715,   827,  1704,  1664,   197,  1574,   823,  1670,
     376,   827,   614,  1575,   427,  1444,  1519,  1574,  1575,    60,
    1575,  1659,  1659,  1575,   513,  1241,   607,  1249,  1248,   823,
     827,   823,   827,  1783,  1641,   404,   194,   828,   823,    73,
     822,    73,   822,   401,  1046,   216,   263,   829,  1498,   403,
     732,  1667,  1667,  1747,  1747,   789,   789,  1752,  1755,    13,
     364,  1746,   403,   144,  1674,  1752,  1667,   103,  1667,  1667,
     571,   571,   571,    19,  1741,   319,   320,   324,   325,  1197,
    1198,     5,   403,   738,   739,  1193,  1194,  1195,  1477,   668,
    1304,  1125,  1127,  1456,   341,    22,   131,  1442,  1443,   827,
    1477,  1659,  1670,   197,   827,   828,  1512,  1294,  1674,   122,
     188,   219,   290,   372,   593,  1450,  1453,  1454,  1674,   379,
    1069,    84,    77,    93,   265,   342,   368,   430,   532,   904,
     906,    60,   477,   263,   597,  1022,   108,   221,   393,   403,
     410,   514,   611,   886,   887,  1664,  1008,  1009,   219,   290,
     372,   593,  1037,  1452,  1453,  1661,  1664,  1008,  1037,  1037,
    1670,  1664,  1845,  1010,  1498,  1170,  1670,  1147,  1148,  1268,
    1148,    64,   193,   417,   603,  1090,  1146,  1161,  1170,  1670,
     822,  1670,   125,  1218,  1670,  1670,  1670,  1670,  1670,  1268,
     122,   188,   290,   372,   593,  1451,  1451,  1670,   122,   188,
     219,   290,   372,   593,  1449,    13,  1211,  1415,  1670,  1268,
    1664,  1664,  1664,  1664,  1125,  1498,  1449,  1211,  1670,  1670,
     263,  1415,   263,  1670,  1670,  1674,  1670,  1211,  1498,   186,
     266,   368,  1083,  1451,   125,  1220,  1670,  1451,  1451,  1670,
    1268,  1437,  1438,  1657,   125,  1078,  1449,  1664,  1268,  1670,
    1670,  1659,  1268,  1268,    80,    82,   125,   148,   187,   439,
    1082,  1078,  1078,   125,  1449,  1670,  1449,  1211,   822,   371,
    1674,   822,  1845,  1845,  1498,  1498,   402,     7,   144,  1074,
    1214,  1215,  1208,  1212,  1215,   717,   718,  1021,  1498,   706,
    1842,   377,   896,  1200,   127,   248,  1659,   672,   672,  1211,
     417,  1411,  1412,  1413,  1670,   249,  1310,   160,   160,   160,
     160,   160,   160,   160,   827,   876,   232,   444,   445,   731,
     735,   737,   740,   750,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   793,   867,   868,   875,  1070,  1071,  1072,  1659,
    1022,   708,   641,  1659,  1452,   286,    77,   177,   184,   363,
    1005,  1006,  1007,  1023,  1024,  1026,  1027,  1030,  1031,  1032,
    1033,  1034,  1035,  1036,  1020,  1752,  1751,   791,  1759,   653,
    1750,  1766,  1498,    47,   216,   485,  1165,  1165,   377,    21,
     231,   275,   455,   822,  1038,  1039,  1040,  1041,  1042,  1075,
    1077,  1493,  1620,  1073,   901,   901,  1670,   901,   901,   245,
    1310,   823,  1347,  1348,  1347,  1347,  1347,   574,  1310,  1310,
     154,    35,    62,   112,   115,   123,   142,   189,   205,   260,
     279,   346,   347,   348,   353,   356,   408,   409,   434,   508,
     578,   606,   649,  1100,  1104,  1371,   282,   578,  1126,  1126,
    1371,   823,  1347,   823,   245,   245,  1310,  1310,  1310,   387,
    1368,  1310,  1310,  1310,  1310,  1310,  1314,   823,  1347,   823,
    1347,  1310,  1310,  1310,  1310,  1310,  1310,  1373,  1347,  1347,
     245,  1310,  1310,  1310,   823,  1347,  1310,  1310,  1310,  1310,
     197,  1310,   197,  1310,   197,  1310,  1310,  1347,  1347,  1310,
      35,    62,  1449,  1370,  1347,   822,  1349,  1350,  1351,  1670,
     231,   693,  1345,  1342,   823,  1345,   823,  1321,  1348,   596,
    1640,   823,  1347,  1310,   823,   828,  1312,   823,   827,  1321,
    1321,  1416,  1416,    19,  1310,   165,  1334,  1372,   816,  1670,
    1670,  1216,  1217,  1219,  1452,  1483,  1076,  1677,  1223,  1674,
     827,   876,  1592,  1588,  1674,   942,   945,   946,   941,   373,
     484,   943,  1736,  1670,  1745,   828,   828,   582,   654,  1422,
     822,  1444,  1387,  1706,   827,   827,  1281,  1282,   236,   796,
     803,  1616,   432,   642,  1721,  1720,  1310,  1664,   582,  1273,
    1659,  1256,   500,   619,   620,   822,  1489,  1490,  1492,  1493,
    1494,  1670,  1670,   801,   876,   935,   934,   210,   377,   197,
     231,  1479,  1744,   822,  1783,  1294,  1381,  1390,  1391,  1392,
    1393,   730,   827,   100,   238,   258,   271,   354,   476,   548,
    1382,  1383,  1384,  1387,  1420,   212,  1434,  1422,  1746,  1746,
    1746,   732,  1667,  1747,  1747,    78,   594,   432,  1450,  1694,
    1695,  1497,  1699,  1451,  1444,   163,   630,  1447,  1447,  1745,
     372,  1444,  1662,  1568,  1568,   523,   524,   525,   875,  1250,
     611,  1242,  1503,  1670,   827,   335,   156,   822,  1314,   822,
    1314,  1450,   554,  1047,   822,    12,  1045,  1449,  1666,   403,
     500,     7,  1761,    21,    48,   343,  1747,   403,  1747,  1747,
    1742,  1449,  1449,  1449,  1449,  1198,   285,   605,   174,   464,
     703,   704,   696,  1450,  1450,    77,   747,  1192,  1195,  1126,
      73,  1621,  1654,   614,  1420,   828,  1294,  1660,   816,  1670,
     500,  1498,  1498,  1664,   532,   532,  1670,   532,   532,   532,
     491,  1670,   377,  1664,  1017,  1018,  1019,  1023,  1032,  1034,
    1664,  1664,  1664,  1664,  1449,  1664,  1664,   823,   827,  1674,
    1170,   401,   822,  1170,   822,   263,   263,  1148,   366,  1092,
    1093,  1094,  1161,   822,   614,   591,  1085,  1086,  1087,  1089,
    1670,    34,    35,    40,    42,    44,    45,    62,   112,   115,
     123,   159,   187,   189,   205,   206,   247,   260,   279,   288,
     289,   291,   327,   328,   329,   346,   347,   348,   353,   356,
     374,   375,   408,   409,   496,   500,   512,   572,   575,   578,
     579,   580,   581,   621,   622,   649,  1095,  1098,  1099,  1100,
    1101,  1102,  1103,  1104,  1106,  1094,  1094,   655,   656,  1164,
     144,   500,  1211,  1670,  1264,   827,  1450,   125,  1126,  1664,
     563,  1670,  1223,   636,   563,  1664,  1095,  1211,   827,  1442,
    1211,   582,   582,  1415,  1211,  1593,  1414,  1415,  1130,  1126,
    1011,   372,  1839,  1840,  1498,   137,   152,  1843,    81,   487,
     450,  1201,  1429,   377,   377,   823,   823,   827,  1277,   822,
     856,   856,   822,   861,   861,   822,   864,   864,   822,   859,
     855,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   827,   876,
    1072,   822,   438,   598,  1014,  1015,  1016,  1023,  1028,  1029,
    1030,  1031,  1032,  1034,  1452,  1674,   822,   883,   212,  1498,
    1498,  1498,  1498,  1076,  1011,    19,   785,  1746,  1196,   611,
     708,  1837,  1659,  1493,  1659,   275,  1085,  1040,  1039,  1076,
    1041,  1670,   889,   822,   472,  1814,     9,    31,  1001,  1310,
     823,  1347,  1310,   574,   822,  1115,  1116,  1116,   822,  1110,
     822,  1108,  1109,  1115,   413,  1105,  1107,  1115,    62,   247,
    1110,   247,  1116,   720,  1322,    21,   751,   823,   823,   823,
    1347,  1347,  1310,  1310,   823,   823,   827,   823,    48,   494,
    1367,   827,   827,   823,   827,   823,   249,  1329,  1330,  1347,
    1347,   823,   823,   823,   823,   827,   823,   823,  1310,   823,
     194,   823,   823,   827,  1347,   823,   827,   827,   823,  1310,
     823,  1310,   823,  1310,   823,   823,   823,   822,  1137,  1137,
     827,   823,  1350,  1352,  1353,   687,   687,  1348,   827,  1344,
    1345,  1348,  1345,   823,   743,  1325,  1347,   823,  1670,  1373,
     823,  1312,   823,   827,  1321,   823,  1219,  1217,  1013,   848,
     194,   636,  1589,   160,   827,  1744,   636,  1768,   816,   816,
    1670,  1745,   384,  1444,  1502,   500,  1489,  1490,  1497,  1827,
    1280,  1659,  1282,   231,  1283,  1666,   282,  1677,  1508,  1509,
    1657,   823,  1491,  1652,  1657,   822,  1495,  1499,  1601,   160,
     384,  1736,  1745,   604,   197,  1310,  1420,   827,   823,   823,
     823,   823,   823,  1379,  1380,  1381,  1389,  1379,   258,   258,
     390,  1386,   238,   271,   476,  1385,  1386,  1389,  1379,  1379,
    1420,  1429,    48,   217,  1424,  1434,  1189,  1189,  1076,  1715,
     876,  1422,  1575,   160,   160,   827,   160,   403,  1243,  1449,
    1049,  1670,   823,  1049,   823,    48,   822,  1051,  1314,   160,
     822,   228,   792,  1761,   219,  1664,  1668,   732,  1667,  1761,
     125,   245,   360,   103,   125,  1450,   245,  1665,  1665,   153,
     164,   385,   570,  1622,  1623,   278,  1624,  1294,  1387,  1670,
    1422,   828,  1512,  1508,  1078,  1664,   111,   111,   127,   248,
     368,   162,  1076,   887,   822,  1450,   400,  1052,  1053,   822,
    1310,  1170,   729,   822,   822,  1167,  1168,  1169,  1670,  1165,
    1165,   823,   827,  1095,  1115,  1115,  1116,    23,    35,    49,
     600,   625,  1115,  1125,  1133,  1134,  1135,  1110,   822,  1135,
      62,   621,  1101,  1135,  1135,    62,   622,   622,   625,   822,
    1116,  1110,  1110,  1135,  1115,  1116,   440,  1088,  1140,    27,
      71,    75,    77,   125,   366,   371,   377,   417,   496,   546,
     603,   705,   748,   749,  1091,  1094,  1118,  1119,  1120,  1131,
    1139,  1164,  1317,    35,  1115,  1136,  1115,  1115,  1116,   822,
    1109,  1117,  1108,   125,   125,  1164,  1095,  1670,  1131,  1131,
     565,     9,   186,  1224,  1438,  1670,  1670,   246,  1254,   823,
     823,   814,  1076,   372,   814,  1841,  1844,   366,   415,    25,
     168,   890,   582,   137,   152,   892,  1798,  1415,  1415,  1412,
     823,   857,   858,  1670,   823,   862,   863,  1670,  1679,   823,
     865,   866,  1662,  1663,   822,   823,   860,   822,  1662,  1449,
    1662,   371,   871,  1676,  1449,   377,   741,   742,   797,   872,
    1450,   282,   571,   742,   873,  1449,  1449,  1662,  1664,  1449,
    1449,  1648,  1662,  1662,  1451,  1662,  1449,  1662,  1449,  1449,
    1662,  1662,  1662,  1662,  1662,  1662,  1662,  1449,   371,   874,
    1662,  1662,  1662,  1449,  1450,   868,  1168,  1498,  1498,  1076,
     883,   383,  1168,   352,   713,   714,   715,  1670,  1664,  1037,
    1037,  1450,  1007,  1752,   228,  1753,  1754,  1756,  1193,  1838,
     822,  1659,   823,  1077,   472,   377,  1807,   123,   247,   434,
     549,  1084,   822,   130,   241,   608,  1002,  1416,  1310,   122,
     290,   372,   593,  1135,   372,   372,   823,  1371,   245,  1651,
    1416,  1416,  1310,  1369,  1654,  1641,   823,  1310,  1310,  1373,
      44,   354,   823,   636,  1331,  1310,  1416,  1310,  1310,  1310,
    1310,   823,   823,   823,  1450,   823,   823,  1449,  1347,   823,
     400,  1354,  1310,  1348,  1348,   197,  1346,  1371,   125,   162,
     371,  1400,  1402,  1403,  1404,   823,  1373,  1590,   432,    56,
      66,    76,    90,    91,    92,   106,   333,   350,   471,   488,
     550,   567,   947,   946,   582,   210,   636,  1767,   823,  1508,
      21,  1504,   377,  1505,   377,  1310,  1826,  1283,   269,  1617,
    1661,   827,  1497,  1492,  1493,   823,   827,  1501,   827,   582,
    1603,   934,   197,  1744,  1479,   611,  1745,   827,  1429,  1379,
     832,   258,  1386,  1386,   258,   258,   377,   614,   377,   614,
     192,   231,   613,  1406,  1407,  1408,  1409,  1410,   101,   478,
    1310,  1435,  1655,  1310,   697,  1431,  1424,  1747,  1747,  1450,
    1664,  1664,   875,  1664,   160,   126,  1244,   823,   827,   823,
    1044,  1052,   823,  1450,  1048,  1049,    48,    21,  1752,   403,
    1752,  1450,   125,   722,   125,  1450,    48,    48,   153,    48,
    1623,   536,   570,  1625,  1626,  1422,  1422,  1422,   477,  1019,
    1168,  1670,   823,   827,  1168,   823,   822,  1168,  1310,   823,
     827,   822,  1442,  1086,  1088,    35,    23,   600,  1125,    35,
    1135,  1126,  1171,  1641,  1135,   625,  1171,  1135,   508,   606,
     650,  1112,  1113,  1114,  1659,  1224,  1130,   125,   148,   187,
    1121,  1664,   115,   575,   578,   814,   815,   822,  1123,  1124,
    1643,  1644,  1645,  1646,   608,   125,   125,   139,   331,  1122,
     263,  1452,  1498,  1498,  1090,    71,  1120,   203,  1096,   263,
     371,   723,  1136,  1135,  1136,  1112,   372,  1112,  1112,   822,
    1644,  1224,  1659,  1670,   822,   372,  1840,   372,   415,  1310,
    1310,   377,   896,   901,   377,    77,   897,    21,   614,   636,
    1259,  1260,   823,   827,   823,   827,   828,   823,   827,   858,
     823,   827,   869,   870,  1449,   823,  1037,  1037,  1016,   822,
     823,  1662,  1662,  1662,  1662,   636,  1192,  1842,  1168,   823,
    1038,  1084,   487,   909,   910,   911,  1670,   515,  1815,   377,
     823,   823,   823,   823,   823,   823,   827,  1322,  1665,   823,
     823,   823,   827,  1347,   823,   827,   823,   341,   265,   427,
     823,   823,   823,   823,   823,   823,  1138,   827,    48,   387,
    1355,   186,   266,  1345,  1643,   823,  1403,  1404,   377,   823,
     175,   285,  1745,   384,   210,    21,  1770,  1422,  1504,  1670,
    1505,   147,   249,  1618,   372,  1509,  1503,  1492,  1493,  1652,
     823,  1499,  1452,  1745,   197,  1479,  1640,   823,   258,   258,
    1310,   822,  1310,   822,  1147,  1147,  1407,   808,  1339,   822,
     822,   638,   827,  1436,  1350,  1432,  1433,   804,  1425,  1431,
    1664,   160,   405,  1245,  1670,   216,   263,   823,   823,  1664,
    1668,   120,   120,  1641,  1641,    48,  1641,    48,    48,  1626,
    1439,  1439,   377,   823,   619,  1054,  1053,   823,  1166,  1167,
     823,   823,    77,   262,   748,   749,  1157,  1158,  1159,  1160,
    1163,  1164,  1169,   372,  1126,  1136,   823,   827,   823,  1114,
     822,  1141,  1648,  1648,  1310,  1123,   620,  1845,  1845,  1130,
      15,    21,  1310,  1209,  1210,  1052,  1416,   510,   753,  1664,
     143,  1202,  1493,  1799,   111,   372,   805,   806,  1258,   858,
     863,  1670,   866,   827,   822,   823,   827,   636,  1151,  1152,
    1153,  1160,   886,  1154,  1155,  1156,  1160,   228,  1674,  1843,
     823,   515,   890,   823,   827,  1098,  1664,   239,   249,   392,
     912,   913,   914,   915,  1659,   372,   823,    21,  1654,  1310,
     341,   173,   823,  1449,  1435,    48,   429,   481,   681,  1356,
    1362,  1348,   377,   162,   698,  1767,   384,  1677,  1444,  1505,
    1429,   263,   417,  1619,  1620,  1479,  1745,    73,  1396,  1414,
    1414,   194,  1405,  1405,   708,   807,  1337,  1435,  1435,  1655,
      21,   827,  1310,  1425,  1664,   160,  1237,   822,  1045,   111,
     464,  1835,  1836,  1641,  1641,  1641,   276,  1448,  1448,   162,
    1151,   249,   272,    77,   111,   235,   321,   339,   363,   563,
    1065,  1066,  1067,  1567,  1154,   823,   827,  1157,  1442,  1664,
    1498,  1498,  1498,  1159,   823,  1135,  1641,  1135,  1142,  1670,
     318,  1143,   823,   822,   823,   823,   891,   898,   899,   636,
    1800,  1665,   673,   608,   608,   858,   858,   870,   397,  1216,
    1153,   823,  1216,  1156,    48,  1157,  1664,   895,   896,  1808,
     911,  1131,   823,   827,  1670,   194,   823,   112,   823,   823,
    1441,    33,   103,   245,   696,  1357,  1358,  1359,  1642,  1648,
    1770,   636,  1769,   608,   263,   246,  1479,   822,   823,   823,
     823,   212,   258,   387,   822,   822,   822,   823,   823,  1351,
    1433,  1664,   876,  1314,   822,   136,   368,   534,  1447,   822,
    1056,  1058,   573,  1498,   136,   136,  1498,  1498,  1498,  1498,
     822,  1062,  1067,   158,  1140,  1167,  1449,  1845,  1845,  1442,
     823,   827,   198,   399,   509,   377,  1144,  1310,   537,   893,
      54,    68,   182,   230,   257,   270,   380,   473,   900,   951,
     953,   954,   955,   957,   958,   959,   960,   961,   962,   964,
     972,   973,   976,   987,   990,   992,   993,  1661,  1672,  1683,
    1684,  1685,  1688,    53,    64,   282,   823,   827,  1661,  1452,
    1216,   892,   472,  1816,   914,  1098,   149,  1110,   245,   696,
    1358,  1360,  1642,  1648,   483,  1310,   691,   678,  1361,   691,
     691,   653,  1508,   387,   565,   700,  1397,  1398,  1670,  1420,
      48,    48,  1411,  1413,   826,  1338,  1642,  1648,   823,  1049,
    1498,   534,   822,  1057,  1058,  1059,   326,  1055,  1058,  1664,
    1498,  1498,  1452,  1452,  1450,  1670,   554,  1063,  1064,  1498,
    1670,   130,   608,   823,  1310,   155,   894,   974,   977,  1670,
     197,   362,   965,   952,  1672,  1672,  1670,   956,   839,   292,
     454,   635,   996,    32,   994,   829,    64,   384,    64,   858,
     897,  1098,   903,  1131,   483,   823,  1310,   680,    19,   680,
     680,  1416,   103,   212,   368,   695,    13,   125,   364,  1746,
    1659,   702,   823,   827,   194,  1098,   823,   823,  1674,   823,
     553,  1050,   823,  1666,   823,   827,   326,  1060,  1061,  1314,
    1664,  1664,  1674,   823,   827,  1674,    52,   368,   469,   500,
    1145,  1145,   547,   628,  1097,  1310,  1310,   633,   979,   983,
     197,  1670,   967,   968,  1310,   917,   950,   951,   953,   955,
     957,   959,   960,   961,   962,   964,   972,   987,   990,   992,
     917,   997,   995,   988,   991,   384,   384,   823,   143,  1131,
     134,   904,   905,  1317,  1817,   191,   412,  1801,  1802,  1416,
    1360,   691,   483,   688,  1692,  1387,  1640,  1398,   701,  1131,
    1450,  1050,  1836,  1058,   823,   827,  1065,  1064,     6,   125,
     371,   377,   377,  1118,   975,   984,   150,   983,   986,   246,
     154,  1310,   154,   950,   825,   607,  1310,   918,   996,   994,
     898,  1809,   134,    21,   950,  1812,  1674,  1804,   680,  1127,
    1396,   171,  1399,  1061,   608,   130,   633,   978,   980,  1310,
     917,   154,   963,   230,   969,   292,   825,   999,   998,   124,
     916,   919,   989,  1672,   989,   903,   798,  1665,  1811,   950,
      83,  1637,   702,  1145,  1145,   981,   980,   986,   985,    54,
     966,  1670,   574,  1310,   143,    95,   172,   922,   948,  1670,
     154,   950,   825,  1810,   160,   481,  1627,  1640,  1310,   154,
     574,   827,   917,  1000,   917,   215,   827,  1098,    86,   105,
     825,  1812,  1664,   228,  1621,  1400,  1401,  1403,   982,    54,
     917,  1670,   970,   154,   154,   194,  1670,  1131,   194,   194,
      48,  1624,  1402,  1404,   574,   150,   151,   971,   454,   635,
     920,   125,   949,   925,   926,  1449,   921,  1641,   231,  1628,
     377,   917,   917,   967,   520,   522,   923,   924,   925,   928,
    1317,  1670,  1310,  1284,   372,   822,  1630,   827,   950,   196,
     278,   481,  1629,   823,   826,  1631,  1632,  1657,   500,  1633,
     924,  1674,   823,   827,  1634,  1635,  1657,   802,  1638,  1632,
     827,  1497,   160,   331,  1639,  1635,  1503,   372,   160,    12,
    1636,  1037,   160,   795
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_int16 yyr1[] =
{
       0,   833,   834,   834,   834,   834,   834,   834,   835,   836,
     835,   835,   837,   837,   838,   838,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   840,   841,   841,   842,   843,   843,   845,   844,
     846,   846,   847,   847,   848,   850,   849,   852,   851,   853,
     851,   854,   854,   855,   855,   855,   855,   855,   855,   855,
     856,   856,   857,   857,   858,   859,   859,   860,   860,   861,
     861,   862,   862,   863,   864,   864,   865,   865,   866,   867,
     867,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   869,   869,   869,   870,   871,
     871,   872,   872,   872,   872,   873,   873,   873,   874,   874,
     875,   875,   875,   875,   876,   876,   877,   877,   877,   877,
     878,   879,   881,   880,   880,   880,   880,   880,   880,   880,
     882,   882,   883,   883,   883,   883,   883,   884,   884,   885,
     885,   885,   886,   886,   887,   887,   887,   887,   887,   887,
     887,   889,   888,   891,   890,   890,   892,   892,   892,   892,
     892,   893,   893,   894,   894,   895,   895,   896,   896,   897,
     897,   899,   898,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   901,   901,   902,   902,
     903,   903,   904,   904,   904,   904,   904,   904,   904,   904,
     905,   905,   905,   906,   906,   907,   908,   908,   909,   909,
     910,   910,   911,   912,   912,   913,   913,   914,   915,   915,
     915,   915,   916,   916,   917,   917,   918,   918,   919,   919,
     920,   919,   921,   919,   922,   922,   923,   923,   924,   925,
     925,   926,   927,   927,   928,   928,   928,   928,   928,   929,
     930,   930,   931,   931,   932,   932,   933,   933,   934,   934,
     934,   935,   935,   935,   935,   935,   935,   935,   935,   935,
     935,   935,   935,   936,   937,   938,   938,   938,   939,   939,
     940,   940,   941,   942,   942,   943,   943,   944,   945,   945,
     946,   947,   947,   947,   947,   947,   947,   947,   947,   947,
     947,   947,   947,   947,   948,   948,   949,   949,   950,   950,
     950,   950,   950,   950,   950,   950,   950,   950,   950,   950,
     950,   952,   951,   954,   953,   956,   955,   958,   957,   959,
     960,   961,   963,   962,   964,   965,   965,   965,   966,   966,
     968,   969,   970,   967,   971,   971,   971,   972,   972,   974,
     975,   973,   977,   976,   978,   978,   979,   979,   981,   982,
     980,   984,   985,   983,   986,   986,   988,   987,   989,   989,
     991,   990,   993,   992,   995,   994,   996,   997,   998,   996,
     999,  1000,   996,  1001,  1001,  1002,  1002,  1002,  1003,  1003,
    1004,  1004,  1005,  1005,  1006,  1006,  1007,  1007,  1007,  1007,
    1007,  1007,  1007,  1007,  1007,  1007,  1007,  1008,  1008,  1009,
    1009,  1010,  1010,  1010,  1010,  1010,  1010,  1010,  1011,  1011,
    1012,  1012,  1013,  1014,  1014,  1015,  1015,  1016,  1016,  1016,
    1016,  1016,  1016,  1016,  1017,  1017,  1018,  1018,  1019,  1019,
    1019,  1020,  1021,  1021,  1022,  1023,  1024,  1025,  1026,  1027,
    1028,  1029,  1030,  1031,  1032,  1033,  1034,  1034,  1035,  1036,
    1037,  1037,  1038,  1038,  1039,  1039,  1040,  1040,  1040,  1041,
    1041,  1042,  1043,  1043,  1043,  1043,  1043,  1043,  1044,  1044,
    1045,  1045,  1046,  1046,  1047,  1047,  1047,  1048,  1048,  1049,
    1049,  1050,  1050,  1051,  1051,  1052,  1052,  1053,  1054,  1054,
    1054,  1055,  1055,  1056,  1056,  1057,  1057,  1059,  1058,  1060,
    1060,  1061,  1061,  1062,  1062,  1063,  1063,  1064,  1065,  1065,
    1066,  1066,  1067,  1067,  1067,  1067,  1067,  1067,  1067,  1067,
    1068,  1068,  1069,  1069,  1070,  1070,  1071,  1071,  1072,  1072,
    1072,  1073,  1073,  1074,  1074,  1075,  1075,  1076,  1076,  1077,
    1077,  1077,  1077,  1077,  1077,  1077,  1077,  1077,  1077,  1077,
    1077,  1077,  1077,  1077,  1077,  1077,  1077,  1077,  1077,  1077,
    1077,  1077,  1077,  1077,  1077,  1077,  1077,  1077,  1077,  1077,
    1077,  1077,  1077,  1077,  1078,  1078,  1079,  1080,  1081,  1082,
    1082,  1082,  1082,  1082,  1082,  1083,  1083,  1083,  1084,  1084,
    1084,  1084,  1085,  1085,  1086,  1086,  1087,  1088,  1088,  1089,
    1089,  1089,  1089,  1089,  1089,  1090,  1091,  1091,  1092,  1092,
    1093,  1093,  1094,  1095,  1095,  1096,  1096,  1097,  1097,  1097,
    1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,
    1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,
    1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,
    1098,  1098,  1098,  1098,  1098,  1098,  1098,  1099,  1099,  1099,
    1099,  1099,  1099,  1099,  1099,  1100,  1100,  1101,  1101,  1102,
    1102,  1102,  1102,  1102,  1103,  1103,  1103,  1103,  1103,  1104,
    1104,  1105,  1105,  1106,  1106,  1106,  1106,  1107,  1107,  1108,
    1108,  1108,  1109,  1110,  1110,  1111,  1111,  1111,  1112,  1112,
    1113,  1113,  1114,  1114,  1114,  1115,  1115,  1115,  1115,  1116,
    1116,  1117,  1117,  1118,  1118,  1119,  1119,  1120,  1120,  1120,
    1120,  1120,  1120,  1120,  1120,  1120,  1120,  1120,  1120,  1120,
    1120,  1120,  1120,  1120,  1120,  1120,  1120,  1120,  1121,  1121,
    1121,  1122,  1122,  1122,  1123,  1124,  1124,  1125,  1125,  1126,
    1126,  1127,  1127,  1128,  1128,  1129,  1129,  1130,  1130,  1131,
    1131,  1132,  1132,  1133,  1133,  1133,  1134,  1134,  1134,  1135,
    1135,  1135,  1135,  1135,  1135,  1135,  1136,  1136,  1138,  1137,
    1139,  1139,  1140,  1141,  1141,  1142,  1142,  1143,  1143,  1143,
    1143,  1144,  1144,  1144,  1144,  1144,  1145,  1145,  1145,  1145,
    1145,  1146,  1146,  1147,  1147,  1148,  1148,  1149,  1149,  1149,
    1150,  1150,  1151,  1151,  1152,  1152,  1153,  1153,  1154,  1154,
    1155,  1155,  1156,  1157,  1157,  1158,  1158,  1159,  1159,  1160,
    1160,  1160,  1160,  1160,  1161,  1161,  1161,  1162,  1162,  1163,
    1163,  1164,  1164,  1165,  1165,  1165,  1166,  1166,  1167,  1167,
    1168,  1168,  1169,  1169,  1170,  1170,  1171,  1171,  1172,  1172,
    1174,  1173,  1176,  1175,  1178,  1177,  1180,  1179,  1181,  1179,
    1183,  1182,  1184,  1185,  1185,  1185,  1185,  1186,  1187,  1188,
    1188,  1188,  1188,  1188,  1188,  1188,  1188,  1188,  1189,  1189,
    1190,  1191,  1192,  1192,  1192,  1193,  1193,  1194,  1194,  1195,
    1195,  1195,  1195,  1195,  1195,  1195,  1195,  1195,  1195,  1195,
    1195,  1195,  1195,  1195,  1195,  1196,  1196,  1197,  1197,  1198,
    1198,  1198,  1198,  1199,  1200,  1200,  1200,  1200,  1201,  1201,
    1202,  1202,  1203,  1203,  1204,  1204,  1205,  1205,  1206,  1206,
    1207,  1207,  1207,  1207,  1208,  1208,  1208,  1208,  1208,  1208,
    1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,
    1208,  1208,  1208,  1208,  1209,  1209,  1210,  1210,  1211,  1211,
    1212,  1212,  1212,  1212,  1212,  1213,  1213,  1214,  1214,  1214,
    1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,
    1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,
    1214,  1214,  1214,  1214,  1215,  1215,  1215,  1216,  1216,  1216,
    1216,  1216,  1217,  1218,  1218,  1219,  1220,  1220,  1221,  1221,
    1222,  1222,  1223,  1223,  1223,  1224,  1224,  1224,  1225,  1225,
    1225,  1225,  1226,  1226,  1227,  1228,  1228,  1229,  1229,  1230,
    1230,  1230,  1231,  1232,  1233,  1234,  1236,  1237,  1235,  1238,
    1239,  1239,  1240,  1240,  1241,  1241,  1241,  1242,  1242,  1243,
    1243,  1244,  1244,  1245,  1245,  1246,  1246,  1247,  1247,  1248,
    1248,  1249,  1249,  1250,  1250,  1250,  1250,  1250,  1251,  1252,
    1252,  1252,  1253,  1254,  1254,  1255,  1255,  1256,  1256,  1256,
    1257,  1258,  1258,  1258,  1259,  1259,  1260,  1260,  1261,  1261,
    1261,  1262,  1263,  1264,  1264,  1265,  1265,  1266,  1266,  1266,
    1266,  1266,  1266,  1267,  1268,  1268,  1268,  1270,  1269,  1269,
    1271,  1271,  1272,  1272,  1273,  1274,  1274,  1275,  1275,  1276,
    1277,  1277,  1278,  1278,  1279,  1279,  1280,  1281,  1282,  1282,
    1283,  1283,  1284,  1284,  1284,  1285,  1285,  1285,  1285,  1286,
    1286,  1287,  1287,  1287,  1287,  1287,  1288,  1288,  1289,  1289,
    1289,  1290,  1290,  1291,  1291,  1292,  1293,  1293,  1294,  1294,
    1295,  1296,  1297,  1297,  1298,  1298,  1299,  1299,  1300,  1300,
    1301,  1301,  1301,  1302,  1302,  1303,  1304,  1304,  1305,  1305,
    1306,  1306,  1306,  1307,  1307,  1308,  1308,  1308,  1308,  1308,
    1309,  1309,  1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,
    1310,  1310,  1310,  1311,  1311,  1311,  1311,  1311,  1312,  1312,
    1312,  1312,  1312,  1312,  1312,  1312,  1312,  1312,  1312,  1312,
    1312,  1312,  1312,  1312,  1312,  1313,  1313,  1314,  1314,  1314,
    1314,  1314,  1314,  1314,  1314,  1314,  1314,  1314,  1314,  1314,
    1314,  1314,  1315,  1315,  1316,  1316,  1317,  1317,  1318,  1318,
    1319,  1319,  1319,  1319,  1319,  1319,  1319,  1320,  1320,  1321,
    1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,
    1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,
    1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,
    1321,  1321,  1321,  1321,  1321,  1322,  1322,  1323,  1323,  1323,
    1323,  1323,  1323,  1323,  1323,  1323,  1323,  1323,  1323,  1323,
    1323,  1323,  1323,  1323,  1323,  1323,  1323,  1323,  1323,  1323,
    1323,  1323,  1323,  1323,  1323,  1324,  1324,  1324,  1324,  1324,
    1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,
    1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,  1325,
    1325,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,
    1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,
    1326,  1326,  1326,  1326,  1327,  1327,  1327,  1327,  1327,  1327,
    1327,  1328,  1328,  1329,  1329,  1330,  1330,  1331,  1331,  1332,
    1332,  1333,  1333,  1334,  1335,  1335,  1336,  1336,  1336,  1336,
    1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,
    1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1337,
    1337,  1338,  1338,  1338,  1339,  1339,  1340,  1340,  1340,  1340,
    1340,  1340,  1340,  1340,  1340,  1340,  1340,  1341,  1341,  1342,
    1342,  1343,  1343,  1343,  1344,  1344,  1345,  1345,  1345,  1346,
    1346,  1346,  1347,  1347,  1348,  1349,  1349,  1350,  1351,  1352,
    1353,  1353,  1354,  1354,  1355,  1355,  1356,  1356,  1357,  1357,
    1358,  1358,  1358,  1358,  1358,  1359,  1360,  1360,  1360,  1360,
    1360,  1361,  1361,  1361,  1361,  1361,  1362,  1362,  1362,  1363,
    1364,  1365,  1365,  1366,  1366,  1367,  1367,  1368,  1368,  1369,
    1369,  1370,  1371,  1371,  1371,  1371,  1371,  1371,  1371,  1371,
    1371,  1371,  1371,  1371,  1371,  1371,  1371,  1371,  1371,  1371,
    1371,  1371,  1371,  1371,  1372,  1372,  1373,  1373,  1374,  1374,
    1375,  1375,  1376,  1376,  1377,  1377,  1378,  1378,  1379,  1379,
    1379,  1380,  1380,  1381,  1381,  1381,  1381,  1381,  1381,  1382,
    1382,  1382,  1383,  1383,  1383,  1383,  1384,  1384,  1385,  1385,
    1386,  1386,  1387,  1387,  1388,  1389,  1389,  1389,  1389,  1389,
    1389,  1390,  1390,  1391,  1391,  1392,  1393,  1393,  1394,  1394,
    1395,  1396,  1397,  1397,  1398,  1398,  1398,  1399,  1399,  1400,
    1400,  1400,  1400,  1401,  1401,  1402,  1403,  1404,  1404,  1404,
    1405,  1405,  1405,  1405,  1406,  1406,  1407,  1407,  1408,  1408,
    1409,  1409,  1410,  1411,  1411,  1412,  1412,  1413,  1413,  1414,
    1415,  1415,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,
    1416,  1416,  1416,  1416,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1418,  1418,  1418,  1418,  1419,  1419,  1420,
    1420,  1421,  1421,  1422,  1422,  1423,  1424,  1424,  1425,  1425,
    1426,  1426,  1427,  1427,  1428,  1429,  1429,  1430,  1430,  1431,
    1431,  1432,  1432,  1433,  1434,  1434,  1434,  1434,  1435,  1435,
    1436,  1436,  1437,  1437,  1438,  1439,  1439,  1440,  1441,  1441,
    1442,  1442,  1443,  1443,  1444,  1444,  1445,  1446,  1446,  1446,
    1447,  1447,  1447,  1447,  1447,  1448,  1448,  1449,  1449,  1449,
    1449,  1449,  1449,  1450,  1450,  1450,  1450,  1450,  1451,  1451,
    1451,  1451,  1451,  1452,  1452,  1452,  1452,  1452,  1453,  1454,
    1454,  1455,  1455,  1456,  1456,  1457,  1458,  1458,  1458,  1459,
    1460,  1461,  1462,  1463,  1463,  1464,  1465,  1466,  1467,  1468,
    1469,  1470,  1471,  1472,  1473,  1474,  1475,  1476,  1476,  1477,
    1477,  1478,  1478,  1479,  1479,  1480,  1480,  1481,  1481,  1482,
    1482,  1483,  1483,  1484,  1484,  1484,  1485,  1485,  1485,  1486,
    1486,  1486,  1486,  1487,  1487,  1488,  1488,  1489,  1489,  1489,
    1490,  1490,  1490,  1491,  1491,  1492,  1493,  1493,  1494,  1494,
    1495,  1495,  1496,  1496,  1497,  1497,  1498,  1498,  1499,  1500,
    1501,  1501,  1502,  1502,  1503,  1503,  1504,  1504,  1505,  1505,
    1506,  1507,  1507,  1508,  1508,  1509,  1510,  1510,  1511,  1511,
    1511,  1512,  1512,  1513,  1513,  1514,  1514,  1514,  1515,  1516,
    1516,  1517,  1517,  1518,  1518,  1519,  1519,  1519,  1519,  1519,
    1519,  1519,  1519,  1519,  1520,  1520,  1521,  1522,  1523,  1524,
    1525,  1526,  1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,
    1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,  1544,
    1545,  1546,  1547,  1548,  1549,  1550,  1550,  1550,  1551,  1552,
    1553,  1554,  1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,
    1563,  1564,  1565,  1566,  1566,  1567,  1567,  1568,  1568,  1569,
    1569,  1570,  1570,  1571,  1571,  1571,  1571,  1572,  1572,  1573,
    1573,  1574,  1574,  1575,  1575,  1575,  1576,  1577,  1578,  1578,
    1578,  1578,  1578,  1578,  1579,  1579,  1580,  1580,  1581,  1581,
    1582,  1582,  1583,  1583,  1584,  1584,  1584,  1586,  1585,  1588,
    1587,  1587,  1589,  1589,  1590,  1589,  1591,  1591,  1592,  1592,
    1592,  1592,  1592,  1592,  1592,  1592,  1592,  1592,  1592,  1593,
    1593,  1595,  1594,  1594,  1596,  1596,  1597,  1597,  1598,  1598,
    1598,  1600,  1599,  1601,  1599,  1602,  1602,  1603,  1603,  1605,
    1604,  1606,  1607,  1607,  1608,  1609,  1609,  1609,  1610,  1611,
    1612,  1612,  1613,  1613,  1614,  1614,  1615,  1615,  1615,  1616,
    1616,  1616,  1617,  1617,  1618,  1618,  1619,  1619,  1620,  1620,
    1621,  1621,  1622,  1622,  1623,  1623,  1623,  1623,  1624,  1624,
    1625,  1625,  1626,  1626,  1627,  1627,  1628,  1628,  1629,  1629,
    1630,  1630,  1630,  1631,  1631,  1632,  1632,  1633,  1633,  1634,
    1634,  1635,  1636,  1636,  1637,  1637,  1638,  1638,  1639,  1639,
    1640,  1640,  1640,  1640,  1641,  1641,  1641,  1642,  1643,  1643,
    1643,  1644,  1644,  1645,  1646,  1646,  1646,  1646,  1646,  1646,
    1646,  1646,  1646,  1647,  1647,  1648,  1648,  1648,  1649,  1649,
    1649,  1650,  1650,  1650,  1651,  1651,  1652,  1653,  1653,  1654,
    1655,  1656,  1656,  1657,  1657,  1658,  1658,  1659,  1659,  1660,
    1660,  1661,  1661,  1662,  1663,  1664,  1665,  1666,  1667,  1668,
    1668,  1669,  1670,  1670,  1671,  1671,  1672,  1672,  1673,  1673,
    1674,  1674,  1674,  1675,  1675,  1675,  1676,  1676,  1677,  1677,
    1678,  1678,  1679,  1680,  1680,  1680,  1680,  1680,  1681,  1681,
    1681,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1683,  1683,  1683,  1684,
    1684,  1684,  1684,  1684,  1684,  1684,  1684,  1684,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1685,  1685,  1685,  1685,  1685,  1685,  1686,  1686,  1686,  1687,
    1687,  1687,  1687,  1688,  1688,  1688,  1688,  1688,  1689,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1691,  1691,  1691,  1691,
    1691,  1691,  1691,  1692,  1692,  1693,  1693,  1694,  1694,  1695,
    1696,  1696,  1697,  1697,  1698,  1698,  1699,  1699,  1700,  1700,
    1700,  1700,  1700,  1701,  1701,  1701,  1701,  1702,  1702,  1702,
    1702,  1703,  1703,  1703,  1703,  1703,  1703,  1704,  1705,  1705,
    1705,  1705,  1705,  1705,  1705,  1706,  1706,  1706,  1707,  1707,
    1708,  1708,  1709,  1710,  1710,  1711,  1712,  1712,  1713,  1713,
    1714,  1714,  1714,  1714,  1715,  1715,  1715,  1715,  1715,  1715,
    1715,  1717,  1716,  1716,  1718,  1718,  1719,  1719,  1720,  1721,
    1721,  1721,  1723,  1722,  1722,  1724,  1725,  1726,  1727,  1727,
    1727,  1727,  1727,  1727,  1727,  1727,  1728,  1728,  1728,  1728,
    1728,  1729,  1729,  1730,  1730,  1730,  1730,  1731,  1731,  1731,
    1731,  1731,  1732,  1732,  1733,  1732,  1732,  1732,  1734,  1734,
    1735,  1734,  1734,  1736,  1736,  1736,  1736,  1737,  1737,  1738,
    1738,  1739,  1739,  1739,  1739,  1739,  1739,  1739,  1739,  1739,
    1739,  1739,  1739,  1739,  1739,  1739,  1739,  1739,  1739,  1739,
    1739,  1739,  1739,  1739,  1739,  1739,  1739,  1739,  1739,  1739,
    1739,  1739,  1739,  1739,  1739,  1740,  1740,  1741,  1741,  1742,
    1742,  1743,  1743,  1743,  1744,  1744,  1744,  1744,  1744,  1745,
    1745,  1746,  1746,  1747,  1747,  1748,  1748,  1749,  1749,  1749,
    1750,  1750,  1750,  1751,  1751,  1751,  1752,  1752,  1752,  1752,
    1752,  1752,  1753,  1754,  1755,  1756,  1757,  1758,  1759,  1759,
    1759,  1760,  1760,  1760,  1760,  1760,  1760,  1760,  1760,  1760,
    1760,  1760,  1760,  1760,  1760,  1760,  1760,  1761,  1762,  1762,
    1763,  1763,  1764,  1764,  1765,  1765,  1766,  1766,  1766,  1766,
    1766,  1767,  1767,  1768,  1768,  1769,  1769,  1769,  1769,  1769,
    1770,  1770,  1772,  1771,  1773,  1773,  1774,  1774,  1774,  1775,
    1775,  1775,  1776,  1776,  1777,  1778,  1778,  1779,  1780,  1781,
    1781,  1781,  1782,  1783,  1784,  1785,  1785,  1785,  1785,  1785,
    1785,  1785,  1785,  1786,  1787,  1787,  1787,  1788,  1788,  1788,
    1788,  1788,  1789,  1789,  1789,  1789,  1789,  1789,  1790,  1790,
    1791,  1792,  1793,  1793,  1793,  1794,  1795,  1795,  1795,  1796,
    1796,  1796,  1798,  1797,  1799,  1800,  1800,  1800,  1800,  1801,
    1801,  1802,  1802,  1804,  1803,  1805,  1805,  1807,  1808,  1809,
    1810,  1806,  1811,  1811,  1812,  1812,  1814,  1815,  1816,  1817,
    1813,  1818,  1818,  1818,  1818,  1818,  1818,  1819,  1819,  1820,
    1820,  1820,  1821,  1821,  1822,  1822,  1822,  1823,  1823,  1824,
    1824,  1824,  1825,  1825,  1825,  1826,  1826,  1827,  1828,  1828,
    1829,  1829,  1830,  1830,  1831,  1831,  1832,  1832,  1833,  1834,
    1834,  1835,  1835,  1836,  1836,  1836,  1837,  1837,  1838,  1838,
    1839,  1839,  1840,  1840,  1841,  1841,  1842,  1842,  1843,  1843,
    1843,  1844,  1844,  1845
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_int8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     3,     1,     0,
       4,     2,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     4,     1,     2,     0,     4,
       0,     2,     3,     1,     2,     0,     3,     0,     7,     0,
       6,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       2,     3,     1,     3,     1,     2,     3,     5,     7,     2,
       3,     1,     3,     3,     2,     3,     1,     3,     1,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     5,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     1,     0,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     3,     3,     3,     0,     3,     9,     6,     7,     9,
       4,    10,     0,     6,     2,     9,     7,     6,     7,    11,
       8,     7,     0,     3,     3,     6,     3,     0,     3,    12,
      11,    11,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     0,    12,     0,     6,     2,     0,     1,     3,     3,
       1,     0,     2,     0,     2,     0,     1,     3,     4,     0,
       2,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     0,     2,
       0,     2,     2,     2,     2,     2,     2,     3,     3,     1,
       1,     1,     2,     3,     3,     3,     0,     3,     0,     1,
       3,     1,     3,     0,     1,     3,     1,     4,     0,     1,
       1,     1,     0,     3,     2,     3,     0,     3,     5,     5,
       0,     7,     0,     6,     1,     1,     1,     3,     1,     1,
       1,     3,     0,     1,     1,     1,     1,     2,     1,     3,
       1,     1,     0,     1,     0,     2,     3,     5,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     4,     0,     1,     1,     1,     3,
       1,     3,     3,     1,     2,     1,     1,     1,     1,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     0,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     5,     0,     2,     0,     3,     0,     2,     2,
       2,     2,     0,     6,     2,     0,     2,     1,     1,     3,
       0,     0,     0,     7,     0,     2,     2,     1,     1,     0,
       0,     8,     0,     6,     1,     2,     1,     2,     0,     0,
       6,     0,     0,     6,     0,     2,     0,     5,     0,     1,
       0,     5,     0,     2,     0,     5,     4,     0,     0,     8,
       0,     0,     8,     1,     1,     1,     1,     1,     0,     2,
       0,     4,     0,     1,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       1,     3,     1,     0,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     3,     1,     1,
       1,     2,     1,     1,     2,     3,     1,     3,     3,     3,
       3,     3,     3,     3,     4,     3,     1,     1,     3,     3,
       1,     1,     2,     1,     2,     1,     0,     2,     1,     2,
       1,     6,     6,     5,     4,     5,     4,     5,     0,     1,
       0,     3,     0,     2,     0,     8,     9,     0,     1,     1,
       3,     0,     2,     0,     3,     1,     3,     5,     0,     4,
       3,     1,     1,     1,     3,     1,     3,     0,     4,     1,
       3,     1,     1,     0,     3,     1,     3,     3,     0,     1,
       2,     1,     3,     4,     3,     3,     3,     4,     4,     3,
       1,     2,     1,     4,     0,     1,     1,     2,     1,     1,
       1,     0,     3,     1,     2,     1,     3,     0,     1,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
       1,     1,     3,     4,     4,     3,     2,     2,     3,     3,
       2,     3,     3,     1,     1,     1,     4,     4,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     3,     0,     1,     6,
       7,     7,     7,     8,     3,     4,     0,     2,     0,     1,
       0,     1,     2,     2,     9,     0,     2,     0,     1,     1,
       3,     3,     3,     1,     2,     1,     1,     3,     2,     3,
       2,     2,     1,     3,     3,     2,     3,     1,     2,     2,
       2,     1,     2,     1,     1,     1,     2,     3,     2,     3,
       2,     2,     5,     5,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     1,     2,
       1,     2,     3,     2,     1,     1,     1,     1,     1,     1,
       2,     0,     1,     1,     1,     1,     1,     0,     1,     0,
       1,     1,     5,     0,     3,     0,     2,     3,     0,     1,
       2,     1,     1,     1,     1,     3,     3,     3,     3,     0,
       1,     0,     1,     0,     1,     2,     1,     1,     2,     2,
       2,     4,     3,     1,     3,     2,     1,     2,     2,     2,
       2,     2,     2,     2,     1,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     2,     1,     1,
       1,     0,     2,     1,     1,     1,     1,     1,     1,     0,
       2,     0,     1,     1,     2,     2,     1,     2,     2,     0,
       1,     1,     1,     3,     1,     3,     0,     1,     0,     4,
       0,     1,     5,     0,     3,     3,     1,     0,     2,     2,
       2,     0,     3,     3,     6,     6,     1,     1,     2,     2,
       2,     2,     2,     1,     1,     0,     1,     1,     1,     1,
       0,     1,     0,     1,     1,     2,     1,     3,     0,     1,
       1,     2,     1,     0,     1,     1,     2,     1,     1,     3,
       2,     1,     3,     3,     1,     3,     3,     0,     1,     2,
       2,     1,     1,     1,     1,     1,     3,     1,     2,     5,
       3,     1,     1,     4,     0,     1,     1,     3,     4,     4,
       0,     5,     0,     5,     0,     5,     0,     5,     0,     4,
       0,    10,     7,     6,     6,     6,     4,     7,     7,     6,
       5,     5,     5,     5,     5,     5,     3,     3,     0,     2,
       8,     3,     0,     2,     2,     0,     1,     1,     2,     2,
       2,     2,     5,     3,     3,     3,     3,     5,     4,     3,
       4,     4,     2,     2,     2,     0,     2,     2,     1,     2,
       2,     2,     2,     3,     0,     3,     1,     4,     0,     3,
       0,     2,     0,     1,     1,     2,     1,     3,     1,     2,
       0,     1,     1,     3,     2,     2,     3,     6,     5,     3,
       4,     4,     4,     4,     5,     4,     3,     3,     8,     7,
       4,     4,     2,     2,     0,     1,     2,     2,     1,     1,
       1,     3,     3,     1,     3,     1,     3,     6,     5,     2,
       6,     5,     4,     4,     3,     3,     3,     3,     2,     2,
       6,     8,     5,     5,     4,     4,     4,     3,     5,     5,
       5,     5,     1,     3,     1,     1,     1,     0,     1,     1,
       2,     2,     3,     1,     1,     3,     1,     1,     0,     1,
       0,     1,     0,     1,     1,     0,     2,     1,     0,     1,
       1,     1,     2,     2,     2,     0,     1,     1,     3,     1,
       1,     1,     3,     3,     3,     4,     0,     0,    11,     3,
       0,     1,     1,     3,     3,     2,     2,     0,     3,     0,
       3,     0,     3,     0,     3,     0,     1,     1,     3,     1,
       1,     0,     2,     1,     3,     3,     3,     1,     4,     0,
       1,     1,     5,     0,     1,     1,     2,     1,     1,     1,
       5,     0,     2,     2,     0,     3,     2,     3,     0,     5,
       4,     2,     4,     0,     1,     1,     2,     1,     1,     1,
       1,     1,     2,     4,     0,     1,     1,     0,     4,     3,
       3,     5,     1,     3,     3,     5,     7,     1,     3,     2,
       1,     1,     8,     5,     1,     3,     3,     4,     0,     4,
       0,     2,     1,     2,     1,     3,     2,     3,     3,     3,
       4,     1,     1,     4,     4,     4,     3,     3,     1,     1,
       1,    10,     9,     0,     1,     2,     1,     1,     1,     3,
       2,     2,     0,     1,     2,     1,     1,     1,     2,     1,
       3,     4,     4,     1,     1,     2,     0,     1,     2,     1,
       3,     1,     1,     1,     2,     0,     2,     2,     1,     1,
       0,     2,     3,     3,     3,     2,     3,     4,     3,     4,
       3,     4,     1,     3,     4,     3,     4,     1,     3,     4,
       5,     7,     6,     8,     6,     5,     6,     4,     3,     5,
       4,     6,     3,     4,     1,     1,     0,     3,     3,     3,
       3,     3,     3,     5,     5,     3,     3,     3,     3,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     1,     1,     1,
       1,     3,     2,     2,     2,     2,     1,     3,     5,     6,
       2,     4,     7,     2,     7,     9,    12,     5,     6,     6,
       4,     4,     5,     3,     3,     0,     1,     4,     6,     2,
       4,     4,     4,    10,     6,     8,     8,     6,     4,     4,
       6,     4,     4,     4,     6,     4,     7,     7,     7,     6,
       6,     6,     6,     3,     4,     6,     8,     2,     2,     8,
       8,     6,     6,     4,     6,     1,     6,     6,     8,     8,
       6,     8,     6,     2,     8,     8,     2,     2,     2,     0,
       2,     4,     4,     4,     4,     3,     8,     6,     8,     4,
       6,     4,     6,     8,     4,     3,     6,     4,     6,     4,
       7,     7,    10,     1,     4,     4,     4,     4,     4,     6,
       4,     4,     6,     2,     3,     0,     4,     0,     3,     0,
       1,     1,     3,     2,     1,     1,     5,     6,     5,     5,
       5,     7,     5,     6,     5,     6,     5,     6,     5,     6,
       5,     6,     5,     5,     5,     5,     5,     6,     8,     1,
       1,     1,     2,     1,     0,     5,     4,     4,     4,     4,
       4,     5,     7,     7,     6,     6,     9,     0,     3,     1,
       1,     1,     1,     2,     0,     2,     0,     2,     2,     0,
       2,     2,     0,     1,     2,     1,     1,     1,     3,     4,
       0,     1,     0,     3,     0,     3,     0,     3,     1,     1,
       2,     2,     2,     4,     2,     4,     1,     2,     2,     2,
       4,     0,     3,     2,     2,     3,     1,     1,     1,     4,
       4,     2,     4,     0,     1,     0,     2,     0,     3,     3,
       1,     2,     2,     3,     2,     1,     2,     1,     2,     1,
       1,     2,     2,     2,     1,     1,     2,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     3,     1,     3,
       1,     3,     0,     1,     0,     2,     4,     5,     1,     1,
       4,     1,     1,     5,     7,     5,     7,     3,     3,     3,
       4,     4,     1,     2,     2,     1,     3,     3,     0,     1,
       0,     1,     0,     1,     4,     1,     1,     1,     1,     1,
       1,     3,     5,     3,     3,     5,     3,     3,     3,     4,
       8,     4,     1,     3,     3,     7,     4,     0,     1,     0,
       1,     1,     2,     1,     2,     3,     3,     1,     1,     2,
       0,     2,     3,     3,     1,     1,     6,     6,     1,     2,
       0,     1,     1,     0,     1,     1,     1,     1,     3,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     0,
       2,     0,     1,     0,     1,     2,     0,     2,     0,     2,
       2,     3,     3,     1,     4,     0,     3,     1,     3,     0,
       2,     1,     3,     3,     0,     4,     6,     6,     3,     1,
       0,     1,     3,     1,     2,     0,     1,     3,     3,     1,
       0,     1,     1,     1,     0,     1,     2,     1,     3,     3,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     2,     1,     2,     5,     2,     1,     2,
       6,     6,     4,     6,     4,     5,     4,     4,     5,     4,
       4,     4,     5,     5,     4,     6,     4,     1,     3,     1,
       3,     0,     2,     0,     3,     0,     1,     0,     1,     1,
       3,     1,     1,     9,    10,     8,     6,     7,     6,     0,
       1,     1,     1,     1,     1,     0,     1,     1,     3,     4,
       1,     3,     4,     3,     1,     2,     1,     2,     1,     1,
       3,     1,     3,     1,     1,     1,     0,     1,     3,     4,
       0,     1,     3,     1,     1,     1,     0,     3,     0,     5,
      10,     0,     1,     3,     1,     3,     0,     1,    10,     7,
       8,     0,     2,     0,     2,     1,     1,     1,     3,     0,
       1,     0,     1,     1,     3,     1,     1,     2,     2,     2,
       1,     1,     1,     1,     0,     3,     3,     5,     5,     4,
       5,     5,     2,     4,     4,     4,     7,     3,     2,     6,
       7,     7,     3,     6,     6,     3,     3,     2,     5,     4,
       3,     4,     3,     3,     2,     2,     4,     6,     5,     4,
       4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
       4,     4,     3,     1,     1,     0,     1,     0,     2,     0,
       1,     0,     1,     0,     1,     1,     2,     1,     1,     0,
       2,     0,     2,     0,     2,     1,     3,     3,     2,     2,
       2,     2,     2,     3,     1,     1,     0,     3,     2,     2,
       0,     3,     0,     3,     0,     1,     1,     0,     4,     0,
       4,     1,     0,     3,     0,     3,     3,     1,     2,     2,
       2,     2,     2,     3,     1,     1,     1,     1,     1,     0,
       1,     0,     3,     3,     3,     1,     0,     2,     1,     3,
       3,     0,     4,     0,     6,     0,     1,     0,     2,     0,
       3,     3,     2,     2,     3,     0,     1,     1,     2,    25,
       1,     1,     0,     1,     0,     1,     0,     1,     1,     1,
       1,     1,     0,     2,     0,     4,     0,     1,     1,     1,
       0,     2,     2,     1,     3,     4,     3,     3,     0,     2,
       2,     1,     3,     3,     0,     4,     0,     3,     1,     1,
       0,     3,     2,     3,     1,     1,     2,     0,     2,     3,
       1,     3,     0,     3,     0,     3,     0,     3,     0,     3,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     2,     0,     1,     1,     3,     5,     2,
       1,     1,     1,     1,     1,     3,     5,     1,     3,     2,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     2,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       2,     2,     5,     5,     7,     7,     3,     3,     3,     6,
       6,     6,     4,     0,     2,     4,     6,     1,     3,     1,
       2,     2,     0,     2,     1,     3,     2,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     1,     0,     2,     2,
       2,     0,     2,     2,     2,     2,     2,     3,     3,     4,
       6,     2,     3,     3,     2,     1,     3,     3,     1,     3,
       2,     2,     1,     0,     2,     3,     0,     2,     2,     2,
       2,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     4,     4,     1,     1,     1,     3,     3,     1,
       1,     2,     0,     3,     2,     1,     1,     3,     4,     2,
       6,     5,     9,     3,     3,     2,     4,     3,     6,     7,
      10,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     6,     9,     0,    11,    10,     8,     5,     9,
       0,    11,     7,     0,     1,     1,     1,     0,     1,     1,
       3,     2,     3,     2,     2,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     3,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     2,     2,     2,     0,     3,     0,     1,     3,
       1,     2,     2,     2,     1,     3,     3,     1,     3,     1,
       3,     1,     3,     0,     3,     0,     3,     3,     2,     7,
       3,     3,     2,     0,     2,     4,     1,     1,     1,     1,
       1,     1,     3,     4,     3,     5,     5,     6,     3,     3,
       3,     5,     5,     3,     3,     5,     2,     3,     3,     3,
       2,     4,     7,     4,     7,     3,     5,     2,     1,     3,
       1,     3,     0,     3,     1,     3,     0,     2,     2,     2,
       2,     0,     3,     0,     3,     0,     3,     4,     3,     3,
       0,     3,     0,     3,     0,     1,     0,     3,     2,     0,
       1,     2,     0,     1,     4,     4,     5,     2,     3,     0,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     3,     4,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     3,     1,     2,     1,     2,     3,     3,     3,     0,
       3,     3,     0,     7,     2,     0,     3,     4,     4,     1,
       1,     0,     2,     0,    13,     8,     7,     0,     0,     0,
       0,    15,     1,     1,     2,     1,     0,     0,     0,     0,
      12,     4,     4,     3,     4,     3,     3,     0,     2,     1,
       3,     5,     1,     1,     0,     1,     1,     0,     2,     0,
       1,     3,     0,     1,     1,     1,     1,     4,     1,     3,
       0,     2,     5,     4,     3,     3,     1,     3,     4,     6,
      10,     1,     5,     0,     2,     3,     1,     1,     0,     3,
       1,     3,     1,     3,     1,     2,     0,     3,     0,     1,
       1,     0,     1,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                    \
  do                                                              \
    if (yychar == YYEMPTY)                                        \
      {                                                           \
        yychar = (Token);                                         \
        yylval = (Value);                                         \
        YYPOPSTACK (yylen);                                       \
        yystate = *yyssp;                                         \
        goto yybackup;                                            \
      }                                                           \
    else                                                          \
      {                                                           \
        yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
        YYERROR;                                                  \
      }                                                           \
  while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if MY_SQL_PARSER_DEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined MY_SQL_PARSER_LTYPE_IS_TRIVIAL && MY_SQL_PARSER_LTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static int
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  int res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*-----------------------------------.
| Print this symbol's value on YYO.  |
`-----------------------------------*/

static void
yy_symbol_value_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyoutput = yyo;
  YYUSE (yyoutput);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyo, yytoknum[yytype], *yyvaluep);
# endif
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}


/*---------------------------.
| Print this symbol on YYO.  |
`---------------------------*/

static void
yy_symbol_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyo, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyo, *yylocationp);
  YYFPRINTF (yyo, ": ");
  yy_symbol_value_print (yyo, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyo, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %d):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[+yyssp[yyi + 1 - yynrhs]],
                       &yyvsp[(yyi + 1) - (yynrhs)]
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !MY_SQL_PARSER_DEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !MY_SQL_PARSER_DEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen(S) (YY_CAST (YYPTRDIFF_T, strlen (S)))
#  else
/* Return the length of YYSTR.  */
static YYPTRDIFF_T
yystrlen (const char *yystr)
{
  YYPTRDIFF_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYPTRDIFF_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYPTRDIFF_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            else
              goto append;

          append:
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (yyres)
    return yystpcpy (yyres, yystr) - yyres;
  else
    return yystrlen (yystr);
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYPTRDIFF_T *yymsg_alloc, char **yymsg,
                yy_state_t *yyssp, int yytoken)
{
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat: reported tokens (one for the "unexpected",
     one per "expected"). */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Actual size of YYARG. */
  int yycount = 0;
  /* Cumulated lengths of YYARG.  */
  YYPTRDIFF_T yysize = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[+*yyssp];
      YYPTRDIFF_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
      yysize = yysize0;
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYPTRDIFF_T yysize1
                    = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM)
                    yysize = yysize1;
                  else
                    return 2;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
    default: /* Avoid compiler warnings. */
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    /* Don't count the "%s"s in the final size, but reserve room for
       the terminator.  */
    YYPTRDIFF_T yysize1 = yysize + (yystrlen (yyformat) - 2 * yycount) + 1;
    if (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM)
      yysize = yysize1;
    else
      return 2;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          ++yyp;
          ++yyformat;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined MY_SQL_PARSER_LTYPE_IS_TRIVIAL && MY_SQL_PARSER_LTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    yy_state_fast_t yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yy_state_t yyssa[YYINITDEPTH];
    yy_state_t *yyss;
    yy_state_t *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYPTRDIFF_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYPTRDIFF_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;


/*------------------------------------------------------------.
| yynewstate -- push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;


/*--------------------------------------------------------------------.
| yysetstate -- set current state (the top of the stack) to yystate.  |
`--------------------------------------------------------------------*/
yysetstate:
  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
  YY_ASSERT (0 <= yystate && yystate < YYNSTATES);
  YY_IGNORE_USELESS_CAST_BEGIN
  *yyssp = YY_CAST (yy_state_t, yystate);
  YY_IGNORE_USELESS_CAST_END

  if (yyss + yystacksize - 1 <= yyssp)
#if !defined yyoverflow && !defined YYSTACK_RELOCATE
    goto yyexhaustedlab;
#else
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYPTRDIFF_T yysize = yyssp - yyss + 1;

# if defined yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        yy_state_t *yyss1 = yyss;
        YYSTYPE *yyvs1 = yyvs;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * YYSIZEOF (*yyssp),
                    &yyvs1, yysize * YYSIZEOF (*yyvsp),
                    &yyls1, yysize * YYSIZEOF (*yylsp),
                    &yystacksize);
        yyss = yyss1;
        yyvs = yyvs1;
        yyls = yyls1;
      }
# else /* defined YYSTACK_RELOCATE */
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yy_state_t *yyss1 = yyss;
        union yyalloc *yyptr =
          YY_CAST (union yyalloc *,
                   YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
# undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YY_IGNORE_USELESS_CAST_BEGIN
      YYDPRINTF ((stderr, "Stack size increased to %ld\n",
                  YY_CAST (long, yystacksize)));
      YY_IGNORE_USELESS_CAST_END

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }
#endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;


/*-----------.
| yybackup.  |
`-----------*/
yybackup:
  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;

  /* Discard the shifted token.  */
  yychar = YYEMPTY;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location. */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  yyerror_range[1] = yyloc;
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
  case 3:
#line 2304 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 26077 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 4:
#line 2309 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 26091 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 5:
#line 2319 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == nullptr)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 26113 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 6:
#line 2337 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 26121 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 7:
#line 2341 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
         {
           ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
           static_cast<Derived_expr_parser_state *>(YYP)->result= (yyvsp[-1].item);
         }
#line 26130 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 8:
#line 2349 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= nullptr;
          }
#line 26146 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 9:
#line 2361 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= nullptr;
            }
          }
#line 26173 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 11:
#line 2386 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= nullptr;
          }
#line 26182 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 14:
#line 2398 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { *parse_tree= (yyvsp[0].top_level_node); }
#line 26188 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 16:
#line 2404 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26194 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 17:
#line 2405 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26200 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 18:
#line 2406 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26206 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 20:
#line 2408 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26212 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 21:
#line 2409 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26218 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 23:
#line 2411 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26224 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 24:
#line 2412 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26230 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 25:
#line 2413 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26236 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 27:
#line 2415 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26242 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 28:
#line 2416 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26248 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 30:
#line 2418 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26254 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 32:
#line 2420 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26260 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 34:
#line 2422 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26266 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 35:
#line 2423 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26272 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 36:
#line 2424 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26278 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 37:
#line 2425 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26284 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 43:
#line 2431 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26290 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 47:
#line 2435 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26296 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 48:
#line 2436 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26302 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 49:
#line 2437 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26308 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 51:
#line 2439 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26314 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 52:
#line 2440 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26320 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 55:
#line 2443 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26326 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 57:
#line 2445 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26332 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 58:
#line 2446 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26338 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 59:
#line 2447 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26344 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 60:
#line 2448 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26350 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 61:
#line 2449 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26356 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 62:
#line 2450 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26362 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 63:
#line 2451 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26368 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 65:
#line 2453 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26374 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 66:
#line 2454 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26380 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 67:
#line 2455 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26386 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 68:
#line 2456 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26392 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 70:
#line 2458 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26398 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 71:
#line 2459 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26404 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 74:
#line 2462 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26410 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 76:
#line 2464 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26416 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 80:
#line 2468 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26422 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 81:
#line 2469 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26428 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 82:
#line 2470 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26434 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 83:
#line 2471 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26440 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 86:
#line 2474 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26446 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 87:
#line 2475 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26452 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 89:
#line 2477 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26458 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 90:
#line 2478 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26464 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 91:
#line 2479 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26470 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 93:
#line 2481 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 26476 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 142:
#line 2530 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26482 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 143:
#line 2531 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26488 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 144:
#line 2532 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26494 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 145:
#line 2533 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26500 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 147:
#line 2535 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26506 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 148:
#line 2536 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26512 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 150:
#line 2538 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26518 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 151:
#line 2539 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26524 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 152:
#line 2544 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 26535 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 155:
#line 2559 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 26556 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 156:
#line 2579 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 26567 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 157:
#line 2586 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 26578 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 158:
#line 2596 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 26589 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 159:
#line 2603 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 26595 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 164:
#line 2618 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 26606 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 165:
#line 2630 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 26618 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 166:
#line 2638 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 26628 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 167:
#line 2649 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_SOURCE;
            /*
              Clear LEX_SOURCE_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            assert(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 26643 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 168:
#line 2660 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 26652 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 169:
#line 2665 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            assert(lex->m_sql_cmd == nullptr);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 26666 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 170:
#line 2675 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 26675 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 173:
#line 2687 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 26686 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 174:
#line 2694 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 26697 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 175:
#line 2701 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 26708 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 176:
#line 2708 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 26719 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 177:
#line 2715 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 26730 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 178:
#line 2722 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 26742 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 179:
#line 2730 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 26753 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 180:
#line 2739 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
          }
#line 26763 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 181:
#line 2745 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 26771 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 182:
#line 2752 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 26782 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 183:
#line 2759 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 26791 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 184:
#line 2767 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 26802 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 185:
#line 2776 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
          }
#line 26812 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 186:
#line 2782 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 26820 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 187:
#line 2788 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 26832 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 188:
#line 2796 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 26842 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 189:
#line 2804 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
          }
#line 26852 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 190:
#line 2810 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 26860 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 191:
#line 2817 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 26871 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 192:
#line 2824 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 26880 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 193:
#line 2832 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 26893 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 194:
#line 2844 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
          }
#line 26903 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 195:
#line 2850 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 26911 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 196:
#line 2857 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 26922 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 197:
#line 2864 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 26931 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 198:
#line 2872 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 26942 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 201:
#line 2887 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 26950 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 202:
#line 2891 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 26958 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 203:
#line 2895 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 26966 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 204:
#line 2899 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 26974 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 205:
#line 2903 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_SOURCE_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 26988 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 206:
#line 2913 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 26996 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 207:
#line 2917 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 27004 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 208:
#line 2921 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_SOURCE_INFO::LEX_MI_ENABLE;
          }
#line 27013 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 209:
#line 2926 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulong_num) > SOURCE_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_SOURCE_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, SOURCE_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 27028 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 210:
#line 2937 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_SOURCE_INFO::LEX_MI_ENABLE : LEX_SOURCE_INFO::LEX_MI_DISABLE;
          }
#line 27037 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 211:
#line 2942 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 27045 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 212:
#line 2946 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 27053 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 213:
#line 2950 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 27061 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 215:
#line 2955 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 27069 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 216:
#line 2959 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 27077 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 217:
#line 2963 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 27085 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 218:
#line 2967 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_SOURCE_INFO::LEX_MI_ENABLE : LEX_SOURCE_INFO::LEX_MI_DISABLE;
          }
#line 27094 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 219:
#line 2972 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 27102 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 220:
#line 2976 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 27110 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 221:
#line 2980 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 27118 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 222:
#line 2984 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_SOURCE_INFO::LEX_MI_ENABLE :
              LEX_SOURCE_INFO::LEX_MI_DISABLE;
          }
#line 27128 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 223:
#line 2990 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > REPLICA_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(REPLICA_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, REPLICA_MAX_HEARTBEAT_PERIOD);
               my_error(ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > replica_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_SOURCE_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_SOURCE_INFO::LEX_MI_ENABLE;
          }
#line 27166 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 224:
#line 3024 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_server_ids_opt= LEX_SOURCE_INFO::LEX_MI_ENABLE;
           }
#line 27174 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 225:
#line 3028 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 27182 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 226:
#line 3032 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 27190 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 227:
#line 3036 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_SOURCE_INFO::LEX_MI_ENABLE :
              LEX_SOURCE_INFO::LEX_MI_DISABLE;
          }
#line 27200 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 229:
#line 3043 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.require_row_format =
                  LEX_SOURCE_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.require_row_format =
                  LEX_SOURCE_INFO::LEX_MI_ENABLE;
                break;
            default:
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
          }
#line 27220 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 231:
#line 3060 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_SOURCE_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_SOURCE_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
            }
          }
#line 27240 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 233:
#line 3077 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_gtid_only =
                  LEX_SOURCE_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_gtid_only =
                  LEX_SOURCE_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]),
                  "You have an error in your CHANGE REPLICATION SOURCE syntax; GTID_ONLY only accepts values 0 or 1");
                MYSQL_YYABORT;
            }
          }
#line 27261 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 238:
#line 3104 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 27269 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 239:
#line 3110 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 27279 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 240:
#line 3116 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= nullptr;
            Lex->mi.privilege_checks_hostname= nullptr;
          }
#line 27289 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 241:
#line 3125 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.require_table_primary_key_check= LEX_SOURCE_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 27297 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 242:
#line 3129 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.require_table_primary_key_check= LEX_SOURCE_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 27305 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 243:
#line 3133 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.require_table_primary_key_check= LEX_SOURCE_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 27313 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 244:
#line 3137 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.require_table_primary_key_check= LEX_SOURCE_INFO::LEX_MI_PK_CHECK_GENERATE;
          }
#line 27321 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 245:
#line 3144 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_SOURCE_INFO::LEX_MI_ANONYMOUS_TO_GTID_OFF;
          }
#line 27329 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 246:
#line 3148 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_SOURCE_INFO::LEX_MI_ANONYMOUS_TO_GTID_LOCAL;
          }
#line 27337 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 247:
#line 3152 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_SOURCE_INFO::LEX_MI_ANONYMOUS_TO_GTID_UUID;
            Lex->mi.assign_gtids_to_anonymous_transactions_manual_uuid = (yyvsp[0].lexer.lex_str).str;
            if (!mysql::gtid::Uuid::is_valid((yyvsp[0].lexer.lex_str).str, mysql::gtid::Uuid::TEXT_LENGTH))
            {
              my_error(ER_WRONG_VALUE, MYF(0), "UUID", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 27351 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 248:
#line 3166 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.tls_ciphersuites = LEX_SOURCE_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 27360 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 249:
#line 3171 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.tls_ciphersuites = LEX_SOURCE_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = nullptr;
          }
#line 27369 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 250:
#line 3179 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 27377 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 251:
#line 3183 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               SOURCE_LOG_POS has been explicitely specified. On the contrary
               in change_master() (rpl_replica.cc) we cannot distinguish between 0
               (SOURCE_LOG_POS_SYM explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 27397 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 252:
#line 3199 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 27405 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 253:
#line 3203 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 27416 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 254:
#line 3212 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lex_cstr) = {}; }
#line 27422 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 255:
#line 3214 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 27428 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 256:
#line 3220 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 27441 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 257:
#line 3230 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             nullptr,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 27454 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 258:
#line 3240 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 27462 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 259:
#line 3245 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 27470 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 260:
#line 3252 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_role((yyloc), !!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 27478 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 261:
#line 3262 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group((yyloc), to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 27488 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 262:
#line 3271 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= nullptr;
            Lex->create_info->used_fields= 0;
          }
#line 27500 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 263:
#line 3279 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 27511 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 264:
#line 3286 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 27517 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 265:
#line 3291 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-4].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-6].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            MAKE_CMD_DCL_DUMMY();
          }
#line 27532 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 266:
#line 3303 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 27555 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 267:
#line 3323 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 27577 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 268:
#line 3342 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 27600 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 269:
#line 3362 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 27617 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 270:
#line 3379 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyloc), (yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 27625 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 271:
#line 3384 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyloc), (yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 27633 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 272:
#line 3391 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 27643 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 273:
#line 3397 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 27659 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 274:
#line 3409 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 27675 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 275:
#line 3422 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 27692 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 276:
#line 3435 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 27708 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 277:
#line 3450 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.user_list)= nullptr;
          }
#line 27716 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 278:
#line 3455 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 27724 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 279:
#line 3464 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt((yyloc), YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 27735 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 280:
#line 3472 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt((yyloc), YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             nullptr, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 27746 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 281:
#line 3480 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt((yyloc), YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             nullptr, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 27757 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 284:
#line 3495 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 27765 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 285:
#line 3499 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 27773 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 286:
#line 3503 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 27781 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 287:
#line 3507 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 27789 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 288:
#line 3511 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 27798 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 289:
#line 3516 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 27806 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 290:
#line 3520 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 27814 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 291:
#line 3527 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
            MAKE_CMD_DDL_DUMMY();
          }
#line 27835 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 292:
#line 3548 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
            assert(Lex->m_sql_cmd->sql_cmd_type() == SQL_CMD_DDL);
            assert(Lex->m_sql_cmd->sql_command_code() == SQLCOM_CREATE_EVENT);
          }
#line 27849 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 293:
#line 3561 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 27860 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 295:
#line 3570 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 27870 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 296:
#line 3578 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 27876 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 297:
#line 3580 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27886 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 298:
#line 3586 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            push_deprecated_warn(YYTHD, "<CREATE|ALTER> EVENT ... DISABLE ON SLAVE",
                                        "<CREATE|ALTER> EVENT ... DISABLE ON REPLICA");
            Lex->event_parse_data->status= Event_parse_data::REPLICA_SIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27898 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 299:
#line 3594 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::REPLICA_SIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27908 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 300:
#line 3600 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27918 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 301:
#line 3609 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == nullptr)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 27929 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 302:
#line 3616 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 27939 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 304:
#line 3626 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 27949 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 305:
#line 3634 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 27955 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 307:
#line 3640 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 27965 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 308:
#line 3646 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 27975 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 309:
#line 3654 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 27981 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 310:
#line 3656 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 27990 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 311:
#line 3663 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            // Default language is SQL
            lex->sp_chistics.language = {"SQL",3};

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 28043 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 312:
#line 3712 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 28057 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 326:
#line 3741 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == nullptr)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 28075 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 327:
#line 3755 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == nullptr)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 28095 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 328:
#line 3773 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 28101 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 329:
#line 3774 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                   {}
#line 28107 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 330:
#line 3778 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 28113 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 331:
#line 3779 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                     {}
#line 28119 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 332:
#line 3785 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 28125 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 333:
#line 3787 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->sp_chistics.language= {"SQL",3}; }
#line 28131 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 334:
#line 3789 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->sp_chistics.language= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 28137 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 335:
#line 3791 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 28143 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 336:
#line 3793 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 28149 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 337:
#line 3795 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 28155 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 338:
#line 3797 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 28161 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 339:
#line 3799 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 28167 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 340:
#line 3804 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { }
#line 28173 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 341:
#line 3805 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { Lex->sp_chistics.detistic= true; }
#line 28179 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 342:
#line 3806 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { Lex->sp_chistics.detistic= false; }
#line 28185 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 343:
#line 3811 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 28193 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 344:
#line 3815 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 28201 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 345:
#line 3822 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_call((yyloc), (yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 28209 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 346:
#line 3828 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                   { (yyval.item_list2)= nullptr; }
#line 28215 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 347:
#line 3830 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
            {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 28223 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 352:
#line 3848 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      nullptr, nullptr, &NULL_CSTR, nullptr,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 28275 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 357:
#line 3910 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      nullptr, nullptr, &NULL_CSTR, nullptr,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 28326 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 358:
#line 3959 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.num)= sp_variable::MODE_IN; }
#line 28332 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 359:
#line 3960 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.num)= sp_variable::MODE_IN; }
#line 28338 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 360:
#line 3961 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.num)= sp_variable::MODE_OUT; }
#line 28344 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 361:
#line 3962 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.num)= sp_variable::MODE_INOUT; }
#line 28350 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 362:
#line 3966 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 28356 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 364:
#line 3971 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                           {}
#line 28362 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 366:
#line 3977 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 28370 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 367:
#line 3981 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 28395 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 368:
#line 4009 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == nullptr)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        nullptr, nullptr, &NULL_CSTR, nullptr,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(),
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 28494 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 369:
#line 4104 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 28515 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 370:
#line 4121 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 28560 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 371:
#line 4162 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == nullptr ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 28598 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 372:
#line 4199 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 28611 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 373:
#line 4208 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            assert(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->m_sql_cmd->set_as_part_of_sp();
            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == nullptr ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 28677 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 374:
#line 4272 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.num)= sp_handler::EXIT; }
#line 28683 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 375:
#line 4273 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.num)= sp_handler::CONTINUE; }
#line 28689 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 376:
#line 4279 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.num)= 1; }
#line 28695 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 377:
#line 4281 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.num)+= 1; }
#line 28701 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 378:
#line 4286 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 28725 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 379:
#line 4309 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == nullptr)
              MYSQL_YYABORT;
          }
#line 28740 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 381:
#line 4324 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == nullptr)
              MYSQL_YYABORT;
          }
#line 28763 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 382:
#line 4345 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 28769 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 383:
#line 4346 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       {}
#line 28775 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 384:
#line 4351 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 28783 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 385:
#line 4355 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == nullptr)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 28800 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 386:
#line 4368 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == nullptr)
              MYSQL_YYABORT;
          }
#line 28810 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 387:
#line 4374 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == nullptr)
              MYSQL_YYABORT;
          }
#line 28820 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 388:
#line 4380 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == nullptr)
              MYSQL_YYABORT;
          }
#line 28830 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 389:
#line 4389 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 28844 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 390:
#line 4402 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 28874 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 391:
#line 4428 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28880 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 392:
#line 4432 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.spcondvalue)= nullptr; }
#line 28886 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 393:
#line 4434 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28892 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 394:
#line 4438 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 28898 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 395:
#line 4440 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 28904 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 396:
#line 4445 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 28914 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 397:
#line 4452 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 28924 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 398:
#line 4464 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 28930 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 399:
#line 4466 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 28936 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 400:
#line 4468 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 28942 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 401:
#line 4474 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 28948 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 402:
#line 4476 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 28954 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 403:
#line 4478 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 28960 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 404:
#line 4480 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 28966 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 405:
#line 4482 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 28972 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 406:
#line 4484 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 28978 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 407:
#line 4486 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 28984 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 408:
#line 4488 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 28990 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 409:
#line 4490 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 28996 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 410:
#line 4492 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 29002 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 411:
#line 4494 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 29008 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 412:
#line 4496 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 29014 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 413:
#line 4501 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 29029 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 414:
#line 4515 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 29046 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 415:
#line 4531 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                  { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 29052 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 416:
#line 4533 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 29058 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 417:
#line 4535 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 29064 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 418:
#line 4540 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == nullptr)
              MYSQL_YYABORT;
          }
#line 29074 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 419:
#line 4546 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == nullptr)
              MYSQL_YYABORT;
          }
#line 29084 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 420:
#line 4555 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == nullptr || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 29094 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 421:
#line 4561 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 29104 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 422:
#line 4570 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == nullptr)
              MYSQL_YYABORT;
          }
#line 29114 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 423:
#line 4578 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is nullptr if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == nullptr)
              MYSQL_YYABORT;
          }
#line 29146 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 424:
#line 4606 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 29155 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 425:
#line 4614 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 29161 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 426:
#line 4616 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 29167 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 427:
#line 4625 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 29173 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 428:
#line 4630 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == nullptr || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 29183 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 429:
#line 4636 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 29193 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 430:
#line 4645 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == nullptr)
              MYSQL_YYABORT;
          }
#line 29203 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 431:
#line 4653 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 29209 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 432:
#line 4655 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 29215 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 433:
#line 4657 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 29221 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 434:
#line 4659 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 29227 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 435:
#line 4661 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 29233 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 436:
#line 4663 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 29239 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 437:
#line 4665 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 29245 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 438:
#line 4667 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 29251 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 439:
#line 4669 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 29257 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 440:
#line 4671 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 29263 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 441:
#line 4673 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 29269 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 442:
#line 4675 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 29275 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 443:
#line 4677 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 29281 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 444:
#line 4682 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 29305 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 445:
#line 4702 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 29329 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 446:
#line 4725 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.sp_default).expr_start= nullptr;
            (yyval.sp_default).expr = nullptr;
          }
#line 29338 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 447:
#line 4730 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 29347 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 461:
#line 4754 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 29353 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 462:
#line 4756 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 29363 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 463:
#line 4764 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 29376 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 464:
#line 4773 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);

            // Mark statement as belonging to a stored procedure:
            if (lex->m_sql_cmd != nullptr)
              lex->m_sql_cmd->set_as_part_of_sp();

            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            assert((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 29428 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 465:
#line 4824 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29440 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 466:
#line 4832 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == nullptr ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29490 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 467:
#line 4880 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 29505 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 468:
#line 4891 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 29518 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 469:
#line 4903 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29576 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 470:
#line 4960 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29624 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 471:
#line 5007 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29648 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 472:
#line 5030 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29672 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 473:
#line 5050 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 29678 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 474:
#line 5055 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29702 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 478:
#line 5084 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 29724 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 479:
#line 5102 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 29746 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 480:
#line 5122 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29758 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 481:
#line 5130 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == nullptr ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29799 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 482:
#line 5168 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 29821 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 483:
#line 5186 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 29834 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 489:
#line 5209 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 29848 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 490:
#line 5219 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == nullptr ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29894 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 491:
#line 5264 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 29902 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 492:
#line 5271 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            case_stmt_action_case(YYTHD);
          }
#line 29910 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 493:
#line 5278 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            case_stmt_action_end_case(Lex, false);
          }
#line 29918 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 498:
#line 5295 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29930 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 499:
#line 5303 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == nullptr ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29975 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 500:
#line 5345 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 29984 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 501:
#line 5353 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29996 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 502:
#line 5361 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == nullptr ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 30037 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 503:
#line 5399 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 30046 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 504:
#line 5407 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 30064 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 506:
#line 5425 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 30086 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 507:
#line 5443 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 30107 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 508:
#line 5462 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lex_cstr)= NULL_CSTR; }
#line 30113 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 509:
#line 5463 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 30119 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 510:
#line 5468 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 30139 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 511:
#line 5484 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 30158 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 512:
#line 5501 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 30173 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 513:
#line 5512 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 30182 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 514:
#line 5520 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 30199 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 515:
#line 5535 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 30233 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 516:
#line 5569 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 30250 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 517:
#line 5582 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 30262 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 518:
#line 5590 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == nullptr ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 30304 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 519:
#line 5631 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 30323 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 520:
#line 5648 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 30335 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 521:
#line 5656 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == nullptr ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 30377 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 523:
#line 5699 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
            { (yyval.num)= TRG_ACTION_BEFORE; }
#line 30383 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 524:
#line 5701 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
            { (yyval.num)= TRG_ACTION_AFTER; }
#line 30389 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 525:
#line 5706 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
            { (yyval.num)= TRG_EVENT_INSERT; }
#line 30395 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 526:
#line 5708 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
            { (yyval.num)= TRG_EVENT_UPDATE; }
#line 30401 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 527:
#line 5710 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
            { (yyval.num)= TRG_EVENT_DELETE; }
#line 30407 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 528:
#line 5724 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
             { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 30413 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 529:
#line 5726 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
      {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 30421 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 530:
#line 5732 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 30427 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 531:
#line 5734 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 30435 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 532:
#line 5740 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ts_options)= nullptr; }
#line 30441 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 534:
#line 5746 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == nullptr || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30451 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 535:
#line 5752 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30461 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 547:
#line 5774 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ts_options)= nullptr; }
#line 30467 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 549:
#line 5780 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == nullptr || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30477 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 550:
#line 5786 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30487 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 558:
#line 5804 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ts_options)= nullptr; }
#line 30493 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 560:
#line 5810 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == nullptr || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30503 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 561:
#line 5816 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30513 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 563:
#line 5828 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ts_options)= nullptr; }
#line 30519 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 565:
#line 5834 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == nullptr || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30529 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 566:
#line 5840 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30539 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 574:
#line 5858 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ts_options)= nullptr; }
#line 30545 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 576:
#line 5864 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == nullptr || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30555 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 577:
#line 5870 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30565 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 581:
#line 5884 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                       { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 30571 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 582:
#line 5888 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 30577 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 583:
#line 5889 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 30583 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 584:
#line 5893 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                       { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 30589 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 585:
#line 5898 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30597 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 586:
#line 5905 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option) = NEW_PTN PT_alter_tablespace_option_autoextend_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30605 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 587:
#line 5911 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                    { (yyval.ulonglong_number) = (yyvsp[0].ulonglong_number); }
#line 30611 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 588:
#line 5916 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30619 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 589:
#line 5923 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30627 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 590:
#line 5930 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30635 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 591:
#line 5937 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30643 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 592:
#line 5944 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyloc), (yyvsp[0].ulong_num));
          }
#line 30651 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 593:
#line 5951 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 30659 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 594:
#line 5958 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30667 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 595:
#line 5965 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30675 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 596:
#line 5972 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed((yyloc), true);
          }
#line 30683 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 597:
#line 5976 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed((yyloc), false);
          }
#line 30691 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 598:
#line 5983 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 30699 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 599:
#line 5990 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_option) = make_tablespace_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30707 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 600:
#line 5996 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                             { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 30713 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 601:
#line 5998 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 30763 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 602:
#line 6074 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 30772 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 604:
#line 6083 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 30781 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 606:
#line 6092 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_tail).opt_create_table_options= nullptr;
            (yyval.create_table_tail).opt_partitioning= nullptr;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= nullptr;
          }
#line 30792 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 607:
#line 6100 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_tail).opt_create_table_options= nullptr;
            (yyval.create_table_tail).opt_partitioning= nullptr;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_expression_body);
          }
#line 30803 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 608:
#line 6107 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_tail).opt_create_table_options= nullptr;
            (yyval.create_table_tail).opt_partitioning= nullptr;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_expression_body);
          }
#line 30814 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 609:
#line 6116 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                       { (yyval.query_expression_body) = (yyvsp[0].query_expression_body); }
#line 30820 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 610:
#line 6117 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                       { (yyval.query_expression_body) = (yyvsp[0].query_expression_body); }
#line 30826 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 611:
#line 6133 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyloc), (yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 30834 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 612:
#line 6140 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 30842 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 613:
#line 6144 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyloc), (yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 30850 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 614:
#line 6148 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yyloc), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 30858 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 615:
#line 6152 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyloc), (yyvsp[-1].name_list));
          }
#line 30866 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 616:
#line 6156 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yyloc), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 30874 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 617:
#line 6160 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyloc), (yyvsp[-1].name_list));
          }
#line 30882 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 618:
#line 6166 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 30888 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 619:
#line 6167 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= true; }
#line 30894 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 620:
#line 6171 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 30900 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 621:
#line 6173 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 30918 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 622:
#line 6189 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ulong_num)= 0; }
#line 30924 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 623:
#line 6191 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30937 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 624:
#line 6202 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.opt_sub_part)= nullptr; }
#line 30943 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 625:
#line 6205 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyloc), (yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 30951 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 626:
#line 6210 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyloc), (yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 30959 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 627:
#line 6217 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.name_list)= nullptr; }
#line 30965 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 629:
#line 6224 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == nullptr || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 30975 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 630:
#line 6230 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 30985 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 631:
#line 6238 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ulong_num)= 0; }
#line 30991 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 632:
#line 6240 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 31004 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 633:
#line 6251 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.part_def_list)= nullptr; }
#line 31010 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 634:
#line 6252 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 31016 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 635:
#line 6257 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == nullptr || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 31026 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 636:
#line 6263 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 31036 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 637:
#line 6272 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yyloc), (yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 31045 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 638:
#line 6280 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 31053 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 639:
#line 6284 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 31062 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 640:
#line 6289 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 31071 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 641:
#line 6296 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.part_value_item_list_paren)= nullptr; }
#line 31077 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 643:
#line 6302 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yyloc), (yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 31085 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 644:
#line 6306 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yyloc), (yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 31093 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 645:
#line 6313 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == nullptr || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 31104 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 646:
#line 6320 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 31114 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 647:
#line 6329 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 31129 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 648:
#line 6340 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyloc), (yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 31137 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 649:
#line 6347 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == nullptr || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 31147 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 650:
#line 6353 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 31157 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 651:
#line 6361 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yyloc)); }
#line 31163 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 652:
#line 6362 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yyloc), (yyvsp[0].item)); }
#line 31169 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 653:
#line 6367 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.sub_part_list)= nullptr; }
#line 31175 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 654:
#line 6368 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 31181 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 655:
#line 6373 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == nullptr || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 31191 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 656:
#line 6379 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 31201 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 657:
#line 6388 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yyloc), (yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 31209 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 658:
#line 6394 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                { (yyval.partition_option_list)= nullptr; }
#line 31215 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 660:
#line 6400 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31225 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 661:
#line 6406 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == nullptr || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31235 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 662:
#line 6415 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyloc), (yyvsp[0].lexer.lex_str).str); }
#line 31241 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 663:
#line 6417 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_engine((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 31247 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 664:
#line 6419 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyloc), (yyvsp[0].ulong_num)); }
#line 31253 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 665:
#line 6421 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyloc), (yyvsp[0].ulonglong_number)); }
#line 31259 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 666:
#line 6423 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyloc), (yyvsp[0].ulonglong_number)); }
#line 31265 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 667:
#line 6425 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyloc), (yyvsp[0].lexer.lex_str).str); }
#line 31271 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 668:
#line 6427 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyloc), (yyvsp[0].lexer.lex_str).str); }
#line 31277 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 669:
#line 6429 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyloc), (yyvsp[0].lexer.lex_str).str); }
#line 31283 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 673:
#line 6444 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              If the statement has set READ ONLY already, and we repeat the
              READ ONLY option in the statement, the option must be set to
              the same value as before, otherwise, report an error.
            */
            if ((Lex->create_info->used_fields &
                 HA_CREATE_USED_READ_ONLY) &&
                (Lex->create_info->schema_read_only !=
                    ((yyvsp[0].ternary_option) == Ternary_option::ON))) {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0), "READ ONLY", "=0",
                  "READ ONLY", "=1");
              MYSQL_YYABORT;
            }
            Lex->create_info->schema_read_only = ((yyvsp[0].ternary_option) == Ternary_option::ON);
            Lex->create_info->used_fields |= HA_CREATE_USED_READ_ONLY;
          }
#line 31305 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 674:
#line 6464 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 31311 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 675:
#line 6465 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                  {}
#line 31317 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 676:
#line 6469 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 {}
#line 31323 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 677:
#line 6470 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                         {}
#line 31329 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 678:
#line 6475 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 31338 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 679:
#line 6480 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 31347 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 680:
#line 6485 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 31363 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 681:
#line 6499 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 31369 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 682:
#line 6500 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.is_not_empty)= true; }
#line 31375 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 683:
#line 6505 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == nullptr || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31385 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 684:
#line 6511 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31395 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 685:
#line 6520 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == nullptr || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31405 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 686:
#line 6526 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31415 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 689:
#line 6540 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 31423 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 690:
#line 6544 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option((yyloc));
          }
#line 31431 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 691:
#line 6548 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 31439 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 692:
#line 6552 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 31447 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 693:
#line 6556 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 31455 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 694:
#line 6560 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // The frm-format only allocated 4 bytes for avg_row_length, and
            // there is code which assumes it can be represented as an uint,
            // so we constrain it here.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint32_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for avg_row_length is [0,4294967295]. Error"
              );
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 31472 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 695:
#line 6573 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 31480 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 696:
#line 6577 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 31488 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 697:
#line 6581 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 31496 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 698:
#line 6585 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 31504 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 699:
#line 6589 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 31512 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 700:
#line 6593 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyloc), (yyvsp[0].ternary_option));
          }
#line 31520 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 701:
#line 6597 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyloc), (yyvsp[0].ternary_option));
          }
#line 31528 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 702:
#line 6601 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyloc), (yyvsp[0].ternary_option));
          }
#line 31536 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 703:
#line 6605 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for stats_sample_pages is [1, 65535]. Error");
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyloc), (yyvsp[0].ulong_num));
          }
#line 31558 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 704:
#line 6623 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyloc));
          }
#line 31566 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 705:
#line 6627 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyloc), (yyvsp[0].ulong_num));
          }
#line 31574 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 706:
#line 6631 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyloc), (yyvsp[0].ulong_num));
          }
#line 31582 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 707:
#line 6635 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyloc), (yyvsp[0].ulong_num));
          }
#line 31590 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 708:
#line 6639 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyloc), (yyvsp[0].row_type));
          }
#line 31598 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 709:
#line 6643 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyloc), (yyvsp[-1].table_list));
          }
#line 31606 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 710:
#line 6647 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyloc), (yyvsp[0].lexer.charset));
          }
#line 31614 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 711:
#line 6651 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyloc), (yyvsp[0].lexer.charset));
          }
#line 31622 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 712:
#line 6655 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyloc), (yyvsp[0].ulong_num));
          }
#line 31630 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 713:
#line 6659 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 31638 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 714:
#line 6663 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 31646 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 715:
#line 6667 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 31654 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 716:
#line 6671 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option((yyloc), HA_SM_DISK);
          }
#line 31662 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 717:
#line 6675 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option((yyloc), HA_SM_MEMORY);
          }
#line 31670 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 718:
#line 6679 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 31678 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 719:
#line 6683 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // The frm-format only allocated 2 bytes for key_block_size,
            // even if it is represented as std::uint32_t in HA_CREATE_INFO and
            // elsewhere.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint16_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for key_block_size is [0,65535]. Error");
              MYSQL_YYABORT;
            }

            (yyval.create_table_option)= NEW_PTN
            PT_create_key_block_size_option((yyloc), static_cast<std::uint32_t>((yyvsp[0].ulonglong_number)));
          }
#line 31696 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 720:
#line 6697 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_start_transaction_option((yyloc), true);
	  }
#line 31704 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 721:
#line 6701 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option) = make_table_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31712 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 722:
#line 6705 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option) = make_table_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31720 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 723:
#line 6709 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.create_table_option) = NEW_PTN PT_create_ts_autoextend_size_option((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 31728 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 724:
#line 6716 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 31746 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 725:
#line 6729 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 31752 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 726:
#line 6733 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                           { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 31758 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 727:
#line 6737 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                           { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 31764 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 728:
#line 6741 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                               { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 31770 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 729:
#line 6745 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 31776 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 730:
#line 6746 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 31782 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 731:
#line 6747 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 31788 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 732:
#line 6748 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 31794 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 733:
#line 6749 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 31800 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 734:
#line 6750 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 31806 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 735:
#line 6754 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 31812 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 736:
#line 6755 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 31818 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 737:
#line 6756 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 31824 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 738:
#line 6760 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     {(yyval.num) = (int) STRING_RESULT; }
#line 31830 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 739:
#line 6761 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                   {(yyval.num) = (int) REAL_RESULT; }
#line 31836 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 740:
#line 6762 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      {(yyval.num) = (int) DECIMAL_RESULT; }
#line 31842 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 741:
#line 6763 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                  {(yyval.num) = (int) INT_RESULT; }
#line 31848 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 742:
#line 6768 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == nullptr || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 31858 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 743:
#line 6774 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 31868 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 744:
#line 6782 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.table_element)= (yyvsp[0].column_def); }
#line 31874 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 745:
#line 6783 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 31880 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 746:
#line 6788 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.column_def)= NEW_PTN PT_column_def((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 31888 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 747:
#line 6794 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                  { (yyval.table_constraint_def)= nullptr; }
#line 31894 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 748:
#line 6796 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= nullptr;
          }
#line 31903 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 749:
#line 6805 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyloc), KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31912 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 750:
#line 6811 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyloc), KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), nullptr,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31921 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 751:
#line 6817 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyloc), KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), nullptr, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31929 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 752:
#line 6822 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != nullptr ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyloc), (yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31942 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 753:
#line 6831 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyloc), (yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 31954 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 754:
#line 6839 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 31963 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 755:
#line 6846 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.item)= (yyvsp[-1].item); }
#line 31969 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 756:
#line 6850 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lexer.lex_str)= NULL_STR; }
#line 31975 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 757:
#line 6851 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31981 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 758:
#line 6855 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.is_not_empty)= false; }
#line 31987 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 759:
#line 6856 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.is_not_empty)= true; }
#line 31993 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 760:
#line 6860 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= true; }
#line 31999 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 761:
#line 6861 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 32005 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 762:
#line 6865 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 32011 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 763:
#line 6870 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.field_def)= NEW_PTN PT_field_def((yyloc), (yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 32019 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 764:
#line 6876 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != nullptr)
            {
              if (opt_attrs == nullptr)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyloc), (yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 32040 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 767:
#line 6900 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 32046 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 768:
#line 6901 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 32052 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 769:
#line 6902 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 32058 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 770:
#line 6907 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_numeric_type((yyloc), YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 32066 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 771:
#line 6911 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_numeric_type((yyloc), YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 32074 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 772:
#line 6915 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_numeric_type((yyloc), YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 32082 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 773:
#line 6919 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_bit_type((yyloc));
          }
#line 32090 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 774:
#line 6923 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_bit_type((yyloc), (yyvsp[0].c_str));
          }
#line 32098 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 775:
#line 6927 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_boolean_type((yyloc));
          }
#line 32106 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 776:
#line 6931 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_boolean_type((yyloc));
          }
#line 32114 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 777:
#line 6935 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32123 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 778:
#line 6940 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32132 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 779:
#line 6945 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == nullptr)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 32145 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 780:
#line 6954 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == nullptr)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 32158 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 781:
#line 6963 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 32166 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 782:
#line 6967 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::CHAR, &my_charset_bin);
          }
#line 32174 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 783:
#line 6971 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32183 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 784:
#line 6976 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == nullptr)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 32196 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 785:
#line 6985 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 32204 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 786:
#line 6989 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), nullptr, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type((yyloc));
          }
#line 32231 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 787:
#line 7012 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_date_type((yyloc));
          }
#line 32239 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 788:
#line 7016 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_time_type((yyloc), Time_type::TIME, (yyvsp[0].c_str));
          }
#line 32247 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 789:
#line 7020 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyloc), (yyvsp[0].c_str));
          }
#line 32255 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 790:
#line 7024 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_time_type((yyloc), Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 32263 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 791:
#line 7028 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::TINY, &my_charset_bin);
          }
#line 32271 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 792:
#line 7032 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), (yyvsp[0].c_str));
          }
#line 32279 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 794:
#line 7037 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::MEDIUM, &my_charset_bin);
          }
#line 32287 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 795:
#line 7041 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::LONG, &my_charset_bin);
          }
#line 32295 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 796:
#line 7045 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::MEDIUM, &my_charset_bin);
          }
#line 32303 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 797:
#line 7049 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32312 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 798:
#line 7054 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32321 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 799:
#line 7059 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32330 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 800:
#line 7064 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32339 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 801:
#line 7069 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32348 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 802:
#line 7074 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_enum_type((yyloc), (yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32356 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 803:
#line 7078 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_set_type((yyloc), (yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32364 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 804:
#line 7082 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32373 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 805:
#line 7087 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_serial_type((yyloc));
          }
#line 32381 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 806:
#line 7091 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_json_type((yyloc));
          }
#line 32389 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 807:
#line 7098 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_GEOMETRY); }
#line 32395 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 808:
#line 7100 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_GEOMETRYCOLLECTION); }
#line 32401 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 809:
#line 7102 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_POINT); }
#line 32407 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 810:
#line 7104 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_MULTIPOINT); }
#line 32413 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 811:
#line 7106 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_LINESTRING); }
#line 32419 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 812:
#line 7108 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_MULTILINESTRING); }
#line 32425 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 813:
#line 7110 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_POLYGON); }
#line 32431 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 814:
#line 7112 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_MULTIPOLYGON); }
#line 32437 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 815:
#line 7116 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    {}
#line 32443 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 816:
#line 7117 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                {}
#line 32449 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 817:
#line 7121 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                           {}
#line 32455 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 818:
#line 7122 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      {}
#line 32461 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 819:
#line 7126 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                   {}
#line 32467 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 820:
#line 7127 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       {}
#line 32473 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 821:
#line 7128 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                {}
#line 32479 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 822:
#line 7129 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        {}
#line 32485 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 823:
#line 7130 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                            {}
#line 32491 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 824:
#line 7134 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.int_type)=Int_type::INT; }
#line 32497 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 825:
#line 7135 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.int_type)=Int_type::TINYINT; }
#line 32503 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 826:
#line 7136 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.int_type)=Int_type::SMALLINT; }
#line 32509 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 827:
#line 7137 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 32515 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 828:
#line 7138 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.int_type)=Int_type::BIGINT; }
#line 32521 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 829:
#line 7143 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 32530 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 830:
#line 7148 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 32536 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 833:
#line 7157 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 32542 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 834:
#line 7158 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 32548 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 835:
#line 7159 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 32554 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 836:
#line 7160 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 32560 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 837:
#line 7165 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 32569 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 838:
#line 7170 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 32578 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 839:
#line 7178 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.precision).length= nullptr;
            (yyval.precision).dec= nullptr;
          }
#line 32587 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 840:
#line 7183 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= nullptr;
          }
#line 32596 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 842:
#line 7192 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 32605 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 843:
#line 7200 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.c_str)= nullptr; }
#line 32611 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 844:
#line 7201 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                     { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32617 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 845:
#line 7205 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ulong_num)= 0; }
#line 32623 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 846:
#line 7206 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                     { (yyval.ulong_num)= 0; }
#line 32629 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 847:
#line 7208 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
           {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
           }
#line 32638 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 848:
#line 7215 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.field_option) = 0; }
#line 32644 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 850:
#line 7221 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 32652 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 852:
#line 7228 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.field_option) = 0; }
#line 32658 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 853:
#line 7229 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.field_option) = UNSIGNED_FLAG; }
#line 32664 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 854:
#line 7230 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 32675 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 855:
#line 7239 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32681 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 856:
#line 7240 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32687 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 857:
#line 7241 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32693 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 858:
#line 7242 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32699 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 859:
#line 7245 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                          { (yyval.c_str)= nullptr; /* use default length */ }
#line 32705 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 861:
#line 7251 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.precision).length= nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 32714 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 863:
#line 7259 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.col_attr_list)= nullptr; }
#line 32720 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 865:
#line 7265 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 32743 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 866:
#line 7284 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == nullptr || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 32763 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 867:
#line 7303 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr((yyloc));
          }
#line 32771 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 868:
#line 7307 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr((yyloc));
          }
#line 32779 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 869:
#line 7311 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr((yyloc));
          }
#line 32787 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 870:
#line 7315 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyloc), (yyvsp[0].item));
          }
#line 32795 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 871:
#line 7319 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyloc), (yyvsp[-1].item));
          }
#line 32803 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 872:
#line 7323 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32811 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 873:
#line 7327 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr((yyloc));
          }
#line 32819 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 874:
#line 7331 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr((yyloc));
          }
#line 32827 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 875:
#line 7335 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr((yyloc));
          }
#line 32835 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 876:
#line 7339 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr((yyloc));
          }
#line 32843 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 877:
#line 7343 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr((yyloc));
          }
#line 32851 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 878:
#line 7347 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32859 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 879:
#line 7351 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yyloc), (yyvsp[0].lexer.charset));
          }
#line 32867 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 880:
#line 7355 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyloc), (yyvsp[0].column_format));
          }
#line 32875 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 881:
#line 7359 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyloc), (yyvsp[0].storage_media));
          }
#line 32883 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 882:
#line 7363 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr((yyloc), static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 32896 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 883:
#line 7373 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyloc), (yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 32904 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 884:
#line 7386 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyloc), (yyvsp[0].is_not_empty));
          }
#line 32912 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 885:
#line 7390 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr) = make_column_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32920 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 886:
#line 7394 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr) = make_column_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32928 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 887:
#line 7398 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.col_attr) = NEW_PTN PT_column_visibility_attr((yyloc), (yyvsp[0].visibility));
          }
#line 32936 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 888:
#line 7404 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 32942 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 889:
#line 7405 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 32948 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 890:
#line 7406 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 32954 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 891:
#line 7410 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 32960 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 892:
#line 7411 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.storage_media)= HA_SM_DISK; }
#line 32966 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 893:
#line 7412 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.storage_media)= HA_SM_MEMORY; }
#line 32972 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 894:
#line 7417 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 32980 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 895:
#line 7423 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32988 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 899:
#line 7436 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 33001 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 900:
#line 7444 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     { (yyval.lexer.charset)= &my_charset_bin; }
#line 33007 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 901:
#line 7448 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lexer.charset)= nullptr; }
#line 33013 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 902:
#line 7449 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                     { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 33019 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 903:
#line 7454 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 33032 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 904:
#line 7462 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     { (yyval.lexer.charset)= &my_charset_bin; }
#line 33038 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 905:
#line 7466 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                  { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 33044 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 906:
#line 7467 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.lexer.charset)=nullptr; }
#line 33050 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 907:
#line 7472 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 33060 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 908:
#line 7477 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     { (yyval.lexer.charset)= &my_charset_bin; }
#line 33066 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 909:
#line 7481 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lexer.charset) = nullptr; }
#line 33072 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 910:
#line 7482 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                     { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 33078 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 911:
#line 7486 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 33084 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 912:
#line 7487 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      {}
#line 33090 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 913:
#line 7492 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                           {
          push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
          (yyval.lexer.charset)= &my_charset_latin1;
        }
#line 33099 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 914:
#line 7496 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               {
            warn_about_deprecated_binary(YYTHD);
            push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 33109 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 915:
#line 7501 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               {
            push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 33119 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 916:
#line 7510 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 33132 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 917:
#line 7519 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 33143 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 918:
#line 7526 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            warn_about_deprecated_binary(YYTHD);
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 33154 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 919:
#line 7536 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.charset_with_opt_binary).charset= nullptr;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 33163 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 920:
#line 7541 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 33172 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 921:
#line 7546 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 33181 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 922:
#line 7551 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 33190 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 923:
#line 7556 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == nullptr)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 33201 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 924:
#line 7563 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= nullptr;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 33211 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 925:
#line 7569 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == nullptr)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 33223 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 926:
#line 7579 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 33229 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 927:
#line 7580 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 33238 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 928:
#line 7588 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
        {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 33250 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 929:
#line 7596 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
        { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 33256 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 932:
#line 7610 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 33268 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 933:
#line 7620 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.reference_list)= nullptr; }
#line 33274 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 934:
#line 7621 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 33280 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 935:
#line 7626 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == nullptr || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 33291 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 936:
#line 7633 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == nullptr || key == nullptr || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 33302 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 937:
#line 7642 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 33308 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 938:
#line 7643 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                           { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 33314 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 939:
#line 7644 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                           { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 33320 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 940:
#line 7645 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                           { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 33326 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 941:
#line 7650 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33335 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 942:
#line 7655 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33344 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 943:
#line 7660 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33353 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 944:
#line 7666 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33362 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 945:
#line 7672 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 33371 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 946:
#line 7679 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 33377 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 947:
#line 7680 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 33383 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 948:
#line 7681 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                            { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 33389 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 949:
#line 7682 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 33395 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 950:
#line 7683 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 33401 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 951:
#line 7687 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 33407 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 952:
#line 7688 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                      { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 33413 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 953:
#line 7692 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                  {}
#line 33419 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 954:
#line 7693 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    {}
#line 33425 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 955:
#line 7697 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 33431 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 957:
#line 7702 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
               {}
#line 33437 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 958:
#line 7703 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    {}
#line 33443 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 959:
#line 7704 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                  {}
#line 33449 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 960:
#line 7708 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 33455 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 961:
#line 7709 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 33461 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 962:
#line 7713 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.index_options).init(YYMEM_ROOT); }
#line 33467 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 964:
#line 7719 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 33477 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 965:
#line 7725 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 33487 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 967:
#line 7735 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 33502 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 968:
#line 7748 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.index_options).init(YYMEM_ROOT); }
#line 33508 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 970:
#line 7754 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 33518 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 971:
#line 7760 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 33528 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 973:
#line 7772 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.index_options).init(YYMEM_ROOT); }
#line 33534 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 975:
#line 7778 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 33544 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 976:
#line 7784 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 33554 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 977:
#line 7792 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.index_option)= (yyvsp[0].index_option); }
#line 33560 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 978:
#line 7793 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                            { (yyval.index_option)= (yyvsp[0].index_option); }
#line 33566 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 979:
#line 7798 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                             { (yyval.index_option)= NEW_PTN PT_block_size((yyloc), (yyvsp[0].ulong_num)); }
#line 33572 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 980:
#line 7800 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.index_option)= NEW_PTN PT_index_comment((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 33580 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 981:
#line 7804 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyloc), (yyvsp[0].visibility));
          }
#line 33588 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 982:
#line 7808 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.index_option) = make_index_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 33596 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 983:
#line 7812 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.index_option) = make_index_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 33604 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 984:
#line 7835 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                     { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), nullptr}; }
#line 33610 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 985:
#line 7836 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                     { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyloc), (yyvsp[0].key_alg))}; }
#line 33616 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 986:
#line 7837 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                     { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyloc), (yyvsp[0].key_alg))}; }
#line 33622 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 987:
#line 7841 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.index_option) = nullptr; }
#line 33628 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 989:
#line 7846 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.index_option)= NEW_PTN PT_index_type((yyloc), (yyvsp[0].key_alg)); }
#line 33634 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 990:
#line 7847 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.index_option)= NEW_PTN PT_index_type((yyloc), (yyvsp[0].key_alg)); }
#line 33640 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 991:
#line 7851 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.visibility)= true; }
#line 33646 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 992:
#line 7852 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.visibility)= false; }
#line 33652 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 993:
#line 7856 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 33658 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 994:
#line 7857 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 33664 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 995:
#line 7858 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 33670 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 996:
#line 7863 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 33680 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 997:
#line 7869 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == nullptr || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 33691 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 998:
#line 7879 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyloc), to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == nullptr)
              MYSQL_YYABORT;
          }
#line 33701 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 999:
#line 7885 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyloc), to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == nullptr)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 33717 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1000:
#line 7900 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 33727 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1001:
#line 7906 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == nullptr || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 33738 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1003:
#line 7917 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyloc), (yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == nullptr)
              MYSQL_YYABORT;
          }
#line 33748 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1004:
#line 7925 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lexer.lex_str)= NULL_STR; }
#line 33754 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1006:
#line 7931 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == nullptr || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 33764 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1007:
#line 7937 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 33773 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1008:
#line 7949 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  (yyloc),
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 33788 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1009:
#line 7960 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  (yyloc),
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 33803 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1010:
#line 7974 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= nullptr;
            Lex->create_info->used_fields= 0;
          }
#line 33815 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1011:
#line 7982 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == nullptr &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 33828 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1012:
#line 7994 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 33843 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1013:
#line 8005 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
            MAKE_CMD_DDL_DUMMY();
          }
#line 33855 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1014:
#line 8016 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 33870 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1015:
#line 8027 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
            MAKE_CMD_DDL_DUMMY();
          }
#line 33882 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1016:
#line 8038 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 33897 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1017:
#line 8049 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            MAKE_CMD_DDL_DUMMY();
          }
#line 33905 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1018:
#line 8058 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 33921 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1019:
#line 8070 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            MAKE_CMD_DDL_DUMMY();
          }
#line 33929 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1020:
#line 8077 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            MAKE_CMD_DDL_DUMMY();
          }
#line 33950 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1021:
#line 8098 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;

            /*
              assert that even if sql_command was overwritten,
              m_sql_cmd was not changed to a different command-type.
            */
            assert(Lex->m_sql_cmd->sql_cmd_type() == SQL_CMD_DDL);
            assert(Lex->m_sql_cmd->sql_command_code() == SQLCOM_ALTER_EVENT);
          }
#line 33974 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1022:
#line 8122 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33997 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1023:
#line 8144 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 34019 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1024:
#line 8163 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 34042 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1025:
#line 8182 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 34054 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1026:
#line 8190 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 34077 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1027:
#line 8213 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 34101 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1028:
#line 8236 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 34113 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1030:
#line 8251 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 34128 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1031:
#line 8263 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 34143 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1032:
#line 8274 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[-3].lex_user)->discard_old_password = true;
            (yyvsp[-3].lex_user)->retain_current_password = false;
          }
#line 34152 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1033:
#line 8279 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == nullptr || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role((yyloc), Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 34168 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1034:
#line 8291 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == nullptr || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role((yyloc), Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 34184 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1035:
#line 8303 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == nullptr || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role((yyloc), Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 34199 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1036:
#line 8314 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            LEX *lex=Lex;
            lex->users_list.push_front ((yyvsp[-1].lex_user));
          }
#line 34210 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1037:
#line 8321 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
          }
#line 34219 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1038:
#line 8328 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 34225 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1039:
#line 8329 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                            { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 34231 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1040:
#line 8336 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group((yyloc), to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 34240 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1041:
#line 8344 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
            MAKE_CMD_DCL_DUMMY();
          }
#line 34251 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1042:
#line 8354 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT_NOT_USED;
          }
#line 34261 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1043:
#line 8360 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_ATTRIBUTE;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 34272 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1044:
#line 8367 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 34283 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1045:
#line 8375 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 34289 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1049:
#line 8386 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 34299 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1050:
#line 8392 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 34309 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1051:
#line 8398 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 34321 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1052:
#line 8406 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 34340 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1053:
#line 8421 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 34352 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1054:
#line 8429 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 34364 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1055:
#line 8437 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 34375 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1056:
#line 8444 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 34386 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1057:
#line 8451 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 34397 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1058:
#line 8458 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 34408 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1059:
#line 8465 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 34418 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1060:
#line 8471 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 34428 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1061:
#line 8477 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 34438 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1062:
#line 8483 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 34454 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1063:
#line 8495 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 34470 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1064:
#line 8507 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 34480 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1065:
#line 8515 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 34486 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1067:
#line 8520 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                             {}
#line 34492 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1068:
#line 8521 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         {}
#line 34498 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1069:
#line 8526 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 34508 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1070:
#line 8532 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 34518 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1071:
#line 8538 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 34528 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1072:
#line 8544 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 34538 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1073:
#line 8553 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;

            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 34552 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1074:
#line 8565 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.num)= 0;}
#line 34558 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1075:
#line 8566 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                               { (yyval.num)= 1; }
#line 34564 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1076:
#line 8567 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                           { (yyval.num)= 1; }
#line 34570 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1077:
#line 8568 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                                { (yyval.num)= 1; }
#line 34576 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1078:
#line 8572 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.num)= 0;}
#line 34582 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1079:
#line 8574 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 34595 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1080:
#line 8585 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.num)= 0;}
#line 34601 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1081:
#line 8586 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 34607 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1082:
#line 8590 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lexer.lex_str).str= nullptr; (yyval.lexer.lex_str).length= 0; }
#line 34613 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1083:
#line 8591 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 34619 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1085:
#line 8597 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == nullptr)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == nullptr)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 34635 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1086:
#line 8612 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 34644 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1087:
#line 8617 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 34653 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1088:
#line 8625 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyloc), (yyvsp[0].partition_clause));
          }
#line 34661 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1089:
#line 8629 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning((yyloc));
          }
#line 34669 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1090:
#line 8636 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= nullptr;
          }
#line 34678 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1091:
#line 8641 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= nullptr;
          }
#line 34687 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1093:
#line 8647 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 34697 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1094:
#line 8656 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace((yyloc));
          }
#line 34705 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1095:
#line 8660 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace((yyloc));
          }
#line 34713 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1096:
#line 8671 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyloc), (yyvsp[0].num));
          }
#line 34721 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1097:
#line 8675 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyloc), (yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 34729 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1098:
#line 8679 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyloc), (yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 34737 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1099:
#line 8683 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition((yyloc), *(yyvsp[0].string_list));
          }
#line 34745 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1100:
#line 8688 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyloc), (yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 34753 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1101:
#line 8693 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyloc), (yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 34761 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1102:
#line 8698 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyloc), (yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 34769 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1103:
#line 8702 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyloc), (yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34778 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1104:
#line 8709 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyloc), (yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34787 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1105:
#line 8714 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyloc), (yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 34795 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1106:
#line 8718 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyloc), (yyvsp[0].string_list));
          }
#line 34803 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1107:
#line 8722 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyloc), (yyvsp[0].num));
          }
#line 34811 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1108:
#line 8727 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyloc), (yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 34819 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1109:
#line 8732 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyloc), (yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 34827 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1110:
#line 8737 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyloc), (yyvsp[-1].string_list));
          }
#line 34835 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1111:
#line 8742 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyloc), (yyvsp[-1].string_list));
          }
#line 34843 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1112:
#line 8746 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load((yyloc), (yyvsp[0].string_list));
          }
#line 34851 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1113:
#line 8750 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload((yyloc), (yyvsp[0].string_list));
          }
#line 34859 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1114:
#line 8756 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 34865 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1116:
#line 8762 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 34873 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1117:
#line 8766 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 34881 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1118:
#line 8772 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.string_list)= nullptr; }
#line 34887 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1120:
#line 8782 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == nullptr || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 34898 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1121:
#line 8789 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 34907 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1122:
#line 8794 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 34915 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1123:
#line 8798 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 34924 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1124:
#line 8803 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 34936 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1126:
#line 8815 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 34945 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1127:
#line 8823 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 34953 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1128:
#line 8827 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyloc), (yyvsp[-1].table_element_list));
          }
#line 34961 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1129:
#line 8831 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyloc), (yyvsp[0].table_constraint_def));
          }
#line 34969 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1130:
#line 8835 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 34977 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1131:
#line 8839 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 34985 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1132:
#line 8843 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyloc), (yyvsp[-1].lexer.lex_str).str);
          }
#line 34994 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1133:
#line 8848 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 35002 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1134:
#line 8852 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyloc), primary_key_name);
          }
#line 35010 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1135:
#line 8856 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 35018 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1136:
#line 8860 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 35026 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1137:
#line 8864 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 35034 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1138:
#line 8868 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys((yyloc), false);
          }
#line 35042 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1139:
#line 8872 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys((yyloc), true);
          }
#line 35050 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1140:
#line 8876 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyloc), (yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 35058 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1141:
#line 8880 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyloc), (yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 35066 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1142:
#line 8884 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyloc), (yyvsp[-2].lexer.lex_str).str, nullptr);
          }
#line 35074 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1143:
#line 8889 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_column_visibility((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 35082 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1144:
#line 8893 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyloc), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 35090 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1145:
#line 8897 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyloc), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 35098 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1146:
#line 8901 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyloc), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 35106 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1147:
#line 8905 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyloc), (yyvsp[0].table));
          }
#line 35114 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1148:
#line 8909 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 35122 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1149:
#line 8913 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 35130 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1150:
#line 8917 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 35138 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1151:
#line 8921 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                (yyloc),
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 35149 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1152:
#line 8928 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force((yyloc));
          }
#line 35157 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1153:
#line 8932 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyloc), (yyvsp[0].order_list));
          }
#line 35165 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1154:
#line 8939 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 35174 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1155:
#line 8944 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 35183 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1156:
#line 8949 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 35192 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1157:
#line 8956 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.opt_index_lock_and_algorithm).init(); }
#line 35198 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1158:
#line 8958 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 35207 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1159:
#line 8963 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 35216 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1160:
#line 8968 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 35226 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1161:
#line 8974 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 35236 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1162:
#line 8982 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                               { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 35242 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1163:
#line 8987 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 35250 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1164:
#line 8991 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 35268 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1165:
#line 9007 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                     { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 35274 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1166:
#line 9012 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 35282 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1167:
#line 9016 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 35300 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1170:
#line 9037 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= false; }
#line 35306 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1171:
#line 9038 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= true; }
#line 35312 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1172:
#line 9042 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 35318 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1173:
#line 9043 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 35324 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1174:
#line 9044 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.opt_restrict)= DROP_CASCADE; }
#line 35330 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1175:
#line 9048 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.c_str)= nullptr; }
#line 35336 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1176:
#line 9049 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 35342 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1177:
#line 9050 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.c_str)= first_keyword; }
#line 35348 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1178:
#line 9054 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 35354 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1179:
#line 9055 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 35360 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1180:
#line 9056 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
             {}
#line 35366 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1181:
#line 9057 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
             {}
#line 35372 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1183:
#line 9063 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
          }
#line 35381 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1184:
#line 9071 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex = Lex;
            lex->replica_connection.reset();
            lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
          }
#line 35391 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1192:
#line 9096 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->replica_connection.user = (yyvsp[0].lexer.lex_str).str;
            if ((yyvsp[0].lexer.lex_str).length == 0)
            {
              my_error(ER_GROUP_REPLICATION_USER_EMPTY_MSG, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 35404 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1193:
#line 9108 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->replica_connection.password = (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password = true;
            if ((yyvsp[0].lexer.lex_str).length > 32)
            {
              my_error(ER_GROUP_REPLICATION_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 35418 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1194:
#line 9121 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->replica_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 35426 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1195:
#line 9127 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLICA_STOP;
            lex->type = 0;
            lex->replica_thd_opt= (yyvsp[-1].num);
            if (lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 35439 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1196:
#line 9139 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            /* Clean previous replica connection values */
            lex->replica_connection.reset();
            lex->sql_command = SQLCOM_REPLICA_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->replica_thd_opt= (yyvsp[0].num);
          }
#line 35454 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1197:
#line 9152 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->replica_thd_opt & REPLICA_SQL) == REPLICA_SQL &&
                (Lex->replica_thd_opt & REPLICA_IO) != REPLICA_IO &&
                (Lex->replica_connection.user ||
                 Lex->replica_connection.password ||
                 Lex->replica_connection.plugin_auth ||
                 Lex->replica_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_REPLICA, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 35475 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1198:
#line 9169 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 35484 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1199:
#line 9177 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 35501 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1200:
#line 9193 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= 0;
          }
#line 35509 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1201:
#line 9197 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35517 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1202:
#line 9204 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35525 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1203:
#line 9208 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 35533 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1204:
#line 9215 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 35541 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1205:
#line 9219 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 35549 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1206:
#line 9223 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 35557 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1207:
#line 9229 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 35563 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1208:
#line 9231 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->replica_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 35571 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1209:
#line 9237 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 35577 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1210:
#line 9239 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->replica_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 35586 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1211:
#line 9245 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 35592 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1212:
#line 9247 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->replica_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 35600 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1213:
#line 9253 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 35606 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1214:
#line 9255 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->replica_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 35614 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1215:
#line 9262 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= 0;
          }
#line 35622 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1216:
#line 9266 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35630 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1217:
#line 9273 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35638 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1218:
#line 9277 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 35646 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1219:
#line 9284 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= REPLICA_SQL;
          }
#line 35654 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1220:
#line 9288 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= REPLICA_IO;
          }
#line 35662 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1221:
#line 9295 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->mi.replica_until= false;
          }
#line 35671 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1222:
#line 9300 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_REPLICA_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.replica_until= true;
          }
#line 35697 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1225:
#line 9327 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_SOURCE_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 35706 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1226:
#line 9332 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_SOURCE_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 35715 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1227:
#line 9337 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->mi.until_after_gaps= true;
          }
#line 35723 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1228:
#line 9344 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 35738 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1229:
#line 9357 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= 0; }
#line 35744 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1230:
#line 9358 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= T_QUICK; }
#line 35750 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1231:
#line 9359 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= T_EXTEND; }
#line 35756 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1232:
#line 9365 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 35765 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1233:
#line 9372 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 35771 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1236:
#line 9379 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 35780 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1237:
#line 9386 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 35786 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1238:
#line 9387 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 35792 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1239:
#line 9388 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 35798 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1240:
#line 9394 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].histogram).param) {
              (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                                (yyvsp[0].histogram).command, (yyvsp[0].histogram).param->num_buckets,
                                                (yyvsp[0].histogram).columns, (yyvsp[0].histogram).param->data, (yyvsp[0].histogram).param->auto_update);
            } else {
              (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                                (yyvsp[0].histogram).command, 0,
                                                (yyvsp[0].histogram).columns, {nullptr, 0}, false);
            }
          }
#line 35814 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1241:
#line 9409 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.is_not_empty)= false; }
#line 35820 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1242:
#line 9410 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.is_not_empty)= false; }
#line 35826 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1243:
#line 9411 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.is_not_empty)= true; }
#line 35832 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1244:
#line 9416 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS;
          }
#line 35840 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1245:
#line 9420 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }
            (yyval.num)= num;
          }
#line 35858 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1246:
#line 9437 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.histogram_param).num_buckets= (yyvsp[-1].num);
            (yyval.histogram_param).auto_update= (yyvsp[0].is_not_empty);
            (yyval.histogram_param).data= { nullptr, 0 };
          }
#line 35868 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1247:
#line 9443 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.histogram_param).num_buckets= 0;
            (yyval.histogram_param).auto_update= false;
            (yyval.histogram_param).data= (yyvsp[0].lexer.lex_str);
          }
#line 35878 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1248:
#line 9452 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).param= nullptr;
          }
#line 35888 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1249:
#line 9458 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).param= NEW_PTN YYSTYPE::Histogram_param((yyvsp[0].histogram_param));
            if ((yyval.histogram).param == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 35901 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1250:
#line 9467 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).param = nullptr;
          }
#line 35912 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1251:
#line 9477 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 35921 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1252:
#line 9485 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 35930 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1253:
#line 9492 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 35936 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1256:
#line 9499 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 35945 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1257:
#line 9507 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 35951 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1258:
#line 9509 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 35957 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1259:
#line 9511 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 35963 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1260:
#line 9513 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 35969 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1261:
#line 9515 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 35975 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1262:
#line 9517 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 35981 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1263:
#line 9522 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 35989 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1264:
#line 9528 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 35995 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1265:
#line 9529 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 36001 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1266:
#line 9530 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.num)= 1; }
#line 36007 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1267:
#line 9535 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 36015 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1268:
#line 9539 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 36021 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1269:
#line 9541 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 36029 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1270:
#line 9548 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 36038 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1271:
#line 9553 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 36047 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1274:
#line 9566 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Query_block *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),nullptr,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),nullptr,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 36061 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1275:
#line 9579 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt((yyloc), YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 36069 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1276:
#line 9584 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt((yyloc), YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 36078 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1277:
#line 9592 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == nullptr || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 36088 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1278:
#line 9598 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 36098 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1279:
#line 9607 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyloc), (yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 36106 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1280:
#line 9613 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                   { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 36112 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1281:
#line 9614 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.lex_cstr) = default_key_cache_base; }
#line 36118 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1282:
#line 9620 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt((yyloc), YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 36126 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1283:
#line 9624 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt((yyloc), YYMEM_ROOT, (yyvsp[0].preload_list));
          }
#line 36134 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1284:
#line 9631 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 36144 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1285:
#line 9637 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == nullptr || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 36154 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1286:
#line 9646 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyloc), (yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 36162 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1287:
#line 9653 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyloc), (yyvsp[-1].string_list));
          }
#line 36170 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1288:
#line 9659 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.key_usage_list)= nullptr; }
#line 36176 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1289:
#line 9661 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 36185 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1290:
#line 9668 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 36191 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1291:
#line 9669 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                            { (yyval.is_not_empty)= true; }
#line 36197 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1292:
#line 9674 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyloc), (yyvsp[0].query_expression));
          }
#line 36205 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1293:
#line 9678 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyloc), NEW_PTN PT_locking((yyloc), (yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 36214 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1295:
#line 9719 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
            if ((yyval.top_level_node) != nullptr) (yyval.top_level_node)->m_pos = (yyloc);
          }
#line 36223 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1296:
#line 9724 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyloc), (yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 36231 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1297:
#line 9728 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyloc), NEW_PTN PT_locking((yyloc), (yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 36239 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1298:
#line 9732 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyloc), NEW_PTN PT_locking((yyloc), (yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 36247 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1299:
#line 9773 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyloc), (yyvsp[-2].query_expression_body_opt_parens).body, (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 36255 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1300:
#line 9780 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyloc), (yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body_opt_parens).body, (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 36263 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1301:
#line 9787 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.query_expression_body_opt_parens) = {(yyvsp[0].query_primary), false};
          }
#line 36271 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1302:
#line 9791 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.query_expression_body_opt_parens) = {(yyvsp[0].query_expression_body), true};
          }
#line 36279 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1303:
#line 9795 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.query_expression_body_opt_parens) = {NEW_PTN PT_union((yyloc), (yyvsp[-3].query_expression_body_opt_parens).body, (yyvsp[-1].num), (yyvsp[0].query_expression_body_opt_parens).body, (yyvsp[0].query_expression_body_opt_parens).is_parenthesized),
                  false};
          }
#line 36288 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1304:
#line 9800 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.query_expression_body_opt_parens) = {NEW_PTN PT_except((yyloc), (yyvsp[-3].query_expression_body_opt_parens).body, (yyvsp[-1].num), (yyvsp[0].query_expression_body_opt_parens).body, (yyvsp[0].query_expression_body_opt_parens).is_parenthesized),
                  false};
          }
#line 36297 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1305:
#line 9805 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.query_expression_body_opt_parens) = {NEW_PTN PT_intersect((yyloc), (yyvsp[-3].query_expression_body_opt_parens).body, (yyvsp[-1].num), (yyvsp[0].query_expression_body_opt_parens).body, (yyvsp[0].query_expression_body_opt_parens).is_parenthesized),
                  false};
          }
#line 36306 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1306:
#line 9813 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.query_expression_body) = (yyvsp[-1].query_expression_body);
            if ((yyval.query_expression_body) != nullptr) (yyval.query_expression_body)->m_pos = (yyloc);
          }
#line 36314 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1307:
#line 9817 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.query_expression_body) = (yyvsp[-1].query_expression_body);
            if ((yyval.query_expression_body) != nullptr) (yyval.query_expression_body)->m_pos = (yyloc);
          }
#line 36322 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1308:
#line 9824 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 36331 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1309:
#line 9829 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyloc), (yyvsp[0].values_list));
          }
#line 36339 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1310:
#line 9833 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // Pass empty position because asterisk is not user-supplied.
            auto item_list= NEW_PTN PT_select_item_list(POS());
            auto asterisk= NEW_PTN Item_asterisk(POS(), nullptr, nullptr);
            if (item_list == nullptr || asterisk == nullptr ||
                item_list->push_back(asterisk))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table((yyloc), {}, item_list, (yyvsp[0].table_reference_list));
          }
#line 36353 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1311:
#line 9855 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyloc),
                                      (yyvsp[-9].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-8].select_options),  // select_options
                                      (yyvsp[-7].item_list2),  // select_item_list
                                      (yyvsp[-6].into_destination),  // into_clause
                                      (yyvsp[-5].table_reference_list),  // from
                                      (yyvsp[-4].item),  // where
                                      (yyvsp[-3].group),  // group
                                      (yyvsp[-2].item),  // having
                                      (yyvsp[-1].windows),  // windows
                                      (yyvsp[0].item), // qualify
                                      (yylsp[-5]).raw.is_empty()); // implicit FROM
          }
#line 36373 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1312:
#line 9879 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyloc),
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      nullptr,// no INTO clause
                                      (yyvsp[-5].table_reference_list),  // from
                                      (yyvsp[-4].item),  // where
                                      (yyvsp[-3].group),  // group
                                      (yyvsp[-2].item),  // having
                                      (yyvsp[-1].windows),  // windows
                                      (yyvsp[0].item),  // qualify
                                      (yylsp[-5]).raw.is_empty()); // implicit FROM
          }
#line 36393 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1313:
#line 9897 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                         { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 36399 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1315:
#line 9902 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                           { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 36405 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1316:
#line 9906 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                   { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 36411 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1318:
#line 9912 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 36421 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1319:
#line 9918 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 36431 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1320:
#line 9927 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 36439 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1321:
#line 9934 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyloc), (yyvsp[0].table), nullptr, NULL_CSTR, nullptr, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 36451 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1322:
#line 9945 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.select_options).query_spec_options= 0;
          }
#line 36459 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1324:
#line 9953 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 36468 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1326:
#line 9962 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 36476 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1327:
#line 9966 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 36486 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1328:
#line 9975 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 36496 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1329:
#line 9981 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list((yyloc), YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 36506 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1330:
#line 9990 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyloc), (yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 36514 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1331:
#line 9994 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyloc), (yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 36522 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1332:
#line 9998 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyloc), Lock_strength::SHARE);
          }
#line 36530 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1333:
#line 10004 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 36536 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1334:
#line 10005 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 36542 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1335:
#line 10009 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                      { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 36548 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1336:
#line 10013 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 36554 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1338:
#line 10018 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 36560 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1339:
#line 10019 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 36566 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1340:
#line 10024 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].item_list2) == nullptr || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 36577 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1341:
#line 10031 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_select_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36587 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1342:
#line 10037 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Item *item = NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            (yyval.item_list2) = NEW_PTN PT_select_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || item == nullptr || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 36598 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1343:
#line 10046 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     { (yyval.item)= (yyvsp[0].item); }
#line 36604 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1344:
#line 10048 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 36612 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1345:
#line 10055 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lexer.lex_str)=null_lex_str;}
#line 36618 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1346:
#line 10056 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                   { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 36624 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1347:
#line 10057 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                   { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 36630 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1348:
#line 10058 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 36636 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1349:
#line 10059 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 36642 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1350:
#line 10063 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 36648 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1351:
#line 10064 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                  {}
#line 36654 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1352:
#line 10070 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) != nullptr) (yyval.item)->m_pos = (yyloc);
          }
#line 36665 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1353:
#line 10077 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36674 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1354:
#line 10082 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) != nullptr) (yyval.item)->m_pos = (yyloc);
          }
#line 36685 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1355:
#line 10089 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 36693 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1356:
#line 10093 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 36701 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1357:
#line 10097 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 36709 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1358:
#line 10101 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 36717 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1359:
#line 10105 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 36725 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1360:
#line 10109 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 36733 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1361:
#line 10113 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 36741 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1363:
#line 10121 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 36749 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1364:
#line 10125 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 36757 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1365:
#line 10129 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 36765 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1366:
#line 10133 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 36782 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1368:
#line 10150 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 36790 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1369:
#line 10154 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 36799 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1370:
#line 10159 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), false, (yyvsp[-1].item));
          }
#line 36807 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1371:
#line 10163 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].item_list2) == nullptr || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 36818 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1372:
#line 10170 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), true, (yyvsp[-1].item));
          }
#line 36826 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1373:
#line 10174 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].item_list2) == nullptr)
              MYSQL_YYABORT;
            (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item));

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 36839 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1374:
#line 10183 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 36847 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1375:
#line 10187 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 36855 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1376:
#line 10191 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 36863 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1377:
#line 10195 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == nullptr) || (item4 == nullptr))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 36875 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1378:
#line 10203 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36883 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1379:
#line 10207 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36891 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1380:
#line 10211 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 36900 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1381:
#line 10216 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 36909 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1382:
#line 10221 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto args= NEW_PTN PT_item_list((yyloc));
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 36921 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1383:
#line 10229 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto args= NEW_PTN PT_item_list((yyloc));
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 36933 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1387:
#line 10246 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36941 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1388:
#line 10250 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36949 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1389:
#line 10254 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36957 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1390:
#line 10258 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36965 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1391:
#line 10262 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36973 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1392:
#line 10266 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36981 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1393:
#line 10270 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 36989 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1394:
#line 10274 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 36997 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1395:
#line 10278 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 37005 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1396:
#line 10282 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 37013 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1397:
#line 10286 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 37021 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1398:
#line 10290 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_div_int((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 37029 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1399:
#line 10294 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 37037 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1400:
#line 10298 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 37045 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1405:
#line 10312 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
         {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 37053 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1408:
#line 10323 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
              { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 37059 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1410:
#line 10328 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 37065 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1411:
#line 10329 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 37071 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1412:
#line 10330 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 37077 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1413:
#line 10331 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 37083 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1414:
#line 10332 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 37089 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1415:
#line 10333 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 37095 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1416:
#line 10334 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 37101 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1417:
#line 10338 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                  { (yyval.num) = 1; }
#line 37107 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1418:
#line 10339 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                  { (yyval.num) = 0; }
#line 37113 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1424:
#line 10349 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            warn_on_deprecated_user_defined_collation(YYTHD, (yyvsp[0].lexer.lex_str));
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 37122 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1426:
#line 10354 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.item)= (yyvsp[0].param_marker); }
#line 37128 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1431:
#line 10360 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 37136 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1432:
#line 10364 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
            if ((yyval.item) != nullptr) (yyval.item)->m_pos = (yyloc);
          }
#line 37145 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1433:
#line 10369 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 37153 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1434:
#line 10373 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 37161 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1435:
#line 10377 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 37169 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1436:
#line 10381 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 37177 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1437:
#line 10385 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[-1].item);
            if ((yyval.item) != nullptr) (yyval.item)->m_pos = (yyloc);
          }
#line 37186 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1438:
#line 10390 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 37194 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1439:
#line 10394 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 37202 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1440:
#line 10398 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 37210 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1441:
#line 10402 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 37218 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1442:
#line 10406 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 37226 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1443:
#line 10410 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            push_deprecated_warn(YYTHD, "BINARY expr", "CAST");
            (yyval.item)= create_func_cast(YYTHD, (yyloc), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
            if ((yyval.item) == nullptr)
              MYSQL_YYABORT;
          }
#line 37237 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1444:
#line 10417 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_cast(YYTHD, (yyloc), (yyvsp[-4].item), (yyvsp[-2].cast_type), (yyvsp[-1].num));
            if ((yyval.item) == nullptr)
              MYSQL_YYABORT;
          }
#line 37247 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1445:
#line 10423 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "AT LOCAL");
          }
#line 37255 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1446:
#line 10428 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Cast_type cast_type{ITEM_CAST_DATETIME, nullptr, nullptr, (yyvsp[-1].c_str)};
            auto datetime_factor =
                NEW_PTN Item_func_at_time_zone((yylsp[-9]), (yyvsp[-9].item), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-5].is_not_empty));
            (yyval.item) = create_func_cast(YYTHD, (yyloc), datetime_factor, cast_type, false);
            if ((yyval.item) == nullptr)
              MYSQL_YYABORT;
          }
#line 37268 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1447:
#line 10437 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), (yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 37276 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1448:
#line 10441 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_cast(YYTHD, (yyloc), (yyvsp[-3].item), (yyvsp[-1].cast_type), false);
            if ((yyval.item) == nullptr)
              MYSQL_YYABORT;
          }
#line 37286 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1449:
#line 10447 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 37294 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1450:
#line 10451 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 37302 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1451:
#line 10455 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 37310 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1452:
#line 10460 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 37318 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1453:
#line 10464 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Item_string *path=
              NEW_PTN Item_string((yylsp[0]), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 37329 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1454:
#line 10471 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Item_string *path=
              NEW_PTN Item_string((yylsp[0]), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 37341 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1455:
#line 10481 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.num)= false; }
#line 37347 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1456:
#line 10482 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.num)= true; }
#line 37353 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1457:
#line 10493 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 37361 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1458:
#line 10497 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 37369 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1459:
#line 10501 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 37377 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1460:
#line 10505 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 37385 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1461:
#line 10509 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 37393 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1462:
#line 10513 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 37401 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1463:
#line 10517 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37409 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1464:
#line 10521 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37417 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1465:
#line 10525 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 37425 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1466:
#line 10530 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_json_value(YYTHD, (yylsp[-5]), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].cast_type),
                                       (yyvsp[-1].json_on_error_or_empty).empty.type, (yyvsp[-1].json_on_error_or_empty).empty.default_string,
                                       (yyvsp[-1].json_on_error_or_empty).error.type, (yyvsp[-1].json_on_error_or_empty).error.default_string);
          }
#line 37435 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1467:
#line 10536 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37443 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1468:
#line 10540 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 37451 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1469:
#line 10544 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 37459 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1470:
#line 10548 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37467 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1471:
#line 10552 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 37475 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1472:
#line 10556 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 37483 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1473:
#line 10560 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 37491 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1474:
#line 10564 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 37499 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1475:
#line 10568 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 37508 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1476:
#line 10573 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 37517 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1477:
#line 10578 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 37526 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1478:
#line 10583 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 37534 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1479:
#line 10587 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 37542 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1480:
#line 10591 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 37550 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1481:
#line 10595 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 37558 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1482:
#line 10599 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 37567 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1483:
#line 10604 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 37575 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1484:
#line 10608 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 37583 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1485:
#line 10627 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 37591 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1486:
#line 10631 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 37599 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1487:
#line 10635 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 37607 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1488:
#line 10639 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37615 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1489:
#line 10644 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 37623 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1490:
#line 10649 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 37631 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1491:
#line 10653 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 37639 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1492:
#line 10657 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 37647 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1493:
#line 10661 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_log((yyloc), (yyvsp[-1].item));
          }
#line 37655 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1494:
#line 10665 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_log((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37663 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1495:
#line 10669 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37672 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1496:
#line 10674 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 37680 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1497:
#line 10678 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 37688 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1498:
#line 10682 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 37696 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1499:
#line 10686 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37704 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1500:
#line 10690 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37712 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1501:
#line 10694 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37720 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1502:
#line 10698 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37728 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1503:
#line 10702 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37737 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1504:
#line 10707 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 37745 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1505:
#line 10711 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 37753 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1506:
#line 10715 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 37761 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1507:
#line 10719 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37769 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1508:
#line 10723 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37777 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1509:
#line 10734 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type)= {ITEM_CAST_CHAR, nullptr, "512", nullptr};
          }
#line 37785 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1510:
#line 10738 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type)= (yyvsp[0].cast_type);
          }
#line 37793 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1511:
#line 10749 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 37801 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1512:
#line 10753 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 37809 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1513:
#line 10757 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 37817 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1514:
#line 10761 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 37825 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1515:
#line 10765 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 37833 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1516:
#line 10769 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37841 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1517:
#line 10773 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37849 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1518:
#line 10777 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37857 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1519:
#line 10781 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 37865 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1520:
#line 10785 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37873 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1521:
#line 10789 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 37881 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1522:
#line 10793 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37889 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1523:
#line 10797 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37897 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1524:
#line 10801 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 37905 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1525:
#line 10805 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 37913 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1526:
#line 10809 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 37921 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1527:
#line 10813 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), nullptr);
          }
#line 37929 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1528:
#line 10817 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37937 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1529:
#line 10821 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 37945 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1530:
#line 10825 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 37953 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1531:
#line 10829 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 37961 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1532:
#line 10833 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 37969 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1534:
#line 10841 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 37979 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1535:
#line 10847 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 37989 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1536:
#line 10853 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 37999 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1537:
#line 10859 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 38009 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1538:
#line 10865 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 38019 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1539:
#line 10871 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 38027 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1540:
#line 10875 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 38037 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1541:
#line 10893 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 38045 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1542:
#line 10897 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 38053 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1543:
#line 10904 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 38059 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1544:
#line 10906 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 38073 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1545:
#line 10918 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.num)= FT_NL; }
#line 38079 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1546:
#line 10919 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_NL; }
#line 38085 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1547:
#line 10923 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.num)= 0;         }
#line 38091 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1548:
#line 10924 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_EXPAND; }
#line 38097 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1549:
#line 10928 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.item_list2)= nullptr; }
#line 38103 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1550:
#line 10929 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 38109 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1551:
#line 10934 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38119 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1552:
#line 10940 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].item_list2) == nullptr || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            // This will override earlier udf_expr_list, until
            // we get the whole location.
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 38132 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1553:
#line 10952 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 38140 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1556:
#line 10964 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 38148 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1557:
#line 10968 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 38156 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1558:
#line 10972 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38164 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1559:
#line 10976 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38172 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1560:
#line 10980 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 38186 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1561:
#line 10990 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 38200 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1562:
#line 11000 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), false);
          }
#line 38208 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1563:
#line 11004 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), true );
          }
#line 38216 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1564:
#line 11008 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38224 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1565:
#line 11012 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 38232 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1566:
#line 11016 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38240 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1567:
#line 11020 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 38248 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1568:
#line 11024 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38256 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1569:
#line 11033 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38264 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1570:
#line 11037 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38272 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1571:
#line 11041 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38280 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1572:
#line 11045 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 38288 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1573:
#line 11049 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 38296 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1574:
#line 11053 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 38304 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1575:
#line 11057 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 38312 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1576:
#line 11061 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 38320 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1577:
#line 11065 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 38328 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1578:
#line 11072 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 38336 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1579:
#line 11078 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.tablesample_type)= tablesample_type::SYSTEM_TABLESAMPLE_TYPE;    }
#line 38342 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1580:
#line 11079 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.tablesample_type)= tablesample_type::BERNOULLI_TABLESAMPLE_TYPE; }
#line 38348 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1581:
#line 11083 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.item) = (yyvsp[0].item_num); }
#line 38354 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1582:
#line 11084 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 38360 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1583:
#line 11085 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.item) = (yyvsp[0].param_marker); }
#line 38366 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1584:
#line 11090 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /* empty */ { (yyval.tablesample)= nullptr; }
          }
#line 38374 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1585:
#line 11094 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.tablesample)= NEW_PTN PT_tablesample((yyloc),(yyvsp[-3].tablesample_type),(yyvsp[-1].item));
          }
#line 38382 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1586:
#line 11101 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 38390 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1587:
#line 11105 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 38398 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1588:
#line 11109 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 38406 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1589:
#line 11113 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 38414 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1590:
#line 11117 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 38422 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1591:
#line 11121 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38430 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1592:
#line 11125 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            PT_item_list *args= NEW_PTN PT_item_list((yylsp[-4]), (yylsp[-3]));
            if (args == nullptr || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != nullptr && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != nullptr && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 38445 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1593:
#line 11136 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            PT_item_list *args= NEW_PTN PT_item_list((yylsp[-4]), (yylsp[-3]));
            if (args == nullptr || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != nullptr && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != nullptr && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 38460 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1594:
#line 11147 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 38468 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1595:
#line 11151 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 38476 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1596:
#line 11155 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            PT_item_list *args= NEW_PTN PT_item_list((yylsp[-6]), (yylsp[-4]));
            if (args == nullptr ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 38489 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1597:
#line 11167 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lead_lag_info).offset= nullptr;
            (yyval.lead_lag_info).default_value= nullptr;
          }
#line 38498 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1598:
#line 11172 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 38507 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1599:
#line 11183 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.item) = (yyvsp[0].item_num); }
#line 38513 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1601:
#line 11188 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.item) = (yyvsp[0].param_marker); }
#line 38519 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1602:
#line 11189 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.item) = NEW_PTN PTI_int_splocal((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 38525 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1603:
#line 11190 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 38531 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1604:
#line 11195 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= nullptr;
          }
#line 38539 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1605:
#line 11199 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 38547 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1606:
#line 11206 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.null_treatment)= NT_NONE;
          }
#line 38555 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1607:
#line 11210 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 38563 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1608:
#line 11214 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 38571 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1609:
#line 11222 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 38579 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1610:
#line 11226 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 38587 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1611:
#line 11230 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 38595 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1612:
#line 11237 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.window)= nullptr;
          }
#line 38603 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1613:
#line 11241 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.window)= (yyvsp[0].window);
          }
#line 38611 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1614:
#line 11248 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.window)= (yyvsp[0].window);
          }
#line 38619 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1615:
#line 11255 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.window)= NEW_PTN PT_window((yyloc), (yyvsp[0].item_string));
          }
#line 38627 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1616:
#line 11259 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.window)= (yyvsp[0].window);
          }
#line 38635 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1617:
#line 11266 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 38643 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1618:
#line 11273 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.window)= (yyvsp[-1].window);
            if ((yyval.window) != nullptr) (yyval.window)->m_pos = (yyloc);
          }
#line 38652 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1619:
#line 11284 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
           {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(POS(), WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border(POS(), (yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(POS(), start_bound, end_bound);
               frame= NEW_PTN PT_frame(POS(), WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window(POS(), (yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 38670 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1620:
#line 11301 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_string)= nullptr;
          }
#line 38678 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1621:
#line 11305 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 38686 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1622:
#line 11312 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.order_list)= nullptr;
          }
#line 38694 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1623:
#line 11316 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.order_list)= (yyvsp[0].order_list);
            if ((yyval.order_list) != nullptr) (yyval.order_list)->m_pos = (yyloc);
          }
#line 38703 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1624:
#line 11324 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.order_list)= nullptr;
          }
#line 38711 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1625:
#line 11328 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.order_list)= (yyvsp[0].order_list);
            if ((yyval.order_list) != nullptr) (yyval.order_list)->m_pos = (yyloc);
          }
#line 38720 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1626:
#line 11336 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.window_frame)= nullptr;
          }
#line 38728 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1627:
#line 11342 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.window_frame)= NEW_PTN PT_frame((yyloc), (yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 38736 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1628:
#line 11349 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto end_bound= NEW_PTN PT_border((yyloc), WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyloc), (yyvsp[0].bound), end_bound);
          }
#line 38745 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1629:
#line 11354 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 38753 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1630:
#line 11361 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_UNBOUNDED_PRECEDING);
          }
#line 38761 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1631:
#line 11365 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 38769 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1632:
#line 11369 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 38777 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1633:
#line 11373 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 38785 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1634:
#line 11377 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_CURRENT_ROW);
          }
#line 38793 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1635:
#line 11384 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyloc), (yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 38801 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1636:
#line 11391 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 38809 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1637:
#line 11395 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_UNBOUNDED_FOLLOWING);
          }
#line 38817 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1638:
#line 11399 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 38825 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1639:
#line 11403 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 38833 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1640:
#line 11407 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 38841 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1641:
#line 11414 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.frame_exclusion)= nullptr;
          }
#line 38849 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1642:
#line 11418 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion((yyloc), WFX_CURRENT_ROW);
          }
#line 38857 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1643:
#line 11422 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion((yyloc), WFX_GROUP);
          }
#line 38865 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1644:
#line 11426 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion((yyloc), WFX_TIES);
          }
#line 38873 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1645:
#line 11430 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= NEW_PTN PT_exclusion((yyloc), WFX_NO_OTHERS);
          }
#line 38880 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1646:
#line 11435 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.frame_units)= WFU_ROWS; }
#line 38886 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1647:
#line 11436 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.frame_units)= WFU_RANGE; }
#line 38892 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1648:
#line 11437 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.frame_units)= WFU_GROUPS; }
#line 38898 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1649:
#line 11442 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 38906 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1650:
#line 11449 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item) = NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 38917 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1651:
#line 11459 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 38925 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1652:
#line 11463 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item) = NEW_PTN PTI_get_system_variable((yyloc), (yyvsp[-1].var_type),
                                                 (yylsp[0]), (yyvsp[0].bipartite_name).prefix, (yyvsp[0].bipartite_name).name);
          }
#line 38934 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1653:
#line 11470 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.num) = 0; }
#line 38940 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1654:
#line 11471 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.num) = 1; }
#line 38946 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1655:
#line 11476 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == nullptr)
              MYSQL_YYABORT;
          }
#line 38956 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1656:
#line 11481 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.string) = (yyvsp[0].string); }
#line 38962 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1657:
#line 11485 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.order_list)= nullptr; }
#line 38968 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1658:
#line 11486 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 38974 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1659:
#line 11491 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
            // This will override earlier list, until
            // we get the whole location.
            (yyval.order_list)->m_pos = (yyloc);
          }
#line 38986 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1660:
#line 11499 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.order_list)= NEW_PTN PT_gorder_list((yyloc));
            if ((yyval.order_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 38997 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1661:
#line 11509 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 39005 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1662:
#line 11516 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= nullptr;
          }
#line 39016 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1663:
#line 11523 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= nullptr;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == nullptr)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 39039 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1664:
#line 11542 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= nullptr;
            warn_about_deprecated_national(YYTHD);
          }
#line 39051 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1665:
#line 11550 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39062 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1666:
#line 11557 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39073 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1667:
#line 11564 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39084 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1668:
#line 11571 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39095 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1669:
#line 11578 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39106 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1670:
#line 11585 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_YEAR;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39117 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1671:
#line 11592 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 39128 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1672:
#line 11599 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 39139 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1673:
#line 11606 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 39150 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1674:
#line 11613 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39161 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1675:
#line 11620 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39173 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1676:
#line 11628 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 39184 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1677:
#line 11635 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_POINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39195 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1678:
#line 11642 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_LINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39206 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1679:
#line 11649 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_POLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39217 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1680:
#line 11656 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39228 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1681:
#line 11663 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_MULTILINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39239 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1682:
#line 11670 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39250 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1683:
#line 11677 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_GEOMETRYCOLLECTION;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39261 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1684:
#line 11686 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.item_list2)= nullptr; }
#line 39267 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1686:
#line 11692 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 39277 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1687:
#line 11698 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].item_list2) == nullptr || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            // This will override location of earlier list, until we get the
            // whole location.
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 39290 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1688:
#line 11709 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 39296 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1689:
#line 11710 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 39302 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1690:
#line 11715 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 39312 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1691:
#line 11721 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].item_list2) == nullptr || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 39323 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1692:
#line 11730 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.item)= nullptr; }
#line 39329 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1693:
#line 11731 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.item)= (yyvsp[0].item); }
#line 39335 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1694:
#line 11735 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.item)= nullptr; }
#line 39341 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1695:
#line 11736 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.item)= (yyvsp[0].item); }
#line 39347 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1696:
#line 11741 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (YYMEM_ROOT) mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 39359 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1697:
#line 11749 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 39369 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1698:
#line 11757 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 39375 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1699:
#line 11758 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 39381 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1700:
#line 11760 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 39395 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1701:
#line 11772 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 39401 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1702:
#line 11773 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 39407 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1703:
#line 11855 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyloc), (yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 39415 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1704:
#line 11860 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyloc), (yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 39423 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1705:
#line 11864 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyloc), (yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 39431 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1706:
#line 11868 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyloc), (yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 39439 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1707:
#line 11873 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto this_cross_join= NEW_PTN PT_cross_join((yyloc), (yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), nullptr);

            if ((yyvsp[0].table_reference) == nullptr)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 39452 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1708:
#line 11882 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyloc), (yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 39460 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1709:
#line 11888 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 39466 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1710:
#line 11889 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 39472 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1711:
#line 11890 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 39478 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1712:
#line 11894 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_INNER; }
#line 39484 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1713:
#line 11895 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_INNER; }
#line 39490 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1714:
#line 11896 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_INNER; }
#line 39496 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1715:
#line 11897 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 39502 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1716:
#line 11900 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_LEFT; }
#line 39508 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1717:
#line 11901 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_RIGHT; }
#line 39514 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1722:
#line 11919 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.string_list)= nullptr; }
#line 39520 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1724:
#line 11925 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 39528 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1727:
#line 11955 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 39534 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1728:
#line 11957 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyloc), (yyvsp[0].join_table)); }
#line 39540 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1729:
#line 11959 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyloc), (yyvsp[0].table_reference_list)); }
#line 39546 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1730:
#line 11960 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 39552 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1731:
#line 11964 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                              { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 39558 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1732:
#line 11966 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 39568 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1733:
#line 11974 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                      { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 39574 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1734:
#line 11975 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 39580 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1735:
#line 11980 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyloc), (yyvsp[-4].table), (yyvsp[-3].string_list), (yyvsp[-2].lex_cstr), (yyvsp[-1].key_usage_list), (yyvsp[0].tablesample));
          }
#line 39588 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1736:
#line 11986 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                      { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 39594 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1737:
#line 11987 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 39600 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1738:
#line 11992 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table((yyloc), false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 39617 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1739:
#line 12005 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table((yyloc), true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 39629 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1740:
#line 12017 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyloc), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 39645 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1741:
#line 12032 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 39653 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1742:
#line 12039 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == nullptr || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 39663 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1743:
#line 12045 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 39673 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1744:
#line 12054 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyloc), (yyvsp[-2].lexer.lex_str));
          }
#line 39681 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1745:
#line 12059 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].json_on_error_or_empty).error.type, (yyvsp[0].json_on_error_or_empty).error.default_string,
                (yyvsp[0].json_on_error_or_empty).empty.type, (yyvsp[0].json_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path((yyloc), std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 39694 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1746:
#line 12068 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyloc), (yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 39702 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1747:
#line 12075 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 39710 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1748:
#line 12079 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 39718 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1749:
#line 12089 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 39727 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1750:
#line 12094 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 39736 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1751:
#line 12099 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 39745 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1752:
#line 12104 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.json_on_error_or_empty).empty = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
          }
#line 39754 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1753:
#line 12112 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.json_on_error_or_empty) = (yyvsp[0].json_on_error_or_empty); }
#line 39760 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1754:
#line 12114 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.json_on_error_or_empty).error = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
          }
#line 39772 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1755:
#line 12124 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 39778 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1756:
#line 12127 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 39784 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1757:
#line 12131 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.json_on_response) = {Json_on_response_type::ERROR, nullptr};
          }
#line 39792 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1758:
#line 12135 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.json_on_response) = {Json_on_response_type::NULL_VALUE, nullptr};
          }
#line 39800 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1759:
#line 12139 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.json_on_response) = {Json_on_response_type::DEFAULT, (yyvsp[0].item)};
          }
#line 39808 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1760:
#line 12146 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.num)= INDEX_HINT_MASK_ALL;
          }
#line 39816 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1761:
#line 12149 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 39822 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1762:
#line 12150 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 39828 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1763:
#line 12151 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 39834 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1764:
#line 12155 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 39840 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1765:
#line 12156 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 39846 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1766:
#line 12162 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 39855 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1767:
#line 12168 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 39864 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1769:
#line 12177 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 39873 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1770:
#line 12184 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.key_usage_list)= nullptr; }
#line 39879 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1773:
#line 12194 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(nullptr, 0);
            if ((yyval.key_usage_list) == nullptr || hint == nullptr || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 39890 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1775:
#line 12205 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == nullptr)
              MYSQL_YYABORT;
          }
#line 39900 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1776:
#line 12211 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == nullptr)
              MYSQL_YYABORT;
          }
#line 39910 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1777:
#line 12220 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == nullptr || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 39920 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1778:
#line 12226 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 39929 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1780:
#line 12238 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == nullptr || s == nullptr || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 39942 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1781:
#line 12247 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == nullptr || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 39955 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1782:
#line 12258 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 {}
#line 39961 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1783:
#line 12259 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 39967 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1784:
#line 12260 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 39973 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1785:
#line 12261 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 39979 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1786:
#line 12262 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 39985 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1787:
#line 12263 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 39991 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1788:
#line 12264 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 39997 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1789:
#line 12265 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 40003 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1790:
#line 12266 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 40009 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1791:
#line 12267 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 40015 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1792:
#line 12268 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 40021 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1793:
#line 12269 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 40027 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1794:
#line 12273 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 40033 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1795:
#line 12274 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 40039 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1796:
#line 12275 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 40045 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1797:
#line 12276 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 40051 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1798:
#line 12277 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 40057 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1799:
#line 12278 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 40063 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1800:
#line 12279 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 40069 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1801:
#line 12280 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 40075 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1802:
#line 12281 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 40081 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1803:
#line 12285 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 40087 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1804:
#line 12286 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 40093 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1805:
#line 12287 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 40099 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1806:
#line 12288 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 40105 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1809:
#line 12297 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lex_cstr) = NULL_CSTR; }
#line 40111 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1810:
#line 12298 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 40117 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1813:
#line 12307 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.item) = nullptr; }
#line 40123 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1815:
#line 12312 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 40129 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1816:
#line 12316 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.item)= nullptr; }
#line 40135 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1817:
#line 12318 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 40143 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1818:
#line 12324 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                  { (yyval.item)= nullptr; }
#line 40149 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1819:
#line 12326 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= new PTI_qualify((yyloc), (yyvsp[0].item));
          }
#line 40157 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1820:
#line 12333 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyloc), (yyvsp[0].with_list), false);
          }
#line 40165 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1821:
#line 12337 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyloc), (yyvsp[0].with_list), true);
          }
#line 40173 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1822:
#line 12344 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
            (yyval.with_list)->m_pos = (yyloc);
          }
#line 40183 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1823:
#line 12350 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.with_list)= NEW_PTN PT_with_list((yyloc), YYTHD->mem_root);
            if ((yyval.with_list) == nullptr || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 40193 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1824:
#line 12359 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == nullptr)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyloc), (yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == nullptr)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 40210 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1825:
#line 12375 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 40223 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1826:
#line 12384 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 40231 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1827:
#line 12391 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 40241 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1828:
#line 12397 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 40251 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1829:
#line 12406 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.windows)= nullptr;
          }
#line 40259 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1830:
#line 12410 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 40267 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1831:
#line 12417 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.windows)= NEW_PTN PT_window_list((yyloc));
            if ((yyval.windows) == nullptr || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 40277 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1832:
#line 12423 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
            (yyval.windows)->m_pos = (yyloc);
          }
#line 40288 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1833:
#line 12433 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyval.window)->m_pos = (yyloc);
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 40300 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1834:
#line 12447 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.group)= nullptr; }
#line 40306 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1835:
#line 12449 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.group)= NEW_PTN PT_group((yyloc), (yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 40314 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1836:
#line 12453 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.group)= NEW_PTN PT_group((yyloc), (yyvsp[-1].order_list), ROLLUP_TYPE);
          }
#line 40322 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1837:
#line 12457 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.group)= NEW_PTN PT_group((yyloc), (yyvsp[-1].order_list), CUBE_TYPE);
          }
#line 40330 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1838:
#line 12464 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->m_pos = (yyloc);
          }
#line 40340 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1839:
#line 12470 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.order_list)= NEW_PTN PT_order_list((yyloc));
            if ((yyval.order_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 40351 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1840:
#line 12480 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 40357 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1841:
#line 12481 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.olap_type)= ROLLUP_TYPE; }
#line 40363 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1842:
#line 12497 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)->m_pos = (yyloc);
          }
#line 40373 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1843:
#line 12503 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.order_list)= NEW_PTN PT_order_list((yyloc));
            if ((yyval.order_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 40384 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1844:
#line 12513 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 40392 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1845:
#line 12519 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.order)= nullptr; }
#line 40398 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1847:
#line 12525 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.order)= NEW_PTN PT_order((yyloc), (yyvsp[0].order_list));
          }
#line 40406 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1848:
#line 12532 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->m_pos = (yyloc);
          }
#line 40416 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1849:
#line 12538 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.order_list)= NEW_PTN PT_order_list((yyloc));
            if ((yyval.order_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 40427 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1850:
#line 12547 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 40433 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1852:
#line 12552 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.order_direction)= ORDER_ASC; }
#line 40439 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1853:
#line 12553 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.order_direction)= ORDER_DESC; }
#line 40445 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1854:
#line 12557 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.limit_clause)= nullptr; }
#line 40451 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1856:
#line 12563 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyloc), (yyvsp[0].limit_options));
          }
#line 40459 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1857:
#line 12570 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= nullptr;
            (yyval.limit_options).is_offset_first= false;
          }
#line 40469 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1858:
#line 12576 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 40479 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1859:
#line 12582 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 40489 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1860:
#line 12591 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 40497 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1861:
#line 12595 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 40505 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1862:
#line 12599 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40513 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1863:
#line 12603 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40521 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1864:
#line 12607 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40529 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1865:
#line 12613 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.item)= nullptr; }
#line 40535 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1866:
#line 12614 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                             { (yyval.item)= (yyvsp[0].item); }
#line 40541 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1867:
#line 12618 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40547 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1868:
#line 12619 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 16); }
#line 40553 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1869:
#line 12620 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40559 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1870:
#line 12621 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40565 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1871:
#line 12622 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40571 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1872:
#line 12623 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40577 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1873:
#line 12627 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40583 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1874:
#line 12628 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 16); }
#line 40589 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1875:
#line 12629 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40595 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1876:
#line 12630 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40601 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1877:
#line 12631 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 40607 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1878:
#line 12635 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40613 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1879:
#line 12636 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40619 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1880:
#line 12637 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40625 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1881:
#line 12638 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40631 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1882:
#line 12639 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40637 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1883:
#line 12643 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40643 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1884:
#line 12644 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 16); }
#line 40649 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1885:
#line 12645 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40655 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1886:
#line 12646 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40661 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1887:
#line 12647 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 40667 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1888:
#line 12652 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 40673 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1891:
#line 12662 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == nullptr || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 40683 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1892:
#line 12668 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == nullptr || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 40693 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1893:
#line 12677 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40701 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1894:
#line 12681 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40709 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1895:
#line 12688 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 40717 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1896:
#line 12697 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 40725 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1897:
#line 12701 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40733 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1898:
#line 12704 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 40739 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1899:
#line 12713 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt((yyloc), SQLCOM_DO,
                  NEW_PTN PT_query_expression((yyloc),
                    NEW_PTN PT_query_specification((yyloc), {}, (yyvsp[0].item_list2))));
          }
#line 40749 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1900:
#line 12726 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_table();
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
          }
#line 40770 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1901:
#line 12746 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt((yyloc), YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 40780 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1902:
#line 12755 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
            MAKE_CMD_DDL_DUMMY();
          }
#line 40792 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1903:
#line 12766 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == nullptr)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
            MAKE_CMD_DDL_DUMMY();
          }
#line 40820 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1904:
#line 12790 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == nullptr)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
            MAKE_CMD_DDL_DUMMY();
          }
#line 40857 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1905:
#line 12826 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group((yyloc), to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 40865 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1906:
#line 12833 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            MAKE_CMD_DDL_DUMMY();
          }
#line 40882 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1907:
#line 12849 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
             MAKE_CMD_DCL_DUMMY();
          }
#line 40894 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1908:
#line 12860 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            MAKE_CMD_DDL_DUMMY();
          }
#line 40911 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1909:
#line 12876 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
            MAKE_CMD_DDL_DUMMY();
          }
#line 40922 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1910:
#line 12886 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 40934 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1911:
#line 12897 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 40956 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1912:
#line 12917 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 40979 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1913:
#line 12939 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 41002 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1914:
#line 12962 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 41011 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1915:
#line 12970 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyloc), (yyvsp[0].ulonglong_number), (yyvsp[-1].num));
          }
#line 41019 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1916:
#line 12977 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyloc), (yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 41027 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1917:
#line 12984 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 41037 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1918:
#line 12990 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == nullptr || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 41047 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1919:
#line 12999 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 41057 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1920:
#line 13005 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 41067 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1921:
#line 13013 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 41073 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1922:
#line 13014 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.num)= 1; }
#line 41079 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1923:
#line 13018 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 41085 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1924:
#line 13019 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                      { (yyval.num)= 1; }
#line 41091 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1925:
#line 13023 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 41097 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1926:
#line 13024 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= true; }
#line 41103 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1927:
#line 13028 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
               { (yyval.ts_options)= nullptr; }
#line 41109 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1929:
#line 13034 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == nullptr || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 41119 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1930:
#line 13040 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 41129 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1933:
#line 13065 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert((yyloc), false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  nullptr,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 41145 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1934:
#line 13086 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list((yyloc), YYMEM_ROOT);
            if (one_row == nullptr || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert((yyloc), false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  nullptr,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 41160 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1935:
#line 13104 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_insert((yyloc), false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, nullptr,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, nullptr,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 41172 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1936:
#line 13120 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_insert((yyloc), true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  nullptr,
                                  NULL_CSTR, nullptr,
                                  nullptr, nullptr);
          }
#line 41184 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1937:
#line 13134 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list((yyloc), YYMEM_ROOT);
            if (one_row == nullptr || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert((yyloc), true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  nullptr,
                                  NULL_CSTR, nullptr,
                                  nullptr, nullptr);
          }
#line 41199 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1938:
#line 13150 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_insert((yyloc), true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, nullptr,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, nullptr,
                                  nullptr, nullptr);
          }
#line 41211 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1939:
#line 13160 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 41217 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1940:
#line 13161 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41223 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1941:
#line 13163 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
        {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 41236 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1942:
#line 13171 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE; }
#line 41242 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1943:
#line 13175 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                           { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 41248 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1944:
#line 13177 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
        {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 41261 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1947:
#line 13194 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // No position because there is no column list.
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list(POS());
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 41271 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1948:
#line 13200 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list(POS()); // No position.
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 41280 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1949:
#line 13205 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 41289 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1950:
#line 13213 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list(POS()); // No column list.
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression_body);
          }
#line 41298 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1951:
#line 13218 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list(POS()); // No column list.
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression_body);
          }
#line 41307 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1952:
#line 13223 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression_body);
          }
#line 41316 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1953:
#line 13231 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 41327 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1954:
#line 13238 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 41337 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1955:
#line 13247 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 41345 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1956:
#line 13253 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                { (yyval.query_expression_body) = (yyvsp[0].query_expression); }
#line 41351 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1957:
#line 13255 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.query_expression_body) = NEW_PTN PT_locking((yyloc), (yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 41359 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1960:
#line 13267 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
            (yyval.values_list)->m_pos = (yyloc);
          }
#line 41369 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1961:
#line 13273 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.values_list)= NEW_PTN PT_insert_values_list((yyloc), YYMEM_ROOT);
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 41379 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1962:
#line 13283 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
            (yyval.values_list)->m_pos = (yyloc);
          }
#line 41389 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1963:
#line 13289 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.values_list)= NEW_PTN PT_insert_values_list((yyloc), YYMEM_ROOT);
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 41399 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1968:
#line 13307 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                             { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 41405 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1969:
#line 13311 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                     { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 41411 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1970:
#line 13316 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list(POS());
            if ((yyval.item_list2) == nullptr)
              MYSQL_YYABORT;
          }
#line 41421 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1972:
#line 13326 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 41432 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1973:
#line 13333 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 41442 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1975:
#line 13343 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 41450 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1976:
#line 13350 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = nullptr;
          }
#line 41459 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1977:
#line 13355 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 41473 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1978:
#line 13368 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.column_value_list_pair).value_list= nullptr;
            (yyval.column_value_list_pair).column_list= nullptr;
          }
#line 41482 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1979:
#line 13373 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 41490 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1980:
#line 13391 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_update((yyloc), (yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 41499 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1981:
#line 13398 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.with_clause)= nullptr; }
#line 41505 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1982:
#line 13399 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 41511 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1983:
#line 13404 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 41522 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1984:
#line 13411 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list((yyloc));
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list((yyloc));
            if ((yyval.column_value_list_pair).column_list == nullptr || (yyval.column_value_list_pair).value_list == nullptr ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 41535 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1985:
#line 13423 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 41544 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1986:
#line 13430 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 41550 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1987:
#line 13431 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41556 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1988:
#line 13447 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyloc), (yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 41564 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1989:
#line 13457 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyloc), (yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 41572 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1990:
#line 13468 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyloc), (yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 41580 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1993:
#line 13479 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 41586 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1994:
#line 13480 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                               { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 41592 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1995:
#line 13484 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 41598 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1996:
#line 13485 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 41604 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1997:
#line 13486 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 41610 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 1998:
#line 13491 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyloc), (yyvsp[0].table));
          }
#line 41618 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2001:
#line 13502 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ulong_num) = 0; }
#line 41624 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2004:
#line 13508 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.ulong_num) = (yyvsp[-2].ulong_num) | (yyvsp[0].ulong_num); }
#line 41630 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2005:
#line 13512 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_CPU; }
#line 41636 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2006:
#line 13513 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_MEMORY; }
#line 41642 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2007:
#line 13514 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_BLOCK_IO; }
#line 41648 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2008:
#line 13515 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_CONTEXT; }
#line 41654 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2009:
#line 13516 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_PAGE_FAULTS; }
#line 41660 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2010:
#line 13517 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_IPC; }
#line 41666 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2011:
#line 13518 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_SWAPS; }
#line 41672 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2012:
#line 13519 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_SOURCE; }
#line 41678 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2013:
#line 13520 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_ALL; }
#line 41684 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2014:
#line 13524 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.query_id) = 0; }
#line 41690 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2015:
#line 13526 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            int error;
            (yyval.query_id) = static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error));
            if (error != 0)
              MYSQL_YYABORT;
          }
#line 41701 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2016:
#line 13538 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
           {
             (yyval.top_level_node) = NEW_PTN PT_show_databases((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           }
#line 41709 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2017:
#line 13544 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41717 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2018:
#line 13551 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_triggers((yyloc), (yyvsp[-3].is_not_empty), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41725 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2019:
#line 13558 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_events((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41733 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2020:
#line 13565 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_table_status((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41741 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2021:
#line 13572 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
             (yyval.top_level_node) = NEW_PTN PT_show_open_tables((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41749 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2022:
#line 13579 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_plugins((yyloc));
          }
#line 41757 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2023:
#line 13586 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_logs((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 41765 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2024:
#line 13593 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_mutex((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 41773 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2025:
#line 13600 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_status((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 41781 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2026:
#line 13613 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41793 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2027:
#line 13624 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_binlogs((yyloc));
          }
#line 41801 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2028:
#line 13631 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 41809 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2029:
#line 13638 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_binlog_events((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].limit_clause));
          }
#line 41817 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2030:
#line 13646 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_relaylog_events((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].limit_clause), (yyvsp[0].lex_cstr));
          }
#line 41825 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2031:
#line 13659 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));
          }
#line 41837 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2032:
#line 13670 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_engines((yyloc));
          }
#line 41845 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2033:
#line 13677 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_count_warnings((yyloc));
          }
#line 41853 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2034:
#line 13684 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_count_errors((yyloc));
          }
#line 41861 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2035:
#line 13691 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_warnings((yyloc), (yyvsp[0].limit_clause));
          }
#line 41869 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2036:
#line 13698 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_errors((yyloc), (yyvsp[0].limit_clause));
          }
#line 41877 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2037:
#line 13705 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            (yyval.top_level_node) = NEW_PTN PT_show_profiles((yyloc));
          }
#line 41889 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2038:
#line 13716 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_profile((yyloc), (yyvsp[-2].ulong_num), (yyvsp[-1].query_id), (yyvsp[0].limit_clause));
          }
#line 41897 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2039:
#line 13723 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
             (yyval.top_level_node) = NEW_PTN PT_show_status((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41905 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2040:
#line 13730 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_processlist((yyloc), (yyvsp[-1].is_not_empty));
          }
#line 41913 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2041:
#line 13737 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_variables((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41921 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2042:
#line 13744 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_charsets((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41929 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2043:
#line 13751 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_collations((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41937 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2044:
#line 13758 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_privileges((yyloc));
          }
#line 41945 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2045:
#line 13765 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), nullptr, nullptr);
          }
#line 41953 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2046:
#line 13769 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), nullptr);
          }
#line 41961 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2047:
#line 13773 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list));
          }
#line 41969 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2048:
#line 13780 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_database((yyloc), (yyvsp[-1].is_not_empty), (yyvsp[0].lexer.lex_str));
          }
#line 41977 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2049:
#line 13787 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_table((yyloc), (yyvsp[0].table));
          }
#line 41985 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2050:
#line 13794 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_view((yyloc), (yyvsp[0].table));
          }
#line 41993 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2051:
#line 13801 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_binary_log_status((yyloc));
          }
#line 42001 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2052:
#line 13808 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_replica_status((yyloc), (yyvsp[0].lex_cstr));
          }
#line 42009 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2053:
#line 13815 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_procedure((yyloc), (yyvsp[0].spname));
          }
#line 42017 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2054:
#line 13822 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_function((yyloc), (yyvsp[0].spname));
          }
#line 42025 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2055:
#line 13829 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_trigger((yyloc), (yyvsp[0].spname));
          }
#line 42033 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2056:
#line 13836 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_status_proc((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 42041 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2057:
#line 13843 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_status_func((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 42049 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2058:
#line 13850 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_procedure_code((yyloc), (yyvsp[0].spname));
          }
#line 42057 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2059:
#line 13857 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_function_code((yyloc), (yyvsp[0].spname));
          }
#line 42065 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2060:
#line 13864 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_event((yyloc), (yyvsp[0].spname));
          }
#line 42073 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2061:
#line 13871 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_user((yyloc), (yyvsp[0].lex_user));
          }
#line 42081 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2062:
#line 13878 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
#ifndef WITH_SHOW_PARSE_TREE
            YYTHD->syntax_error_at((yylsp[-1]));
            MYSQL_YYABORT;
#endif
            (yyval.top_level_node) = NEW_PTN PT_show_parse_tree((yyloc), (yyvsp[0].top_level_node));
          }
#line 42093 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2064:
#line 13889 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.lexer.lex_str) = {}; }
#line 42099 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2067:
#line 13898 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.simple_string)= nullptr; }
#line 42105 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2068:
#line 13899 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                           { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 42111 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2069:
#line 13903 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= 0; }
#line 42117 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2070:
#line 13904 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= 1; }
#line 42123 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2071:
#line 13908 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.is_not_empty)= 0; }
#line 42129 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2072:
#line 13909 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.is_not_empty)= 1; }
#line 42135 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2073:
#line 13913 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 42141 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2074:
#line 13914 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 42147 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2075:
#line 13915 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 42153 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2076:
#line 13916 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 42159 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2079:
#line 13925 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.lexer.lex_str) = {}; }
#line 42165 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2080:
#line 13926 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str); }
#line 42171 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2081:
#line 13930 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { Lex->mi.pos = 4; /* skip magic number */ }
#line 42177 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2082:
#line 13931 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                             { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 42183 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2083:
#line 13935 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.wild_or_where) = {}; }
#line 42189 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2084:
#line 13936 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 42195 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2085:
#line 13937 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 42201 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2086:
#line 13943 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 42209 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2087:
#line 13950 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyloc), (yyvsp[-1].explain_options_type).explain_format_type, (yyvsp[-1].explain_options_type).is_analyze,
                  (yyvsp[-1].explain_options_type).is_explicit, (yyvsp[0].explainable_stmt).statement,
                  (yyvsp[-1].explain_options_type).explain_into_variable_name.length ?
                  std::optional<std::string_view>(
                    to_string_view((yyvsp[-1].explain_options_type).explain_into_variable_name)) :
                  std::optional<std::string_view>(std::nullopt),
                  (yyvsp[0].explainable_stmt).schema_name_for_explain);
          }
#line 42223 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2088:
#line 13963 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.explainable_stmt).statement = (yyvsp[0].top_level_node);
            (yyval.explainable_stmt).schema_name_for_explain = (yyvsp[-1].lex_cstr);
          }
#line 42232 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2089:
#line 13968 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.explainable_stmt).statement = (yyvsp[0].top_level_node);
            (yyval.explainable_stmt).schema_name_for_explain = (yyvsp[-1].lex_cstr);
          }
#line 42241 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2090:
#line 13973 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.explainable_stmt).statement = (yyvsp[0].top_level_node);
            (yyval.explainable_stmt).schema_name_for_explain = (yyvsp[-1].lex_cstr);
          }
#line 42250 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2091:
#line 13978 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.explainable_stmt).statement = (yyvsp[0].top_level_node);
            (yyval.explainable_stmt).schema_name_for_explain = (yyvsp[-1].lex_cstr);
          }
#line 42259 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2092:
#line 13983 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.explainable_stmt).statement = (yyvsp[0].top_level_node);
            (yyval.explainable_stmt).schema_name_for_explain = (yyvsp[-1].lex_cstr);
          }
#line 42268 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2093:
#line 13988 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.explainable_stmt).statement = NEW_PTN PT_explain_for_connection((yyloc), static_cast<my_thread_id>((yyvsp[0].ulong_num)));
            (yyval.explainable_stmt).schema_name_for_explain = NULL_CSTR;
          }
#line 42277 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2096:
#line 14001 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.explain_options_type).is_explicit = false;
            (yyval.explain_options_type).explain_format_type = YYTHD->variables.explain_format;
          }
#line 42286 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2097:
#line 14006 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.explain_options_type).is_explicit = true;
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_options_type).explain_format_type = Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_options_type).explain_format_type = Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_options_type).explain_format_type = Explain_format_type::TREE;
            else {
              // This includes even TRADITIONAL_STRICT. Since this value is
              // only meant for mtr infrastructure temporarily, we don't want
              // the user to explicitly use this value in EXPLAIN statements.
              // This results in having one less place to deprecate from.
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 42308 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2098:
#line 14027 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.explain_options_type) = (yyvsp[0].explain_options_type);
            (yyval.explain_options_type).is_analyze = true;
            (yyval.explain_options_type).explain_into_variable_name = NULL_STR;
          }
#line 42318 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2099:
#line 14033 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.explain_options_type) = (yyvsp[-1].explain_options_type);
            (yyval.explain_options_type).is_analyze = false;

            if ((yyvsp[0].lexer.lex_str).length) {
              if (!(yyval.explain_options_type).is_explicit) {
                MYSQL_YYABORT_ERROR(
                  ER_EXPLAIN_INTO_IMPLICIT_FORMAT_NOT_SUPPORTED, MYF(0));
              }
              if ((yyval.explain_options_type).explain_format_type != Explain_format_type::JSON) {
                if ((yyval.explain_options_type).explain_format_type == Explain_format_type::TREE) {
                  MYSQL_YYABORT_ERROR(ER_EXPLAIN_INTO_FORMAT_NOT_SUPPORTED,
                                      MYF(0), "TREE");
                } else {
                  MYSQL_YYABORT_ERROR(ER_EXPLAIN_INTO_FORMAT_NOT_SUPPORTED,
                                      MYF(0), "TRADITIONAL");
                }
              }
            }
            (yyval.explain_options_type).explain_into_variable_name = (yyvsp[0].lexer.lex_str);
          }
#line 42344 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2100:
#line 14058 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str) = NULL_STR;
          }
#line 42352 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2101:
#line 14062 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
          }
#line 42360 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2102:
#line 14069 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_cstr) = NULL_CSTR;
          }
#line 42368 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2103:
#line 14073 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 42376 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2104:
#line 14079 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 42382 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2105:
#line 14081 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 42391 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2107:
#line 14093 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 42402 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2108:
#line 14100 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 42408 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2109:
#line 14105 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 42425 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2110:
#line 14117 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         {}
#line 42431 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2112:
#line 14122 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 42437 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2113:
#line 14124 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Table_ref *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 42453 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2114:
#line 14136 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (Lex->query_tables == nullptr) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 42465 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2115:
#line 14144 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Table_ref *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 42481 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2117:
#line 14160 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 42487 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2118:
#line 14165 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ERROR_LOG; }
#line 42493 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2119:
#line 14167 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ENGINE_LOG; }
#line 42499 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2120:
#line 14169 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GENERAL_LOG; }
#line 42505 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2121:
#line 14171 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_SLOW_LOG; }
#line 42511 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2122:
#line 14173 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_BINARY_LOG; }
#line 42517 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2123:
#line 14175 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_RELAY_LOG;
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 42527 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2124:
#line 14181 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GRANT; }
#line 42533 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2125:
#line 14183 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_LOG; }
#line 42539 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2126:
#line 14185 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_STATUS; }
#line 42545 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2127:
#line 14187 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_USER_RESOURCES; }
#line 42551 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2128:
#line 14189 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 42557 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2129:
#line 14193 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.table_list)= nullptr; }
#line 42563 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2131:
#line 14199 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 42572 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2132:
#line 14204 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 42578 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2133:
#line 14206 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 42589 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2136:
#line 14221 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 42599 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2137:
#line 14227 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 42609 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2139:
#line 14237 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            const LEX_STRING prefix = (yyvsp[-2].lexer.lex_str);
            const LEX_STRING suffix = (yyvsp[0].lexer.lex_str);
            (yyval.lexer.lex_str).length = prefix.length + 1 + suffix.length + 1;
            (yyval.lexer.lex_str).str = static_cast<char *>(YYTHD->alloc((yyval.lexer.lex_str).length));
            if ((yyval.lexer.lex_str).str == nullptr) YYABORT;  // OOM
            strxnmov((yyval.lexer.lex_str).str, (yyval.lexer.lex_str).length, prefix.str, ".", suffix.str, nullptr);
          }
#line 42622 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2140:
#line 14246 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            const LEX_CSTRING prefix{STRING_WITH_LEN("default")};
            const LEX_STRING suffix = (yyvsp[0].lexer.lex_str);
            (yyval.lexer.lex_str).length = prefix.length + 1 + suffix.length + 1;
            (yyval.lexer.lex_str).str = static_cast<char *>(YYTHD->alloc((yyval.lexer.lex_str).length));
            if ((yyval.lexer.lex_str).str == nullptr) YYABORT;  // OOM
            strxnmov((yyval.lexer.lex_str).str, (yyval.lexer.lex_str).length, prefix.str, ".", suffix.str, nullptr);
          }
#line 42635 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2141:
#line 14258 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_REPLICA; }
#line 42641 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2142:
#line 14260 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
          if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
            MYSQL_YYABORT;  // OOM
          }
#line 42650 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2143:
#line 14265 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_SOURCE;
            /*
              RESET BINARY LOGS AND GTIDS should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 42670 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2145:
#line 14284 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { Lex->reset_replica_info.all= false; }
#line 42676 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2146:
#line 14285 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { Lex->reset_replica_info.all= true; }
#line 42682 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2147:
#line 14289 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 42688 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2148:
#line 14291 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_BIN_LOGS)
            {
              my_error(ER_RESET_SOURCE_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_BIN_LOGS);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 42703 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2149:
#line 14305 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 42713 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2150:
#line 14311 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 42719 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2152:
#line 14320 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 42727 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2153:
#line 14324 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 42740 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2154:
#line 14338 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.clear();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 42753 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2155:
#line 14349 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { Lex->type= 0; }
#line 42759 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2156:
#line 14350 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { Lex->type= 0; }
#line 42765 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2157:
#line 14351 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                         { Lex->type= ONLY_KILL_QUERY; }
#line 42771 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2158:
#line 14358 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->sphead) {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->query_block->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 42785 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2159:
#line 14397 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyloc), (yyvsp[-23].filetype),  // data_or_xml
                                      (yyvsp[-22].lock_type),  // load_data_lock
                                      (yyvsp[-20].is_not_empty),  // opt_local
                                      (yyvsp[-19].source_type),  // source type
                                      (yyvsp[-18].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-17].ulong_num),  // opt_source_count
                                      (yyvsp[-16].is_not_empty),  // opt_source_order
                                      (yyvsp[-15].on_duplicate), // opt_duplicate
                                      (yyvsp[-12].table), // table_ident
                                      (yyvsp[-11].string_list), // opt_use_partition
                                      (yyvsp[-10].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-9].lex_cstr), // opt_compression_algorithm
                                      (yyvsp[-8].string), // opt_xml_rows_identified_by
                                      (yyvsp[-7].field_separators), // opt_field_term
                                      (yyvsp[-6].line_separators), // opt_line_term
                                      (yyvsp[-5].ulong_num), // opt_ignore_lines
                                      (yyvsp[-4].item_list2), // opt_field_or_var_spec
                                      (yyvsp[-3].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[-3].load_set_list).set_expr_list,
                                      (yyvsp[-3].load_set_list).set_expr_str_list,
                                      (yyvsp[-2].ulong_num),  // opt_load_parallel
                                      (yyvsp[-1].ulonglong_number),  // opt_load_memory
                                      (yyvsp[0].is_not_empty)); // opt_load_algorithm
          }
#line 42815 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2160:
#line 14425 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_CSV; }
#line 42821 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2161:
#line 14426 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_XML; }
#line 42827 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2162:
#line 14430 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= false; }
#line 42833 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2163:
#line 14431 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= true; }
#line 42839 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2164:
#line 14435 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      {}
#line 42845 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2165:
#line 14436 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      {}
#line 42851 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2166:
#line 14440 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 42857 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2167:
#line 14441 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 42863 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2168:
#line 14442 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42869 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2169:
#line 14446 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     { (yyval.source_type) = LOAD_SOURCE_FILE; }
#line 42875 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2170:
#line 14447 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     { (yyval.source_type) = LOAD_SOURCE_URL; }
#line 42881 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2171:
#line 14448 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     { (yyval.source_type) = LOAD_SOURCE_S3; }
#line 42887 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2172:
#line 14452 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ulong_num)= 0; }
#line 42893 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2173:
#line 14454 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            const long n_files= atol((yyvsp[0].lexer.lex_str).str);
            // COUNT can be key word or identifier based on SQL mode
            if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "count") != 0) {
              YYTHD->syntax_error_at((yylsp[-1]), "COUNT expected");
              YYABORT;
            }
            if (n_files == 0) {
              YYTHD->syntax_error_at((yylsp[0]), "The number of files cannot be zero");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= n_files;
          }
#line 42911 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2174:
#line 14470 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 42917 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2175:
#line 14471 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                               { (yyval.is_not_empty)= true; }
#line 42923 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2176:
#line 14475 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 42929 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2178:
#line 14480 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 42935 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2179:
#line 14481 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 42941 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2180:
#line 14485 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.field_separators).cleanup(); }
#line 42947 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2181:
#line 14486 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                  { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 42953 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2182:
#line 14491 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 42962 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2184:
#line 14500 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 42971 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2185:
#line 14505 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 42981 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2186:
#line 14511 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 42990 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2187:
#line 14516 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 42999 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2188:
#line 14523 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.line_separators).cleanup(); }
#line 43005 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2189:
#line 14524 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 43011 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2190:
#line 14529 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 43020 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2192:
#line 14538 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 43029 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2193:
#line 14543 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 43038 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2194:
#line 14550 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.string)= nullptr; }
#line 43044 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2195:
#line 14551 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                 { (yyval.string)= (yyvsp[0].string); }
#line 43050 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2196:
#line 14555 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ulong_num)= 0; }
#line 43056 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2197:
#line 14556 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                        { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 43062 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2200:
#line 14565 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.item_list2)= nullptr; }
#line 43068 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2201:
#line 14566 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 43074 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2202:
#line 14567 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.item_list2)= nullptr; }
#line 43080 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2203:
#line 14572 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 43091 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2204:
#line 14579 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 43101 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2206:
#line 14589 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 43109 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2207:
#line 14595 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 43115 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2208:
#line 14596 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                     { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 43121 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2209:
#line 14601 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 43133 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2210:
#line 14609 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list((yyloc));
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list((yyloc));
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 43154 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2211:
#line 14629 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43174 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2212:
#line 14647 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.is_not_empty) = false; }
#line 43180 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2213:
#line 14648 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.is_not_empty) = true; }
#line 43186 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2214:
#line 14652 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.lex_cstr) = {}; }
#line 43192 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2215:
#line 14653 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                             { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 43198 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2216:
#line 14658 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.ulong_num) = 0; }
#line 43204 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2217:
#line 14659 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.ulong_num)= atol((yyvsp[0].lexer.lex_str).str); }
#line 43210 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2218:
#line 14663 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.ulonglong_number) = 0; }
#line 43216 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2219:
#line 14664 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                    { (yyval.ulonglong_number) = (yyvsp[0].ulonglong_number); }
#line 43222 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2220:
#line 14671 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 43231 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2221:
#line 14676 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 43241 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2222:
#line 14682 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 43250 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2223:
#line 14687 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 43259 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2224:
#line 14695 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == nullptr)
              MYSQL_YYABORT;
          }
#line 43270 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2225:
#line 14702 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == nullptr)
              MYSQL_YYABORT;
          }
#line 43281 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2226:
#line 14709 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == nullptr)
              MYSQL_YYABORT;
          }
#line 43292 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2227:
#line 14719 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == nullptr)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 43312 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2229:
#line 14738 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.item)= (yyvsp[0].item_num); }
#line 43318 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2230:
#line 14740 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].item_num) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 43329 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2233:
#line 14755 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 43345 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2234:
#line 14769 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.item)= (yyvsp[0].text_literal); }
#line 43351 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2235:
#line 14770 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.item)= (yyvsp[0].item_num); }
#line 43357 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2237:
#line 14773 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 43365 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2238:
#line 14777 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 43373 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2239:
#line 14781 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 43381 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2240:
#line 14785 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 43389 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2241:
#line 14789 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 43397 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2242:
#line 14793 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 43405 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2246:
#line 14806 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 43413 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2247:
#line 14810 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 43421 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2248:
#line 14820 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 43427 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2249:
#line 14821 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 43433 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2250:
#line 14822 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.item_num) = NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length); }
#line 43439 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2251:
#line 14828 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 43447 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2252:
#line 14832 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 43455 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2253:
#line 14836 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 43463 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2254:
#line 14842 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.is_not_empty) = false; }
#line 43469 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2255:
#line 14843 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.is_not_empty) = true; }
#line 43475 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2257:
#line 14857 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), nullptr, (yyvsp[-2].lexer.lex_str).str);
          }
#line 43483 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2258:
#line 14861 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            auto schema_name = YYCLIENT_NO_SCHEMA ? nullptr : (yyvsp[-4].lexer.lex_str).str;
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), schema_name, (yyvsp[-2].lexer.lex_str).str);
          }
#line 43494 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2259:
#line 14871 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 43502 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2260:
#line 14878 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyloc), (yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 43510 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2261:
#line 14885 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43518 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2263:
#line 14893 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 43526 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2265:
#line 14901 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 43534 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2266:
#line 14905 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 43544 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2267:
#line 14914 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == nullptr)
              MYSQL_YYABORT;
          }
#line 43554 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2268:
#line 14920 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            (yyval.table)= NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == nullptr)
              MYSQL_YYABORT;
          }
#line 43566 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2269:
#line 14931 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == nullptr)
              MYSQL_YYABORT;
          }
#line 43576 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2270:
#line 14937 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == nullptr)
              MYSQL_YYABORT;
          }
#line 43588 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2271:
#line 14947 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 43594 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2272:
#line 14949 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 43625 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2273:
#line 14979 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 43639 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2274:
#line 14992 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43653 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2275:
#line 15005 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 43670 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2276:
#line 15021 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 43687 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2277:
#line 15037 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 43705 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2280:
#line 15059 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 43713 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2281:
#line 15066 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 43730 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2282:
#line 15081 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 43736 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2283:
#line 15083 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == nullptr)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 43748 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2285:
#line 15095 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == nullptr)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 43759 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2286:
#line 15104 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 43765 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2287:
#line 15106 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == nullptr)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 43777 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2289:
#line 15118 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == nullptr)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 43788 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2290:
#line 15127 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 43794 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2291:
#line 15128 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 43800 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2292:
#line 15129 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                       { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 43806 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2296:
#line 15140 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), nullptr)))
              MYSQL_YYABORT;
          }
#line 43815 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2297:
#line 15145 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 43824 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2298:
#line 15153 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 43832 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2299:
#line 15157 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
          }
#line 43846 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2300:
#line 15170 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), nullptr)))
              MYSQL_YYABORT;
          }
#line 43855 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2301:
#line 15175 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 43864 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2302:
#line 15183 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 43874 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2470:
#line 15413 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            push_warning_printf(thd, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_IDENT,
                                ER_THD(thd, ER_WARN_DEPRECATED_IDENT), "FULL");
          }
#line 43885 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2778:
#line 15767 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.set)= NEW_PTN PT_set((yyloc), (yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 43893 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2779:
#line 15776 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyloc), (yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 43901 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2780:
#line 15780 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyloc), (yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 43909 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2781:
#line 15784 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyloc), (yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 43917 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2782:
#line 15788 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 43928 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2783:
#line 15795 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyloc), (yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 43940 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2784:
#line 15803 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyloc), (yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 43952 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2785:
#line 15811 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyloc), (yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 43965 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2786:
#line 15823 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyloc), (yyvsp[0].user_list));
          }
#line 43973 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2787:
#line 15827 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyloc), role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 43982 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2788:
#line 15832 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyloc), role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 43991 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2789:
#line 15837 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role((yyloc), false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 44000 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2790:
#line 15842 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role((yyloc), false, (yyvsp[0].user_list), nullptr,
                                                   role_enum::ROLE_NONE);
          }
#line 44009 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2791:
#line 15847 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role((yyloc), false, (yyvsp[0].user_list), nullptr,
                                                   role_enum::ROLE_ALL);
          }
#line 44018 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2792:
#line 15852 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyloc), role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 44027 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2793:
#line 15859 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               { (yyval.user_list)= nullptr; }
#line 44033 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2794:
#line 15860 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               { (yyval.user_list)= (yyvsp[0].user_list); }
#line 44039 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2795:
#line 15865 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 44047 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2796:
#line 15869 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 44055 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2797:
#line 15876 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 44065 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2798:
#line 15882 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 44075 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2799:
#line 15890 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 44081 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2800:
#line 15896 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyloc), (yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 44092 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2801:
#line 15903 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyloc), (yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 44102 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2802:
#line 15912 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.option_value_list)= nullptr; }
#line 44108 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2803:
#line 15913 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 44114 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2804:
#line 15919 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yyloc), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 44122 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2805:
#line 15923 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyloc), (yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 44130 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2806:
#line 15931 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.node)= NEW_PTN PT_option_value_type((yyloc), (yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 44138 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2807:
#line 15934 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                      { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 44144 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2808:
#line 15938 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 44150 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2809:
#line 15939 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_PERSIST; }
#line 44156 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2810:
#line 15940 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                           { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 44162 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2811:
#line 15941 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 44168 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2812:
#line 15942 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 44174 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2813:
#line 15946 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 44180 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2814:
#line 15947 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 44186 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2815:
#line 15948 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 44192 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2816:
#line 15949 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 44198 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2817:
#line 15953 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_DEFAULT; }
#line 44204 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2818:
#line 15954 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_GLOBAL; }
#line 44210 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2819:
#line 15955 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 44216 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2820:
#line 15956 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 44222 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2821:
#line 15960 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_DEFAULT; }
#line 44228 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2822:
#line 15961 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_PERSIST; }
#line 44234 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2823:
#line 15962 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 44240 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2824:
#line 15963 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_GLOBAL; }
#line 44246 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2825:
#line 15964 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 44252 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2826:
#line 15965 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 44258 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2827:
#line 15971 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.option_value_following_option_type) = NEW_PTN PT_set_scoped_system_variable(
                (yyloc), (yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yyvsp[0].item));
          }
#line 44267 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2828:
#line 15980 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_variable((yyloc), (yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yylsp[0]), (yyvsp[0].item));
          }
#line 44275 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2829:
#line 15984 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 44283 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2830:
#line 15989 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_system_variable(
                (yyloc), (yyvsp[-3].var_type), (yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yyvsp[0].item));
          }
#line 44292 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2831:
#line 15994 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyloc), (yyvsp[0].lexer.charset));
          }
#line 44300 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2832:
#line 15998 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yyloc), (yylsp[-1]));
          }
#line 44311 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2833:
#line 16005 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 44319 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2834:
#line 16009 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names((yyloc), nullptr, nullptr);
          }
#line 44327 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2835:
#line 16016 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.bipartite_name) = Bipartite_name{{}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 44335 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2836:
#line 16020 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              Reject names prefixed by `GLOBAL.`, `LOCAL.`, or `SESSION.` --
              if one of those prefixes is there then we are parsing something
              like `GLOBAL.GLOBAL.foo` or `LOCAL.SESSION.bar` etc.
            */
            if (check_reserved_words((yyvsp[-2].lexer.lex_str).str)) {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
            (yyval.bipartite_name) = Bipartite_name{to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 44352 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2837:
#line 16033 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.bipartite_name) = Bipartite_name{{STRING_WITH_LEN("default")}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 44360 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2838:
#line 16040 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.bipartite_name) = Bipartite_name{{}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 44368 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2839:
#line 16044 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // disallow "SELECT @@global.global.variable"
            if (check_reserved_words((yyvsp[-2].lexer.lex_str).str)) {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
            (yyval.bipartite_name) = Bipartite_name{to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 44381 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2840:
#line 16056 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyloc), (yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 44389 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2841:
#line 16060 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyloc), (yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 44397 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2842:
#line 16067 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyloc), (yyvsp[0].num));
          }
#line 44405 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2843:
#line 16073 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.transaction_access_mode)= nullptr; }
#line 44411 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2844:
#line 16074 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                      { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 44417 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2845:
#line 16079 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyloc), (yyvsp[0].tx_isolation));
          }
#line 44425 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2846:
#line 16085 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.isolation_level)= nullptr; }
#line 44431 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2847:
#line 16086 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 44437 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2848:
#line 16090 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                            { (yyval.num)= true; }
#line 44443 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2849:
#line 16091 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                             { (yyval.num)= false; }
#line 44449 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2850:
#line 16095 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 44455 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2851:
#line 16096 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 44461 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2852:
#line 16097 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 44467 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2853:
#line 16098 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 44473 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2855:
#line 16103 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.item)= nullptr; }
#line 44479 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2856:
#line 16105 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 44487 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2857:
#line 16109 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 44495 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2858:
#line 16113 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 44503 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2859:
#line 16117 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 44511 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2860:
#line 16121 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 44519 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2861:
#line 16130 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 44534 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2862:
#line 16141 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 44540 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2863:
#line 16143 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 44551 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2868:
#line 16163 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 44580 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2869:
#line 16190 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ_NO_INSERT; }
#line 44586 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2870:
#line 16191 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_WRITE_DEFAULT; }
#line 44592 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2871:
#line 16192 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ; }
#line 44598 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2872:
#line 16197 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 44613 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2873:
#line 16208 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 44619 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2874:
#line 16210 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 44630 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2875:
#line 16221 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 44639 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2876:
#line 16229 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 44647 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2877:
#line 16236 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= (yyvsp[0].alter_instance_cmd);
          }
#line 44656 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2878:
#line 16243 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance((yyloc), ROTATE_INNODB_MASTER_KEY, EMPTY_CSTR);
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance((yyloc), ROTATE_BINLOG_MASTER_KEY, EMPTY_CSTR);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 44676 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2879:
#line 16259 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring("mysql_main"));
          }
#line 44684 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2880:
#line 16263 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring("mysql_main"));
          }
#line 44692 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2881:
#line 16266 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                   {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 44700 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2882:
#line 16269 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                                                        {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring((yyvsp[-4].lexer.lex_str)));
          }
#line 44708 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2883:
#line 16273 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), ALTER_INSTANCE_ENABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 44727 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2884:
#line 16288 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), ALTER_INSTANCE_DISABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 44746 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2885:
#line 16302 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                             {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), RELOAD_KEYRING, EMPTY_CSTR);
          }
#line 44754 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2886:
#line 16313 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 44762 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2887:
#line 16317 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 44770 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2888:
#line 16326 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 44778 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2889:
#line 16336 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 44787 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2890:
#line 16348 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 44797 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2891:
#line 16356 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 44803 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2892:
#line 16357 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 44809 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2893:
#line 16361 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 44815 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2894:
#line 16362 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 44821 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2895:
#line 16363 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 44827 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2896:
#line 16364 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 44833 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2897:
#line 16368 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 44839 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2898:
#line 16369 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 44845 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2899:
#line 16370 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 44851 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2900:
#line 16371 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 44857 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2901:
#line 16372 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 44863 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2902:
#line 16379 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->grant_if_exists = (yyvsp[-4].num);
            Lex->ignore_unknown_user = (yyvsp[0].num);
            auto *tmp= NEW_PTN PT_revoke_roles((yyloc), (yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list));
            MAKE_CMD(tmp);
          }
#line 44874 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2903:
#line 16386 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->grant_if_exists = (yyvsp[-7].num);
            Lex->ignore_unknown_user = (yyvsp[0].num);
            if (apply_privileges(YYTHD, *(yyvsp[-6].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-4].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-4].acl_type));
            lex->users_list= *(yyvsp[-1].user_list);
            MAKE_CMD_DCL_DUMMY();
          }
#line 44896 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2904:
#line 16404 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->grant_if_exists = (yyvsp[-2].num);
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 44906 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2905:
#line 16410 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-4].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-4].acl_type));
            lex->users_list= *(yyvsp[-1].user_list);
            lex->ignore_unknown_user = (yyvsp[0].num);
            MAKE_CMD_DCL_DUMMY();
          }
#line 44926 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2906:
#line 16426 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->grant_if_exists = (yyvsp[-8].num);
            Lex->ignore_unknown_user = (yyvsp[0].num);
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[-1].user_list);
            MAKE_CMD_DCL_DUMMY();
          }
#line 44938 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2907:
#line 16434 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->grant_if_exists = (yyvsp[-6].num);
            lex->ignore_unknown_user = (yyvsp[0].num);
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
            MAKE_CMD_DCL_DUMMY();
          }
#line 44953 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2908:
#line 16448 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto *tmp= NEW_PTN PT_grant_roles((yyloc), (yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 44962 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2909:
#line 16454 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
            MAKE_CMD_DCL_DUMMY();
          }
#line 44982 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2910:
#line 16470 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 44991 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2911:
#line 16475 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
            MAKE_CMD_DCL_DUMMY();
          }
#line 45008 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2912:
#line 16488 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
            MAKE_CMD_DCL_DUMMY();
          }
#line 45023 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2913:
#line 16501 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.acl_type)= Acl_type::TABLE; }
#line 45029 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2914:
#line 16502 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.acl_type)= Acl_type::TABLE; }
#line 45035 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2915:
#line 16503 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 45041 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2916:
#line 16504 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 45047 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2919:
#line 16514 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == nullptr || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 45057 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2920:
#line 16520 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 45067 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2921:
#line 16529 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].lex_cstring_list) == nullptr)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yyloc), (yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yyloc), (yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 45078 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2922:
#line 16536 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yyloc), (yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 45084 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2923:
#line 16538 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 45090 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2924:
#line 16540 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 45096 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2925:
#line 16542 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 45102 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2926:
#line 16544 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 45108 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2927:
#line 16546 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), DELETE_ACL); }
#line 45114 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2928:
#line 16548 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), 0); }
#line 45120 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2929:
#line 16550 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), INDEX_ACL); }
#line 45126 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2930:
#line 16552 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), ALTER_ACL); }
#line 45132 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2931:
#line 16554 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), CREATE_ACL); }
#line 45138 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2932:
#line 16556 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), DROP_ACL); }
#line 45144 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2933:
#line 16558 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), EXECUTE_ACL); }
#line 45150 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2934:
#line 16560 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), RELOAD_ACL); }
#line 45156 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2935:
#line 16562 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), SHUTDOWN_ACL); }
#line 45162 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2936:
#line 16564 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), PROCESS_ACL); }
#line 45168 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2937:
#line 16566 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), FILE_ACL); }
#line 45174 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2938:
#line 16568 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 45183 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2939:
#line 16573 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), SHOW_DB_ACL); }
#line 45189 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2940:
#line 16575 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 45207 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2941:
#line 16589 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-2]), CREATE_TMP_ACL); }
#line 45213 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2942:
#line 16591 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), LOCK_TABLES_ACL); }
#line 45219 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2943:
#line 16593 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), REPL_SLAVE_ACL); }
#line 45225 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2944:
#line 16595 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), REPL_CLIENT_ACL); }
#line 45231 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2945:
#line 16597 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), CREATE_VIEW_ACL); }
#line 45237 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2946:
#line 16599 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), SHOW_VIEW_ACL); }
#line 45243 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2947:
#line 16601 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), CREATE_PROC_ACL); }
#line 45249 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2948:
#line 16603 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), ALTER_PROC_ACL); }
#line 45255 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2949:
#line 16605 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), CREATE_USER_ACL); }
#line 45261 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2950:
#line 16607 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), EVENT_ACL); }
#line 45267 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2951:
#line 16609 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), TRIGGER_ACL); }
#line 45273 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2952:
#line 16611 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 45279 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2953:
#line 16613 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), CREATE_ROLE_ACL); }
#line 45285 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2954:
#line 16615 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), DROP_ROLE_ACL); }
#line 45291 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2955:
#line 16619 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.is_not_empty)= false; }
#line 45297 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2956:
#line 16620 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                { (yyval.is_not_empty)= true; }
#line 45303 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2961:
#line 16635 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 45317 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2962:
#line 16645 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 45331 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2963:
#line 16655 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 45345 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2964:
#line 16668 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_query_block()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 45363 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2965:
#line 16682 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->current_query_block()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 45379 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2966:
#line 16694 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->current_query_block()->db = nullptr;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 45395 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2967:
#line 16706 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == nullptr)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, nullptr,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 45411 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2968:
#line 16718 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            auto tmp = NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == nullptr)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, nullptr,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 45429 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2969:
#line 16735 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == nullptr || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45439 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2970:
#line 16741 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45449 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2971:
#line 16750 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == nullptr || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45459 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2972:
#line 16756 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45469 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2973:
#line 16764 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 45475 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2974:
#line 16765 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                          { (yyval.is_not_empty)= true; }
#line 45481 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2975:
#line 16769 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 45487 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2976:
#line 16770 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                       { (yyval.is_not_empty)= true; }
#line 45493 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2977:
#line 16775 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-2].ulong_num);
            m->init_registration= true;
            m->requires_registration= true;
            (yyval.lex_mfa) = m;
          }
#line 45507 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2978:
#line 16785 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-1].ulong_num);
            m->unregister= true;
            (yyval.lex_mfa) = m;
          }
#line 45520 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2979:
#line 16794 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-6].ulong_num);
            m->finish_registration= true;
            m->requires_registration= true;
            m->challenge_response= to_lex_cstring((yyvsp[0].lexer.lex_str));
            (yyval.lex_mfa) = m;
          }
#line 45535 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2980:
#line 16808 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 45546 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2981:
#line 16815 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[-2].lex_user);
            /* set $3 as first factor auth method */
            (yyvsp[0].lex_mfa)->nth_factor = 1;
            (yyvsp[0].lex_mfa)->passwordless = false;
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            /* set $2 as second factor auth method */
            (yyvsp[-1].lex_mfa)->nth_factor = 2;
            (yyvsp[-1].lex_mfa)->passwordless = true;
            if ((yyval.lex_user)->mfa_list.push_back((yyvsp[-1].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user)->with_initial_auth = true;
          }
#line 45564 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2982:
#line 16829 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 45574 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2983:
#line 16837 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lex_mfas) = {}; }
#line 45580 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2984:
#line 16839 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[0].lex_mfa)->nth_factor = 2;
            (yyval.lex_mfas) = {(yyvsp[0].lex_mfa), nullptr};
          }
#line 45589 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2985:
#line 16844 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[-2].lex_mfa)->nth_factor = 2;
            (yyvsp[0].lex_mfa)->nth_factor = 3;
            (yyval.lex_mfas) = {(yyvsp[-2].lex_mfa), (yyvsp[0].lex_mfa)};
          }
#line 45599 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2992:
#line 16862 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 45613 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2993:
#line 16875 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = EMPTY_CSTR;
            m->has_password_generator = true;
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password = true;
          }
#line 45628 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2994:
#line 16889 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->auth = EMPTY_CSTR;
            m->uses_identified_by_clause = false;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 45643 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2995:
#line 16903 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_authentication_string_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 45658 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2996:
#line 16917 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 45674 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2997:
#line 16932 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-3].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            m->has_password_generator = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 45690 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2998:
#line 16947 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
           {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 45700 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 2999:
#line 16953 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 45710 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3000:
#line 16959 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 45720 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3001:
#line 16970 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45733 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3002:
#line 16981 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45746 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3003:
#line 16990 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45757 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3004:
#line 16997 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
           {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45768 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3005:
#line 17006 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
          }
#line 45781 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3006:
#line 17015 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            (yyvsp[-1].lex_user)->discard_old_password = false;
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 45792 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3007:
#line 17022 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45803 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3008:
#line 17029 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45814 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3009:
#line 17037 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password= false;
            (yyvsp[-2].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 45825 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3010:
#line 17044 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password = (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 45835 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3011:
#line 17050 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 45847 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3012:
#line 17058 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            } else if ((yyvsp[-4].ulong_num) > (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_INVALID_ORDER, MYF(0), (yyvsp[-1].ulong_num), (yyvsp[-4].ulong_num));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->add_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 45868 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3013:
#line 17075 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 45880 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3014:
#line 17083 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->modify_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 45898 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3015:
#line 17097 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor = (yyvsp[0].ulong_num);
            m->drop_factor = true;
            if ((yyvsp[-2].lex_user)->add_mfa_identifications(m))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-2].lex_user);
           }
#line 45913 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3016:
#line 17108 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].ulong_num) == (yyvsp[0].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            LEX_MFA *m1 = NEW_PTN LEX_MFA;
            if (m1 == nullptr)
              MYSQL_YYABORT;  // OOM
            m1->nth_factor = (yyvsp[-2].ulong_num);
            m1->drop_factor = true;
            LEX_MFA *m2 = NEW_PTN LEX_MFA;
            if (m2 == nullptr)
              MYSQL_YYABORT;  // OOM
            m2->nth_factor = (yyvsp[0].ulong_num);
            m2->drop_factor = true;
            if ((yyvsp[-4].lex_user)->add_mfa_identifications(m1, m2))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-4].lex_user);
           }
#line 45937 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3017:
#line 17131 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "2") == 0) {
              (yyval.ulong_num) = 2;
            } else if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "3") == 0) {
              (yyval.ulong_num) = 3;
            } else {
               my_error(ER_WRONG_VALUE, MYF(0), "nth factor", (yyvsp[-1].lexer.lex_str).str);
               MYSQL_YYABORT;
            }
          }
#line 45952 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3018:
#line 17145 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45961 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3019:
#line 17150 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45970 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3020:
#line 17158 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
         {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 45979 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3021:
#line 17163 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45988 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3022:
#line 17170 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.lex_cstring_list)= nullptr; }
#line 45994 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3023:
#line 17171 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 46000 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3024:
#line 17176 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == nullptr || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 46010 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3025:
#line 17182 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 46020 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3027:
#line 17192 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 46028 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3028:
#line 17196 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 46036 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3029:
#line 17200 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 46044 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3030:
#line 17204 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 46052 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3031:
#line 17210 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 46058 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3032:
#line 17212 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->grant |= GRANT_ACL;}
#line 46064 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3033:
#line 17216 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 46070 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3034:
#line 17217 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                            { (yyval.is_not_empty)= true; }
#line 46076 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3035:
#line 17220 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 46082 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3036:
#line 17222 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 46090 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3037:
#line 17226 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 46099 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3038:
#line 17231 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 46105 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3039:
#line 17233 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 46111 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3040:
#line 17236 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { Lex->grant_as.grant_as_used = false; }
#line 46117 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3041:
#line 17238 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 46126 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3042:
#line 17245 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 46136 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3043:
#line 17250 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                   {}
#line 46142 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3044:
#line 17254 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 46148 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3045:
#line 17255 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    {}
#line 46154 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3046:
#line 17259 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46160 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3047:
#line 17260 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46166 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3048:
#line 17261 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46172 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3049:
#line 17265 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46178 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3050:
#line 17266 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46184 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3051:
#line 17267 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46190 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3052:
#line 17271 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 {}
#line 46196 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3053:
#line 17272 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        {}
#line 46202 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3054:
#line 17277 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 46215 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3055:
#line 17289 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 46228 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3056:
#line 17299 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 46238 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3057:
#line 17308 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 46248 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3058:
#line 17317 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 46258 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3059:
#line 17330 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.num)=1; }
#line 46264 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3060:
#line 17331 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.num)=1; }
#line 46270 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3061:
#line 17332 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    { (yyval.num)=0; }
#line 46276 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3064:
#line 17345 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_expression_body));
          }
#line 46284 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3065:
#line 17351 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 46290 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3066:
#line 17352 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 46296 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3067:
#line 17353 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 46302 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3068:
#line 17354 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 46308 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3069:
#line 17355 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 46314 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3070:
#line 17356 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 46320 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3071:
#line 17357 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 46331 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3072:
#line 17363 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= SELECT_ALL; }
#line 46337 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3073:
#line 17374 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 46348 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3074:
#line 17384 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 46354 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3075:
#line 17386 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 46360 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3076:
#line 17388 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 46366 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3090:
#line 17421 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older source servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= nullptr;
          }
#line 46381 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3091:
#line 17435 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 46389 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3092:
#line 17448 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 46395 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3093:
#line 17450 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 46401 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3094:
#line 17452 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {}
#line 46407 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3095:
#line 17457 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 46413 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3096:
#line 17462 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 46419 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3097:
#line 17464 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 46425 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3098:
#line 17466 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 46431 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3099:
#line 17470 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 46437 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3100:
#line 17472 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 46443 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3101:
#line 17474 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 46449 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3102:
#line 17479 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-1].table), nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= Table_ref::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 46489 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3104:
#line 17519 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the m_table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              m_table_list finally.

              @todo: Don't save the CREATE destination table in
                     Query_block::m_table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<Table_ref> save_list;
            Query_block * const save_query_block= Select;
            save_query_block->m_table_list.save_and_clear(&save_list);

            CONTEXTUALIZE_VIEW((yyvsp[-1].query_expression_body));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_query_block->m_table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_query_block.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_query_block.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_query_block);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 46541 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3105:
#line 17569 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_NONE; }
#line 46547 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3106:
#line 17570 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 46553 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3107:
#line 17571 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 46559 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3108:
#line 17572 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 46565 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3109:
#line 17583 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 46571 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3110:
#line 17585 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 46577 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3111:
#line 17590 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
            {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 46586 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3112:
#line 17596 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
            {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 46595 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3113:
#line 17614 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                               /* $12 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-10]).cpp.start;
            lex->create_info->options= (yyvsp[-9].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            // Default language is SQL
            lex->sp_chistics.language = {"SQL",3};

            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 46636 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3114:
#line 17651 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                               /* $14 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 46667 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3115:
#line 17694 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /* $9 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              if((yyvsp[-5].is_not_empty))
              {
                /*
                  IF NOT EXISTS clause is unsupported when creating a UDF with
                  the same name as a native function
                */
                my_error(ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              }
              else
                my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-6]).cpp.start;
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 46698 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3116:
#line 17727 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              if((yyvsp[-5].is_not_empty))
              {
                /*
                  IF NOT EXISTS clause is unsupported when creating a UDF with
                  the same name as a native function
                */
                my_error(ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              }
              else
                my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-6]).cpp.start;
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 46729 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3117:
#line 17760 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /* $5 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-3]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }


            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
            lex->create_info->options= (yyvsp[-2].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 46758 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3118:
#line 17786 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /* $8 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 46766 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3119:
#line 17792 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /* $12 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), nullptr, nullptr, &NULL_CSTR, nullptr,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));

            // Default language is SQL
            lex->sp_chistics.language = {"SQL",3};
          }
#line 46814 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3120:
#line 17836 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /* $14 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 46826 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3121:
#line 17844 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (sp->is_sql() && !(sp->m_flags & sp_head::HAS_RETURN)) {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 46882 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3124:
#line 17903 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            sp_head *sp = Lex->sphead;
            if (sp->is_sql()) {
               YYTHD->syntax_error();
               MYSQL_YYABORT;
            }
            sp->code = to_lex_cstring((yyvsp[0].lexer.lex_str));

            THD *thd = YYTHD;
            sp_finish_parsing(thd);
          }
#line 46898 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3125:
#line 17915 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if (!Lex->sphead->is_sql()) {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }

            THD *thd = YYTHD;
            sp_finish_parsing(thd);
          }
#line 46912 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3126:
#line 17930 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /*$4*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 46937 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3127:
#line 17951 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /*$6*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 46945 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3128:
#line 17956 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /*$9*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));

            // Default language is SQL
            lex->sp_chistics.language = {"SQL",3};
          }
#line 46960 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3129:
#line 17967 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /*$11*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 46972 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3130:
#line 17975 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {                     /*$13*/
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 46981 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3131:
#line 17985 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 46990 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3132:
#line 17990 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 46999 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3133:
#line 17995 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 47008 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3134:
#line 18000 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 47017 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3135:
#line 18005 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 47026 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3136:
#line 18010 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 47035 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3137:
#line 18017 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               { (yyval.is_not_empty)= false; }
#line 47041 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3138:
#line 18018 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                               { (yyval.is_not_empty)= true; }
#line 47047 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3139:
#line 18022 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), nullptr, 0);
            (yyval.xid)= xid;
          }
#line 47060 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3140:
#line 18031 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 47074 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3141:
#line 18041 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 47093 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3142:
#line 18058 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    {}
#line 47099 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3143:
#line 18059 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                    {}
#line 47105 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3144:
#line 18063 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.xa_option_type)= XA_NONE;        }
#line 47111 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3145:
#line 18064 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.xa_option_type)= XA_JOIN;        }
#line 47117 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3146:
#line 18065 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                        { (yyval.xa_option_type)= XA_RESUME;      }
#line 47123 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3147:
#line 18069 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                            { (yyval.xa_option_type)= XA_NONE;        }
#line 47129 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3148:
#line 18070 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                            { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 47135 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3149:
#line 18074 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.xa_option_type)= XA_NONE;        }
#line 47141 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3150:
#line 18076 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 47147 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3151:
#line 18078 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 47153 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3152:
#line 18082 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 47159 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3153:
#line 18083 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 47165 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3154:
#line 18084 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_PERSIST; }
#line 47171 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3156:
#line 18090 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 47179 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3157:
#line 18097 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
        {
          (yyval.install_component_set_element) = NEW_PTN PT_install_component_set_element {(yyvsp[-3].var_type), (yyvsp[-2].bipartite_name), (yyvsp[0].item)};
        }
#line 47187 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3158:
#line 18104 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.install_component_set_list) = NEW_PTN List<PT_install_component_set_element>;
            if (!(yyval.install_component_set_list))
              MYSQL_YYABORT; // OOM
            if ((yyval.install_component_set_list)->push_back((yyvsp[0].install_component_set_element)))
              MYSQL_YYABORT; // OOM
          }
#line 47199 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3159:
#line 18112 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.install_component_set_list) = (yyvsp[-2].install_component_set_list);
            if ((yyval.install_component_set_list)->push_back((yyvsp[0].install_component_set_element)))
              MYSQL_YYABORT; // OOM
          }
#line 47209 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3160:
#line 18121 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.install_component_set_list) = NEW_PTN List<PT_install_component_set_element>;
          }
#line 47217 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3161:
#line 18124 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                         { (yyval.install_component_set_list) = (yyvsp[0].install_component_set_list); }
#line 47223 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3162:
#line 18129 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
            (yyval.top_level_node) = nullptr;
          }
#line 47234 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3163:
#line 18136 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_install_component((yyloc), YYTHD, (yyvsp[-1].lex_str_list), (yyvsp[0].install_component_set_list));
          }
#line 47242 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3164:
#line 18143 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 47252 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3165:
#line 18149 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 47262 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3166:
#line 18158 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 47272 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3167:
#line 18164 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 47282 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3168:
#line 18173 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 47295 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3169:
#line 18191 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 47306 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3170:
#line 18201 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->first_factor_auth_info.auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-6].lex_user)->first_factor_auth_info.uses_identified_by_clause = true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 47327 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3171:
#line 18221 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 47335 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3172:
#line 18225 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 47343 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3173:
#line 18232 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 47351 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3174:
#line 18236 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 47359 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3175:
#line 18240 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 47367 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3176:
#line 18246 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
               { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 47373 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3177:
#line 18247 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                     { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 47379 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3178:
#line 18252 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 47390 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3179:
#line 18258 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                                                  { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 47396 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3180:
#line 18263 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 47407 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3181:
#line 18270 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 47418 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3182:
#line 18280 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            assert((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 47429 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3183:
#line 18287 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            assert((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            assert((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 47443 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3184:
#line 18299 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                  { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 47449 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3185:
#line 18300 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                  { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 47455 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3186:
#line 18304 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.resource_group_priority_type).is_default= true; }
#line 47461 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3187:
#line 18306 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 47470 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3188:
#line 18313 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                 { (yyval.resource_group_state_type).is_default= true; }
#line 47476 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3189:
#line 18315 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 47485 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3190:
#line 18320 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 47494 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3191:
#line 18327 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.resource_group_flag_type)= false; }
#line 47500 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3192:
#line 18328 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
                      { (yyval.resource_group_flag_type)= true; }
#line 47506 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;

  case 3193:
#line 18334 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].lexer.lex_str).str[0] != '\0') {
              size_t eoff = 0;
              std::string emsg;
              if (!is_valid_json_syntax((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &eoff, &emsg,
                  JsonDepthErrorHandler)) {
                my_error(ER_INVALID_JSON_ATTRIBUTE, MYF(0),
                         emsg.c_str(), eoff, (yyvsp[0].lexer.lex_str).str+eoff);
                MYSQL_YYABORT;
              }
            }
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 47524 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"
    break;


#line 47528 "/mnt/jenkins/workspace/percona-xtrabackup-8.0-RELEASE/test/percona-xtrabackup/sql/sql_yacc.cc"

      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */
  {
    const int yylhs = yyr1[yyn] - YYNTOKENS;
    const int yyi = yypgoto[yylhs] + *yyssp;
    yystate = (0 <= yyi && yyi <= YYLAST && yycheck[yyi] == *yyssp
               ? yytable[yyi]
               : yydefgoto[yylhs]);
  }

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = YY_CAST (char *, YYSTACK_ALLOC (YY_CAST (YYSIZE_T, yymsg_alloc)));
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:
  /* Pacify compilers when the user code never invokes YYERROR and the
     label yyerrorlab therefore never appears in user code.  */
  if (0)
    YYERROR;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;


/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;


#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif


/*-----------------------------------------------------.
| yyreturn -- parsing is finished, return the result.  |
`-----------------------------------------------------*/
yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[+*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
